Project:               md201x
File:                  file:/home/yusaku/truestudio-workspace/md201x/Src/main.cpp
Language:              GNU C++
Index Version:         201.0
Build Configuration:   Debug
Context:               file:/home/yusaku/truestudio-workspace/md201x/Src/main.cpp
   C++, {}
Versions in Index:     1
   C++: {}; 0 macros, 3 includes, 68 names;

Include Search Path (option -I):
   /home/yusaku/truestudio-workspace/md201x/Inc
   /home/yusaku/truestudio-workspace/md201x/Debug/Inc
   Inc
   /home/yusaku/truestudio-workspace/md201x/Drivers/STM32F1xx_HAL_Driver/Inc
   /home/yusaku/truestudio-workspace/md201x/Debug/Drivers/STM32F1xx_HAL_Driver/Inc
   Drivers/STM32F1xx_HAL_Driver/Inc
   /home/yusaku/truestudio-workspace/md201x/Drivers/STM32F1xx_HAL_Driver/Inc/Legacy
   /home/yusaku/truestudio-workspace/md201x/Debug/Drivers/STM32F1xx_HAL_Driver/Inc/Legacy
   Drivers/STM32F1xx_HAL_Driver/Inc/Legacy
   /home/yusaku/truestudio-workspace/md201x/Drivers/CMSIS/Device/ST/STM32F1xx/Include
   /home/yusaku/truestudio-workspace/md201x/Debug/Drivers/CMSIS/Device/ST/STM32F1xx/Include
   Drivers/CMSIS/Device/ST/STM32F1xx/Include
   /home/yusaku/truestudio-workspace/md201x/Drivers/CMSIS/Include
   /home/yusaku/truestudio-workspace/md201x/Debug/Drivers/CMSIS/Include
   Drivers/CMSIS/Include
   /home/yusaku/Atollic/TrueSTUDIO/ARMTools/arm-atollic-eabi/include/c++/6.3.1
   /home/yusaku/Atollic/TrueSTUDIO/ARMTools/arm-atollic-eabi/include/c++/6.3.1/arm-atollic-eabi/armv7-m
   /home/yusaku/Atollic/TrueSTUDIO/ARMTools/arm-atollic-eabi/include/c++/6.3.1/backward
   /home/yusaku/Atollic/TrueSTUDIO/ARMTools/lib/gcc/arm-atollic-eabi/6.3.1/include
   /home/yusaku/Atollic/TrueSTUDIO/ARMTools/lib/gcc/arm-atollic-eabi/6.3.1/include-fixed
   /home/yusaku/Atollic/TrueSTUDIO/ARMTools/arm-atollic-eabi/include

Macro definitions (option -D):
   __ACCUM_EPSILON__=0x1P-15K
   __ACCUM_FBIT__=15
   __ACCUM_IBIT__=16
   __ACCUM_MAX__=0X7FFFFFFFP-15K
   __ACCUM_MIN__=(-0X1P15K-0X1P15K)
   __APCS_32__=1
   __ARMEL__=1
   __ARM_32BIT_STATE=1
   __ARM_ARCH=7
   __ARM_ARCH_7M__=1
   __ARM_ARCH_EXT_IDIV__=1
   __ARM_ARCH_ISA_THUMB=2
   __ARM_ARCH_PROFILE=77
   __ARM_ASM_SYNTAX_UNIFIED__=1
   __ARM_EABI__=1
   __ARM_FEATURE_CLZ=1
   __ARM_FEATURE_IDIV=1
   __ARM_FEATURE_LDREX=7
   __ARM_FEATURE_QBIT=1
   __ARM_FEATURE_SAT=1
   __ARM_FEATURE_UNALIGNED=1
   __ARM_PCS=1
   __ARM_SIZEOF_MINIMAL_ENUM=1
   __ARM_SIZEOF_WCHAR_T=4
   __arm__=1
   __ATOMIC_ACQUIRE=2
   __ATOMIC_ACQ_REL=4
   __ATOMIC_CONSUME=1
   __ATOMIC_RELAXED=0
   __ATOMIC_RELEASE=3
   __ATOMIC_SEQ_CST=5
   __BIGGEST_ALIGNMENT__=8
   __BYTE_ORDER__=__ORDER_LITTLE_ENDIAN__
   __CHAR16_TYPE__=short unsigned int
   __CHAR32_TYPE__=long unsigned int
   __CHAR_BIT__=8
   __CHAR_UNSIGNED__=1
   __cplusplus=201103L
   __cpp_alias_templates=200704
   __cpp_attributes=200809
   __cpp_binary_literals=201304
   __cpp_constexpr=200704
   __cpp_decltype=200707
   __cpp_delegating_constructors=200604
   __cpp_exceptions=199711
   __cpp_hex_float=201603
   __cpp_inheriting_constructors=200802
   __cpp_initializer_lists=200806
   __cpp_lambdas=200907
   __cpp_nsdmi=200809
   __cpp_range_based_for=200907
   __cpp_raw_strings=200710
   __cpp_ref_qualifiers=200710
   __cpp_rtti=199711
   __cpp_runtime_arrays=198712
   __cpp_rvalue_reference=200610
   __cpp_rvalue_references=200610
   __cpp_static_assert=200410
   __cpp_unicode_characters=200704
   __cpp_unicode_literals=200710
   __cpp_user_defined_literals=200809
   __cpp_variadic_templates=200704
   __DA_FBIT__=31
   __DA_IBIT__=32
   __DBL_DECIMAL_DIG__=17
   __DBL_DENORM_MIN__=double(4.9406564584124654e-324L)
   __DBL_DIG__=15
   __DBL_EPSILON__=double(2.2204460492503131e-16L)
   __DBL_HAS_DENORM__=1
   __DBL_HAS_INFINITY__=1
   __DBL_HAS_QUIET_NAN__=1
   __DBL_MANT_DIG__=53
   __DBL_MAX_10_EXP__=308
   __DBL_MAX_EXP__=1024
   __DBL_MAX__=double(1.7976931348623157e+308L)
   __DBL_MIN_10_EXP__=(-307)
   __DBL_MIN_EXP__=(-1021)
   __DBL_MIN__=double(2.2250738585072014e-308L)
   __DEC128_EPSILON__=1E-33DL
   __DEC128_MANT_DIG__=34
   __DEC128_MAX_EXP__=6145
   __DEC128_MAX__=9.999999999999999999999999999999999E6144DL
   __DEC128_MIN_EXP__=(-6142)
   __DEC128_MIN__=1E-6143DL
   __DEC128_SUBNORMAL_MIN__=0.000000000000000000000000000000001E-6143DL
   __DEC32_EPSILON__=1E-6DF
   __DEC32_MANT_DIG__=7
   __DEC32_MAX_EXP__=97
   __DEC32_MAX__=9.999999E96DF
   __DEC32_MIN_EXP__=(-94)
   __DEC32_MIN__=1E-95DF
   __DEC32_SUBNORMAL_MIN__=0.000001E-95DF
   __DEC64_EPSILON__=1E-15DD
   __DEC64_MANT_DIG__=16
   __DEC64_MAX_EXP__=385
   __DEC64_MAX__=9.999999999999999E384DD
   __DEC64_MIN_EXP__=(-382)
   __DEC64_MIN__=1E-383DD
   __DEC64_SUBNORMAL_MIN__=0.000000000000001E-383DD
   __DECIMAL_DIG__=17
   __DEC_EVAL_METHOD__=2
   __DEPRECATED=1
   __DQ_FBIT__=63
   __DQ_IBIT__=0
   __ELF__=1
   __EXCEPTIONS=1
   __FINITE_MATH_ONLY__=0
   __FLOAT_WORD_ORDER__=__ORDER_LITTLE_ENDIAN__
   __FLT_DECIMAL_DIG__=9
   __FLT_DENORM_MIN__=1.4012984643248171e-45F
   __FLT_DIG__=6
   __FLT_EPSILON__=1.1920928955078125e-7F
   __FLT_EVAL_METHOD__=0
   __FLT_HAS_DENORM__=1
   __FLT_HAS_INFINITY__=1
   __FLT_HAS_QUIET_NAN__=1
   __FLT_MANT_DIG__=24
   __FLT_MAX_10_EXP__=38
   __FLT_MAX_EXP__=128
   __FLT_MAX__=3.4028234663852886e+38F
   __FLT_MIN_10_EXP__=(-37)
   __FLT_MIN_EXP__=(-125)
   __FLT_MIN__=1.1754943508222875e-38F
   __FLT_RADIX__=2
   __FRACT_EPSILON__=0x1P-15R
   __FRACT_FBIT__=15
   __FRACT_IBIT__=0
   __FRACT_MAX__=0X7FFFP-15R
   __FRACT_MIN__=(-0.5R-0.5R)
   __GCC_ATOMIC_BOOL_LOCK_FREE=2
   __GCC_ATOMIC_CHAR16_T_LOCK_FREE=2
   __GCC_ATOMIC_CHAR32_T_LOCK_FREE=2
   __GCC_ATOMIC_CHAR_LOCK_FREE=2
   __GCC_ATOMIC_INT_LOCK_FREE=2
   __GCC_ATOMIC_LLONG_LOCK_FREE=1
   __GCC_ATOMIC_LONG_LOCK_FREE=2
   __GCC_ATOMIC_POINTER_LOCK_FREE=2
   __GCC_ATOMIC_SHORT_LOCK_FREE=2
   __GCC_ATOMIC_TEST_AND_SET_TRUEVAL=1
   __GCC_ATOMIC_WCHAR_T_LOCK_FREE=2
   __GCC_HAVE_SYNC_COMPARE_AND_SWAP_1=1
   __GCC_HAVE_SYNC_COMPARE_AND_SWAP_2=1
   __GCC_HAVE_SYNC_COMPARE_AND_SWAP_4=1
   __GCC_IEC_559=0
   __GCC_IEC_559_COMPLEX=0
   __GNUC_MINOR__=3
   __GNUC_PATCHLEVEL__=1
   __GNUC_STDC_INLINE__=1
   __GNUC__=6
   __GNUG__=6
   __GXX_ABI_VERSION=1010
   __GXX_EXPERIMENTAL_CXX0X__=1
   __GXX_RTTI=1
   __GXX_TYPEINFO_EQUALITY_INLINE=0
   __GXX_WEAK__=1
   __has_include(STR)=__has_include__(STR)
   __has_include_next(STR)=__has_include_next__(STR)
   __HA_FBIT__=7
   __HA_IBIT__=8
   __HQ_FBIT__=15
   __HQ_IBIT__=0
   __INT16_C(c)=c
   __INT16_MAX__=0x7fff
   __INT16_TYPE__=short int
   __INT32_C(c)=c ## L
   __INT32_MAX__=0x7fffffffL
   __INT32_TYPE__=long int
   __INT64_C(c)=c ## LL
   __INT64_MAX__=0x7fffffffffffffffLL
   __INT64_TYPE__=long long int
   __INT8_C(c)=c
   __INT8_MAX__=0x7f
   __INT8_TYPE__=signed char
   __INTMAX_C(c)=c ## LL
   __INTMAX_MAX__=0x7fffffffffffffffLL
   __INTMAX_TYPE__=long long int
   __INTPTR_MAX__=0x7fffffff
   __INTPTR_TYPE__=int
   __INT_FAST16_MAX__=0x7fffffff
   __INT_FAST16_TYPE__=int
   __INT_FAST32_MAX__=0x7fffffff
   __INT_FAST32_TYPE__=int
   __INT_FAST64_MAX__=0x7fffffffffffffffLL
   __INT_FAST64_TYPE__=long long int
   __INT_FAST8_MAX__=0x7fffffff
   __INT_FAST8_TYPE__=int
   __INT_LEAST16_MAX__=0x7fff
   __INT_LEAST16_TYPE__=short int
   __INT_LEAST32_MAX__=0x7fffffffL
   __INT_LEAST32_TYPE__=long int
   __INT_LEAST64_MAX__=0x7fffffffffffffffLL
   __INT_LEAST64_TYPE__=long long int
   __INT_LEAST8_MAX__=0x7f
   __INT_LEAST8_TYPE__=signed char
   __INT_MAX__=0x7fffffff
   __LACCUM_EPSILON__=0x1P-31LK
   __LACCUM_FBIT__=31
   __LACCUM_IBIT__=32
   __LACCUM_MAX__=0X7FFFFFFFFFFFFFFFP-31LK
   __LACCUM_MIN__=(-0X1P31LK-0X1P31LK)
   __LDBL_DENORM_MIN__=4.9406564584124654e-324L
   __LDBL_DIG__=15
   __LDBL_EPSILON__=2.2204460492503131e-16L
   __LDBL_HAS_DENORM__=1
   __LDBL_HAS_INFINITY__=1
   __LDBL_HAS_QUIET_NAN__=1
   __LDBL_MANT_DIG__=53
   __LDBL_MAX_10_EXP__=308
   __LDBL_MAX_EXP__=1024
   __LDBL_MAX__=1.7976931348623157e+308L
   __LDBL_MIN_10_EXP__=(-307)
   __LDBL_MIN_EXP__=(-1021)
   __LDBL_MIN__=2.2250738585072014e-308L
   __LFRACT_EPSILON__=0x1P-31LR
   __LFRACT_FBIT__=31
   __LFRACT_IBIT__=0
   __LFRACT_MAX__=0X7FFFFFFFP-31LR
   __LFRACT_MIN__=(-0.5LR-0.5LR)
   __LLACCUM_EPSILON__=0x1P-31LLK
   __LLACCUM_FBIT__=31
   __LLACCUM_IBIT__=32
   __LLACCUM_MAX__=0X7FFFFFFFFFFFFFFFP-31LLK
   __LLACCUM_MIN__=(-0X1P31LLK-0X1P31LLK)
   __LLFRACT_EPSILON__=0x1P-63LLR
   __LLFRACT_FBIT__=63
   __LLFRACT_IBIT__=0
   __LLFRACT_MAX__=0X7FFFFFFFFFFFFFFFP-63LLR
   __LLFRACT_MIN__=(-0.5LLR-0.5LLR)
   __LONG_LONG_MAX__=0x7fffffffffffffffLL
   __LONG_MAX__=0x7fffffffL
   __NO_INLINE__=1
   __ORDER_BIG_ENDIAN__=4321
   __ORDER_LITTLE_ENDIAN__=1234
   __ORDER_PDP_ENDIAN__=3412
   __PRAGMA_REDEFINE_EXTNAME=1
   __PTRDIFF_MAX__=0x7fffffff
   __PTRDIFF_TYPE__=int
   __QQ_FBIT__=7
   __QQ_IBIT__=0
   __REGISTER_PREFIX__=
   __SACCUM_EPSILON__=0x1P-7HK
   __SACCUM_FBIT__=7
   __SACCUM_IBIT__=8
   __SACCUM_MAX__=0X7FFFP-7HK
   __SACCUM_MIN__=(-0X1P7HK-0X1P7HK)
   __SA_FBIT__=15
   __SA_IBIT__=16
   __SCHAR_MAX__=0x7f
   __SFRACT_EPSILON__=0x1P-7HR
   __SFRACT_FBIT__=7
   __SFRACT_IBIT__=0
   __SFRACT_MAX__=0X7FP-7HR
   __SFRACT_MIN__=(-0.5HR-0.5HR)
   __SHRT_MAX__=0x7fff
   __SIG_ATOMIC_MAX__=0x7fffffff
   __SIG_ATOMIC_MIN__=(-__SIG_ATOMIC_MAX__ - 1)
   __SIG_ATOMIC_TYPE__=int
   __SIZEOF_DOUBLE__=8
   __SIZEOF_FLOAT__=4
   __SIZEOF_INT__=4
   __SIZEOF_LONG_DOUBLE__=8
   __SIZEOF_LONG_LONG__=8
   __SIZEOF_LONG__=4
   __SIZEOF_POINTER__=4
   __SIZEOF_PTRDIFF_T__=4
   __SIZEOF_SHORT__=2
   __SIZEOF_SIZE_T__=4
   __SIZEOF_WCHAR_T__=4
   __SIZEOF_WINT_T__=4
   __SIZE_MAX__=0xffffffffU
   __SIZE_TYPE__=unsigned int
   __SOFTFP__=1
   __SQ_FBIT__=31
   __SQ_IBIT__=0
   __STDC_HOSTED__=1
   __STDC_UTF_16__=1
   __STDC_UTF_32__=1
   __STDC__=1
   __STRICT_ANSI__=1
   __TA_FBIT__=63
   __TA_IBIT__=64
   __thumb2__=1
   __THUMBEL__=1
   __THUMB_INTERWORK__=1
   __thumb__=1
   __TQ_FBIT__=127
   __TQ_IBIT__=0
   __UACCUM_EPSILON__=0x1P-16UK
   __UACCUM_FBIT__=16
   __UACCUM_IBIT__=16
   __UACCUM_MAX__=0XFFFFFFFFP-16UK
   __UACCUM_MIN__=0.0UK
   __UDA_FBIT__=32
   __UDA_IBIT__=32
   __UDQ_FBIT__=64
   __UDQ_IBIT__=0
   __UFRACT_EPSILON__=0x1P-16UR
   __UFRACT_FBIT__=16
   __UFRACT_IBIT__=0
   __UFRACT_MAX__=0XFFFFP-16UR
   __UFRACT_MIN__=0.0UR
   __UHA_FBIT__=8
   __UHA_IBIT__=8
   __UHQ_FBIT__=16
   __UHQ_IBIT__=0
   __UINT16_C(c)=c
   __UINT16_MAX__=0xffff
   __UINT16_TYPE__=short unsigned int
   __UINT32_C(c)=c ## UL
   __UINT32_MAX__=0xffffffffUL
   __UINT32_TYPE__=long unsigned int
   __UINT64_C(c)=c ## ULL
   __UINT64_MAX__=0xffffffffffffffffULL
   __UINT64_TYPE__=long long unsigned int
   __UINT8_C(c)=c
   __UINT8_MAX__=0xff
   __UINT8_TYPE__=unsigned char
   __UINTMAX_C(c)=c ## ULL
   __UINTMAX_MAX__=0xffffffffffffffffULL
   __UINTMAX_TYPE__=long long unsigned int
   __UINTPTR_MAX__=0xffffffffU
   __UINTPTR_TYPE__=unsigned int
   __UINT_FAST16_MAX__=0xffffffffU
   __UINT_FAST16_TYPE__=unsigned int
   __UINT_FAST32_MAX__=0xffffffffU
   __UINT_FAST32_TYPE__=unsigned int
   __UINT_FAST64_MAX__=0xffffffffffffffffULL
   __UINT_FAST64_TYPE__=long long unsigned int
   __UINT_FAST8_MAX__=0xffffffffU
   __UINT_FAST8_TYPE__=unsigned int
   __UINT_LEAST16_MAX__=0xffff
   __UINT_LEAST16_TYPE__=short unsigned int
   __UINT_LEAST32_MAX__=0xffffffffUL
   __UINT_LEAST32_TYPE__=long unsigned int
   __UINT_LEAST64_MAX__=0xffffffffffffffffULL
   __UINT_LEAST64_TYPE__=long long unsigned int
   __UINT_LEAST8_MAX__=0xff
   __UINT_LEAST8_TYPE__=unsigned char
   __ULACCUM_EPSILON__=0x1P-32ULK
   __ULACCUM_FBIT__=32
   __ULACCUM_IBIT__=32
   __ULACCUM_MAX__=0XFFFFFFFFFFFFFFFFP-32ULK
   __ULACCUM_MIN__=0.0ULK
   __ULFRACT_EPSILON__=0x1P-32ULR
   __ULFRACT_FBIT__=32
   __ULFRACT_IBIT__=0
   __ULFRACT_MAX__=0XFFFFFFFFP-32ULR
   __ULFRACT_MIN__=0.0ULR
   __ULLACCUM_EPSILON__=0x1P-32ULLK
   __ULLACCUM_FBIT__=32
   __ULLACCUM_IBIT__=32
   __ULLACCUM_MAX__=0XFFFFFFFFFFFFFFFFP-32ULLK
   __ULLACCUM_MIN__=0.0ULLK
   __ULLFRACT_EPSILON__=0x1P-64ULLR
   __ULLFRACT_FBIT__=64
   __ULLFRACT_IBIT__=0
   __ULLFRACT_MAX__=0XFFFFFFFFFFFFFFFFP-64ULLR
   __ULLFRACT_MIN__=0.0ULLR
   __UQQ_FBIT__=8
   __UQQ_IBIT__=0
   __USACCUM_EPSILON__=0x1P-8UHK
   __USACCUM_FBIT__=8
   __USACCUM_IBIT__=8
   __USACCUM_MAX__=0XFFFFP-8UHK
   __USACCUM_MIN__=0.0UHK
   __USA_FBIT__=16
   __USA_IBIT__=16
   __USER_LABEL_PREFIX__=
   __USES_INITFINI__=1
   __USFRACT_EPSILON__=0x1P-8UHR
   __USFRACT_FBIT__=8
   __USFRACT_IBIT__=0
   __USFRACT_MAX__=0XFFP-8UHR
   __USFRACT_MIN__=0.0UHR
   __USQ_FBIT__=32
   __USQ_IBIT__=0
   __UTA_FBIT__=64
   __UTA_IBIT__=64
   __UTQ_FBIT__=128
   __UTQ_IBIT__=0
   __VERSION__="6.3.1 20170215 (release) [ARM/embedded-6-branch revision 245512]"
   __VFP_FP__=1
   __WCHAR_MAX__=0xffffffffU
   __WCHAR_MIN__=0U
   __WCHAR_TYPE__=unsigned int
   __WCHAR_UNSIGNED__=1
   __WINT_MAX__=0xffffffffU
   __WINT_MIN__=0U
   __WINT_TYPE__=unsigned int

Macro definitions (from language + headers in index):
   AFIO_DBGAFR_CONFIG(DBGAFR_SWJCFG)=do{ uint32_t tmpreg = AFIO->MAPR; tmpreg &= ~AFIO_MAPR_SWJ_CFG_Msk; tmpreg |= DBGAFR_SWJCFG; AFIO->MAPR = tmpreg; }while(0U)
   AFIO_EVENTOUT_PIN_0=AFIO_EVCR_PIN_PX0
   AFIO_EVENTOUT_PIN_10=AFIO_EVCR_PIN_PX10
   AFIO_EVENTOUT_PIN_11=AFIO_EVCR_PIN_PX11
   AFIO_EVENTOUT_PIN_12=AFIO_EVCR_PIN_PX12
   AFIO_EVENTOUT_PIN_13=AFIO_EVCR_PIN_PX13
   AFIO_EVENTOUT_PIN_14=AFIO_EVCR_PIN_PX14
   AFIO_EVENTOUT_PIN_15=AFIO_EVCR_PIN_PX15
   AFIO_EVENTOUT_PIN_1=AFIO_EVCR_PIN_PX1
   AFIO_EVENTOUT_PIN_2=AFIO_EVCR_PIN_PX2
   AFIO_EVENTOUT_PIN_3=AFIO_EVCR_PIN_PX3
   AFIO_EVENTOUT_PIN_4=AFIO_EVCR_PIN_PX4
   AFIO_EVENTOUT_PIN_5=AFIO_EVCR_PIN_PX5
   AFIO_EVENTOUT_PIN_6=AFIO_EVCR_PIN_PX6
   AFIO_EVENTOUT_PIN_7=AFIO_EVCR_PIN_PX7
   AFIO_EVENTOUT_PIN_8=AFIO_EVCR_PIN_PX8
   AFIO_EVENTOUT_PIN_9=AFIO_EVCR_PIN_PX9
   AFIO_EVENTOUT_PORT_A=AFIO_EVCR_PORT_PA
   AFIO_EVENTOUT_PORT_B=AFIO_EVCR_PORT_PB
   AFIO_EVENTOUT_PORT_C=AFIO_EVCR_PORT_PC
   AFIO_EVENTOUT_PORT_D=AFIO_EVCR_PORT_PD
   AFIO_EVENTOUT_PORT_E=AFIO_EVCR_PORT_PE
   AFIO_REMAP_DISABLE(REMAP_PIN)=do{ uint32_t tmpreg = AFIO->MAPR; tmpreg |= AFIO_MAPR_SWJ_CFG; tmpreg &= ~REMAP_PIN; AFIO->MAPR = tmpreg; }while(0U)
   AFIO_REMAP_ENABLE(REMAP_PIN)=do{ uint32_t tmpreg = AFIO->MAPR; tmpreg |= AFIO_MAPR_SWJ_CFG; tmpreg |= REMAP_PIN; AFIO->MAPR = tmpreg; }while(0U)
   AFIO_REMAP_PARTIAL(REMAP_PIN,REMAP_PIN_MASK)=do{ uint32_t tmpreg = AFIO->MAPR; tmpreg &= ~REMAP_PIN_MASK; tmpreg |= AFIO_MAPR_SWJ_CFG; tmpreg |= REMAP_PIN; AFIO->MAPR = tmpreg; }while(0U)
   assert_param(expr)=((void)0U)
   BDCR_REG_INDEX=((uint8_t)2)
   BUFSIZ=1024
   CLEAR_BIT(REG,BIT)=((REG) &= ~(BIT))
   CLEAR_REG(REG)=((REG) = (0x0))
   CLOCKSWITCH_TIMEOUT_VALUE=5000
   CR_REG_INDEX=((uint8_t)1)
   CSR_REG_INDEX=((uint8_t)3)
   DMA_CIRCULAR=((uint32_t)DMA_CCR_CIRC)
   DMA_FLAG_GL1=0x00000001U
   DMA_FLAG_GL2=0x00000010U
   DMA_FLAG_GL3=0x00000100U
   DMA_FLAG_GL4=0x00001000U
   DMA_FLAG_GL5=0x00010000U
   DMA_FLAG_GL6=0x00100000U
   DMA_FLAG_GL7=0x01000000U
   DMA_FLAG_HT1=0x00000004U
   DMA_FLAG_HT2=0x00000040U
   DMA_FLAG_HT3=0x00000400U
   DMA_FLAG_HT4=0x00004000U
   DMA_FLAG_HT5=0x00040000U
   DMA_FLAG_HT6=0x00400000U
   DMA_FLAG_HT7=0x04000000U
   DMA_FLAG_TC1=0x00000002U
   DMA_FLAG_TC2=0x00000020U
   DMA_FLAG_TC3=0x00000200U
   DMA_FLAG_TC4=0x00002000U
   DMA_FLAG_TC5=0x00020000U
   DMA_FLAG_TC6=0x00200000U
   DMA_FLAG_TC7=0x02000000U
   DMA_FLAG_TE1=0x00000008U
   DMA_FLAG_TE2=0x00000080U
   DMA_FLAG_TE3=0x00000800U
   DMA_FLAG_TE4=0x00008000U
   DMA_FLAG_TE5=0x00080000U
   DMA_FLAG_TE6=0x00800000U
   DMA_FLAG_TE7=0x08000000U
   DMA_IT_HT=((uint32_t)DMA_CCR_HTIE)
   DMA_IT_TC=((uint32_t)DMA_CCR_TCIE)
   DMA_IT_TE=((uint32_t)DMA_CCR_TEIE)
   DMA_MDATAALIGN_BYTE=0x00000000U
   DMA_MDATAALIGN_HALFWORD=((uint32_t)DMA_CCR_MSIZE_0)
   DMA_MDATAALIGN_WORD=((uint32_t)DMA_CCR_MSIZE_1)
   DMA_MEMORY_TO_MEMORY=((uint32_t)DMA_CCR_MEM2MEM)
   DMA_MEMORY_TO_PERIPH=((uint32_t)DMA_CCR_DIR)
   DMA_MINC_DISABLE=0x00000000U
   DMA_MINC_ENABLE=((uint32_t)DMA_CCR_MINC)
   DMA_NORMAL=0x00000000U
   DMA_PDATAALIGN_BYTE=0x00000000U
   DMA_PDATAALIGN_HALFWORD=((uint32_t)DMA_CCR_PSIZE_0)
   DMA_PDATAALIGN_WORD=((uint32_t)DMA_CCR_PSIZE_1)
   DMA_PERIPH_TO_MEMORY=0x00000000U
   DMA_PINC_DISABLE=0x00000000U
   DMA_PINC_ENABLE=((uint32_t)DMA_CCR_PINC)
   DMA_PRIORITY_HIGH=((uint32_t)DMA_CCR_PL_1)
   DMA_PRIORITY_LOW=0x00000000U
   DMA_PRIORITY_MEDIUM=((uint32_t)DMA_CCR_PL_0)
   DMA_PRIORITY_VERY_HIGH=((uint32_t)DMA_CCR_PL)
   DP83848_PHY_ADDRESS=0x01U
   EOF=(-1)
   ETH_RXBUFNB=((uint32_t)8)
   ETH_RX_BUF_SIZE=ETH_MAX_PACKET_SIZE
   ETH_TXBUFNB=((uint32_t)4)
   ETH_TX_BUF_SIZE=ETH_MAX_PACKET_SIZE
   FILENAME_MAX=1024
   FLASHSIZE_BASE_ADDRESS=FLASHSIZE_BASE
   FLASH_BANK_1=1U
   FLASH_FLAG_BSY=FLASH_SR_BSY
   FLASH_FLAG_EOP=FLASH_SR_EOP
   FLASH_FLAG_OPTVERR=((OBR_REG_INDEX << 8U | FLASH_OBR_OPTERR))
   FLASH_FLAG_PGERR=FLASH_SR_PGERR
   FLASH_FLAG_WRPERR=FLASH_SR_WRPRTERR
   FLASH_IT_EOP=FLASH_CR_EOPIE
   FLASH_IT_ERR=FLASH_CR_ERRIE
   FLASH_LATENCY_0=0x00000000U
   FLASH_SIZE_DATA_REGISTER=0x1FFFF7E0U
   FLASH_TIMEOUT_VALUE=50000U
   FLASH_TYPEERASE_MASSERASE=0x02U
   FLASH_TYPEERASE_PAGES=0x00U
   FLASH_TYPEPROGRAM_DOUBLEWORD=0x03U
   FLASH_TYPEPROGRAM_HALFWORD=0x01U
   FLASH_TYPEPROGRAM_WORD=0x02U
   FOPEN_MAX=20
   getc(fp)=__sgetc_r(_REENT, fp)
   getchar()=getc(stdin)
   GPIO_MODE_AF_INPUT=GPIO_MODE_INPUT
   GPIO_MODE_AF_OD=0x00000012U
   GPIO_MODE_AF_PP=0x00000002U
   GPIO_MODE_ANALOG=0x00000003U
   GPIO_MODE_EVT_FALLING=0x10220000U
   GPIO_MODE_EVT_RISING=0x10120000U
   GPIO_MODE_EVT_RISING_FALLING=0x10320000U
   GPIO_MODE_INPUT=0x00000000U
   GPIO_MODE_IT_FALLING=0x10210000U
   GPIO_MODE_IT_RISING=0x10110000U
   GPIO_MODE_IT_RISING_FALLING=0x10310000U
   GPIO_MODE_OUTPUT_OD=0x00000011U
   GPIO_MODE_OUTPUT_PP=0x00000001U
   GPIO_NOPULL=0x00000000U
   GPIO_PIN_0=((uint16_t)0x0001)
   GPIO_PIN_10=((uint16_t)0x0400)
   GPIO_PIN_11=((uint16_t)0x0800)
   GPIO_PIN_12=((uint16_t)0x1000)
   GPIO_PIN_13=((uint16_t)0x2000)
   GPIO_PIN_14=((uint16_t)0x4000)
   GPIO_PIN_15=((uint16_t)0x8000)
   GPIO_PIN_1=((uint16_t)0x0002)
   GPIO_PIN_2=((uint16_t)0x0004)
   GPIO_PIN_3=((uint16_t)0x0008)
   GPIO_PIN_4=((uint16_t)0x0010)
   GPIO_PIN_5=((uint16_t)0x0020)
   GPIO_PIN_6=((uint16_t)0x0040)
   GPIO_PIN_7=((uint16_t)0x0080)
   GPIO_PIN_8=((uint16_t)0x0100)
   GPIO_PIN_9=((uint16_t)0x0200)
   GPIO_PIN_All=((uint16_t)0xFFFF)
   GPIO_PIN_MASK=0x0000FFFFU
   GPIO_PULLDOWN=0x00000002U
   GPIO_PULLUP=0x00000001U
   GPIO_SPEED_FREQ_HIGH=(GPIO_CRL_MODE0)
   GPIO_SPEED_FREQ_LOW=(GPIO_CRL_MODE0_1)
   GPIO_SPEED_FREQ_MEDIUM=(GPIO_CRL_MODE0_0)
   HAL_CAN_MODULE_ENABLED=
   HAL_CORTEX_MODULE_ENABLED=
   HAL_DMA_ERROR_NONE=0x00000000U
   HAL_DMA_ERROR_NOT_SUPPORTED=0x00000100U
   HAL_DMA_ERROR_NO_XFER=0x00000004U
   HAL_DMA_ERROR_TE=0x00000001U
   HAL_DMA_ERROR_TIMEOUT=0x00000020U
   HAL_DMA_MODULE_ENABLED=
   HAL_FLASH_ERROR_NONE=0x00U
   HAL_FLASH_ERROR_OPTV=0x04U
   HAL_FLASH_ERROR_PROG=0x01U
   HAL_FLASH_ERROR_WRP=0x02U
   HAL_FLASH_MODULE_ENABLED=
   HAL_GPIO_MODULE_ENABLED=
   HAL_IS_BIT_CLR(REG,BIT)=(((REG) & (BIT)) == 0U)
   HAL_IS_BIT_SET(REG,BIT)=(((REG) & (BIT)) != 0U)
   HAL_MAX_DELAY=0xFFFFFFFFU
   HAL_MODULE_ENABLED=
   HAL_PWR_MODULE_ENABLED=
   HAL_RCC_MODULE_ENABLED=
   HAL_TIM_MODULE_ENABLED=
   HAVE_INITFINI_ARRAY=1
   HSE_STARTUP_TIMEOUT=((uint32_t)100)
   HSE_TIMEOUT_VALUE=HSE_STARTUP_TIMEOUT
   HSE_VALUE=((uint32_t)8000000)
   HSI_TIMEOUT_VALUE=2U
   HSI_VALUE=((uint32_t)8000000)
   IS_AFIO_EVENTOUT_PIN(__PIN__)=(((__PIN__) == AFIO_EVENTOUT_PIN_0) || ((__PIN__) == AFIO_EVENTOUT_PIN_1) || ((__PIN__) == AFIO_EVENTOUT_PIN_2) || ((__PIN__) == AFIO_EVENTOUT_PIN_3) || ((__PIN__) == AFIO_EVENTOUT_PIN_4) || ((__PIN__) == AFIO_EVENTOUT_PIN_5) || ((__PIN__) == AFIO_EVENTOUT_PIN_6) || ((__PIN__) == AFIO_EVENTOUT_PIN_7) || ((__PIN__) == AFIO_EVENTOUT_PIN_8) || ((__PIN__) == AFIO_EVENTOUT_PIN_9) || ((__PIN__) == AFIO_EVENTOUT_PIN_10) || ((__PIN__) == AFIO_EVENTOUT_PIN_11) || ((__PIN__) == AFIO_EVENTOUT_PIN_12) || ((__PIN__) == AFIO_EVENTOUT_PIN_13) || ((__PIN__) == AFIO_EVENTOUT_PIN_14) || ((__PIN__) == AFIO_EVENTOUT_PIN_15))
   IS_AFIO_EVENTOUT_PORT(__PORT__)=(((__PORT__) == AFIO_EVENTOUT_PORT_A) || ((__PORT__) == AFIO_EVENTOUT_PORT_B) || ((__PORT__) == AFIO_EVENTOUT_PORT_C) || ((__PORT__) == AFIO_EVENTOUT_PORT_D) || ((__PORT__) == AFIO_EVENTOUT_PORT_E))
   IS_DMA_BUFFER_SIZE(SIZE)=(((SIZE) >= 0x1U) && ((SIZE) < 0x10000U))
   IS_DMA_DIRECTION(DIRECTION)=(((DIRECTION) == DMA_PERIPH_TO_MEMORY ) || ((DIRECTION) == DMA_MEMORY_TO_PERIPH) || ((DIRECTION) == DMA_MEMORY_TO_MEMORY))
   IS_DMA_MEMORY_DATA_SIZE(SIZE)=(((SIZE) == DMA_MDATAALIGN_BYTE) || ((SIZE) == DMA_MDATAALIGN_HALFWORD) || ((SIZE) == DMA_MDATAALIGN_WORD ))
   IS_DMA_MEMORY_INC_STATE(STATE)=(((STATE) == DMA_MINC_ENABLE) || ((STATE) == DMA_MINC_DISABLE))
   IS_DMA_MODE(MODE)=(((MODE) == DMA_NORMAL ) || ((MODE) == DMA_CIRCULAR))
   IS_DMA_PERIPHERAL_DATA_SIZE(SIZE)=(((SIZE) == DMA_PDATAALIGN_BYTE) || ((SIZE) == DMA_PDATAALIGN_HALFWORD) || ((SIZE) == DMA_PDATAALIGN_WORD))
   IS_DMA_PERIPHERAL_INC_STATE(STATE)=(((STATE) == DMA_PINC_ENABLE) || ((STATE) == DMA_PINC_DISABLE))
   IS_DMA_PRIORITY(PRIORITY)=(((PRIORITY) == DMA_PRIORITY_LOW ) || ((PRIORITY) == DMA_PRIORITY_MEDIUM) || ((PRIORITY) == DMA_PRIORITY_HIGH) || ((PRIORITY) == DMA_PRIORITY_VERY_HIGH))
   IS_FLASH_BANK(BANK)=(((BANK) == FLASH_BANK_1))
   IS_FLASH_LATENCY(__LATENCY__)=((__LATENCY__) == FLASH_LATENCY_0)
   IS_FLASH_TYPEERASE(VALUE)=(((VALUE) == FLASH_TYPEERASE_PAGES) || ((VALUE) == FLASH_TYPEERASE_MASSERASE))
   IS_FLASH_TYPEPROGRAM(VALUE)=(((VALUE) == FLASH_TYPEPROGRAM_HALFWORD) || ((VALUE) == FLASH_TYPEPROGRAM_WORD) || ((VALUE) == FLASH_TYPEPROGRAM_DOUBLEWORD))
   IS_FUNCTIONAL_STATE(STATE)=(((STATE) == DISABLE) || ((STATE) == ENABLE))
   IS_GPIO_MODE(MODE)=(((MODE) == GPIO_MODE_INPUT) || ((MODE) == GPIO_MODE_OUTPUT_PP) || ((MODE) == GPIO_MODE_OUTPUT_OD) || ((MODE) == GPIO_MODE_AF_PP) || ((MODE) == GPIO_MODE_AF_OD) || ((MODE) == GPIO_MODE_IT_RISING) || ((MODE) == GPIO_MODE_IT_FALLING) || ((MODE) == GPIO_MODE_IT_RISING_FALLING) || ((MODE) == GPIO_MODE_EVT_RISING) || ((MODE) == GPIO_MODE_EVT_FALLING) || ((MODE) == GPIO_MODE_EVT_RISING_FALLING) || ((MODE) == GPIO_MODE_ANALOG))
   IS_GPIO_PIN(PIN)=((((PIN) & GPIO_PIN_MASK ) != 0x00U) && (((PIN) & ~GPIO_PIN_MASK) == 0x00U))
   IS_GPIO_PIN_ACTION(ACTION)=(((ACTION) == GPIO_PIN_RESET) || ((ACTION) == GPIO_PIN_SET))
   IS_GPIO_PULL(PULL)=(((PULL) == GPIO_NOPULL) || ((PULL) == GPIO_PULLUP) || ((PULL) == GPIO_PULLDOWN))
   IS_GPIO_SPEED(SPEED)=(((SPEED) == GPIO_SPEED_FREQ_LOW) || ((SPEED) == GPIO_SPEED_FREQ_MEDIUM) || ((SPEED) == GPIO_SPEED_FREQ_HIGH))
   IS_NVIC_DEVICE_IRQ(IRQ)=((IRQ) >= (IRQn_Type)0x00U)
   IS_NVIC_PREEMPTION_PRIORITY(PRIORITY)=((PRIORITY) < 0x10U)
   IS_NVIC_PRIORITY_GROUP(GROUP)=(((GROUP) == NVIC_PRIORITYGROUP_0) || ((GROUP) == NVIC_PRIORITYGROUP_1) || ((GROUP) == NVIC_PRIORITYGROUP_2) || ((GROUP) == NVIC_PRIORITYGROUP_3) || ((GROUP) == NVIC_PRIORITYGROUP_4))
   IS_NVIC_SUB_PRIORITY(PRIORITY)=((PRIORITY) < 0x10U)
   IS_OB_DATA_ADDRESS(ADDRESS)=(((ADDRESS) == OB_DATA_ADDRESS_DATA0) || ((ADDRESS) == OB_DATA_ADDRESS_DATA1))
   IS_OB_IWDG_SOURCE(SOURCE)=(((SOURCE) == OB_IWDG_SW) || ((SOURCE) == OB_IWDG_HW))
   IS_OB_RDP_LEVEL(LEVEL)=(((LEVEL) == OB_RDP_LEVEL_0) || ((LEVEL) == OB_RDP_LEVEL_1))
   IS_OB_STDBY_SOURCE(SOURCE)=(((SOURCE) == OB_STDBY_NO_RST) || ((SOURCE) == OB_STDBY_RST))
   IS_OB_STOP_SOURCE(SOURCE)=(((SOURCE) == OB_STOP_NO_RST) || ((SOURCE) == OB_STOP_RST))
   IS_OB_WRP(PAGE)=(((PAGE) != 0x0000000U))
   IS_OPTIONBYTE(VALUE)=(((VALUE) <= (OPTIONBYTE_WRP | OPTIONBYTE_RDP | OPTIONBYTE_USER | OPTIONBYTE_DATA)))
   IS_PWR_PVD_LEVEL(LEVEL)=(((LEVEL) == PWR_PVDLEVEL_0) || ((LEVEL) == PWR_PVDLEVEL_1)|| ((LEVEL) == PWR_PVDLEVEL_2) || ((LEVEL) == PWR_PVDLEVEL_3)|| ((LEVEL) == PWR_PVDLEVEL_4) || ((LEVEL) == PWR_PVDLEVEL_5)|| ((LEVEL) == PWR_PVDLEVEL_6) || ((LEVEL) == PWR_PVDLEVEL_7))
   IS_PWR_PVD_MODE(MODE)=(((MODE) == PWR_PVD_MODE_IT_RISING)|| ((MODE) == PWR_PVD_MODE_IT_FALLING) || ((MODE) == PWR_PVD_MODE_IT_RISING_FALLING) || ((MODE) == PWR_PVD_MODE_EVENT_RISING) || ((MODE) == PWR_PVD_MODE_EVENT_FALLING) || ((MODE) == PWR_PVD_MODE_EVENT_RISING_FALLING) || ((MODE) == PWR_PVD_MODE_NORMAL))
   IS_PWR_REGULATOR(REGULATOR)=(((REGULATOR) == PWR_MAINREGULATOR_ON) || ((REGULATOR) == PWR_LOWPOWERREGULATOR_ON))
   IS_PWR_SLEEP_ENTRY(ENTRY)=(((ENTRY) == PWR_SLEEPENTRY_WFI) || ((ENTRY) == PWR_SLEEPENTRY_WFE))
   IS_PWR_STOP_ENTRY(ENTRY)=(((ENTRY) == PWR_STOPENTRY_WFI) || ((ENTRY) == PWR_STOPENTRY_WFE))
   IS_PWR_WAKEUP_PIN(PIN)=(((PIN) == PWR_WAKEUP_PIN1))
   IS_RCC_ADCPLLCLK_DIV(__ADCCLK__)=(((__ADCCLK__) == RCC_ADCPCLK2_DIV2) || ((__ADCCLK__) == RCC_ADCPCLK2_DIV4) || ((__ADCCLK__) == RCC_ADCPCLK2_DIV6) || ((__ADCCLK__) == RCC_ADCPCLK2_DIV8))
   IS_RCC_CALIBRATION_VALUE(__VALUE__)=((__VALUE__) <= 0x1FU)
   IS_RCC_CLOCKTYPE(CLK)=((((CLK) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK) || (((CLK) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK) || (((CLK) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1) || (((CLK) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2))
   IS_RCC_HCLK(__HCLK__)=(((__HCLK__) == RCC_SYSCLK_DIV1) || ((__HCLK__) == RCC_SYSCLK_DIV2) || ((__HCLK__) == RCC_SYSCLK_DIV4) || ((__HCLK__) == RCC_SYSCLK_DIV8) || ((__HCLK__) == RCC_SYSCLK_DIV16) || ((__HCLK__) == RCC_SYSCLK_DIV64) || ((__HCLK__) == RCC_SYSCLK_DIV128) || ((__HCLK__) == RCC_SYSCLK_DIV256) || ((__HCLK__) == RCC_SYSCLK_DIV512))
   IS_RCC_HSE(__HSE__)=(((__HSE__) == RCC_HSE_OFF) || ((__HSE__) == RCC_HSE_ON) || ((__HSE__) == RCC_HSE_BYPASS))
   IS_RCC_HSE_PREDIV(__DIV__)=(((__DIV__) == RCC_HSE_PREDIV_DIV1) || ((__DIV__) == RCC_HSE_PREDIV_DIV2))
   IS_RCC_HSI(__HSI__)=(((__HSI__) == RCC_HSI_OFF) || ((__HSI__) == RCC_HSI_ON))
   IS_RCC_LSE(__LSE__)=(((__LSE__) == RCC_LSE_OFF) || ((__LSE__) == RCC_LSE_ON) || ((__LSE__) == RCC_LSE_BYPASS))
   IS_RCC_LSI(__LSI__)=(((__LSI__) == RCC_LSI_OFF) || ((__LSI__) == RCC_LSI_ON))
   IS_RCC_MCO(__MCO__)=((__MCO__) == RCC_MCO)
   IS_RCC_MCO1SOURCE(__SOURCE__)=(((__SOURCE__) == RCC_MCO1SOURCE_SYSCLK) || ((__SOURCE__) == RCC_MCO1SOURCE_HSI) || ((__SOURCE__) == RCC_MCO1SOURCE_HSE) || ((__SOURCE__) == RCC_MCO1SOURCE_PLLCLK) || ((__SOURCE__) == RCC_MCO1SOURCE_NOCLOCK))
   IS_RCC_MCODIV(__DIV__)=(((__DIV__) == RCC_MCODIV_1))
   IS_RCC_OSCILLATORTYPE(__OSCILLATOR__)=(((__OSCILLATOR__) == RCC_OSCILLATORTYPE_NONE) || (((__OSCILLATOR__) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE) || (((__OSCILLATOR__) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI) || (((__OSCILLATOR__) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI) || (((__OSCILLATOR__) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE))
   IS_RCC_PCLK(__PCLK__)=(((__PCLK__) == RCC_HCLK_DIV1) || ((__PCLK__) == RCC_HCLK_DIV2) || ((__PCLK__) == RCC_HCLK_DIV4) || ((__PCLK__) == RCC_HCLK_DIV8) || ((__PCLK__) == RCC_HCLK_DIV16))
   IS_RCC_PERIPHCLOCK(__SELECTION__)=((((__SELECTION__) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC) || (((__SELECTION__) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC))
   IS_RCC_PLL(__PLL__)=(((__PLL__) == RCC_PLL_NONE) || ((__PLL__) == RCC_PLL_OFF) || ((__PLL__) == RCC_PLL_ON))
   IS_RCC_PLLSOURCE(__SOURCE__)=(((__SOURCE__) == RCC_PLLSOURCE_HSI_DIV2) || ((__SOURCE__) == RCC_PLLSOURCE_HSE))
   IS_RCC_PLL_MUL(__MUL__)=(((__MUL__) == RCC_PLL_MUL2) || ((__MUL__) == RCC_PLL_MUL3) || ((__MUL__) == RCC_PLL_MUL4) || ((__MUL__) == RCC_PLL_MUL5) || ((__MUL__) == RCC_PLL_MUL6) || ((__MUL__) == RCC_PLL_MUL7) || ((__MUL__) == RCC_PLL_MUL8) || ((__MUL__) == RCC_PLL_MUL9) || ((__MUL__) == RCC_PLL_MUL10) || ((__MUL__) == RCC_PLL_MUL11) || ((__MUL__) == RCC_PLL_MUL12) || ((__MUL__) == RCC_PLL_MUL13) || ((__MUL__) == RCC_PLL_MUL14) || ((__MUL__) == RCC_PLL_MUL15) || ((__MUL__) == RCC_PLL_MUL16))
   IS_RCC_RTCCLKSOURCE(__SOURCE__)=(((__SOURCE__) == RCC_RTCCLKSOURCE_NO_CLK) || ((__SOURCE__) == RCC_RTCCLKSOURCE_LSE) || ((__SOURCE__) == RCC_RTCCLKSOURCE_LSI) || ((__SOURCE__) == RCC_RTCCLKSOURCE_HSE_DIV128))
   IS_RCC_SYSCLKSOURCE(__SOURCE__)=(((__SOURCE__) == RCC_SYSCLKSOURCE_HSI) || ((__SOURCE__) == RCC_SYSCLKSOURCE_HSE) || ((__SOURCE__) == RCC_SYSCLKSOURCE_PLLCLK))
   IS_RCC_SYSCLKSOURCE_STATUS(__SOURCE__)=(((__SOURCE__) == RCC_SYSCLKSOURCE_STATUS_HSI) || ((__SOURCE__) == RCC_SYSCLKSOURCE_STATUS_HSE) || ((__SOURCE__) == RCC_SYSCLKSOURCE_STATUS_PLLCLK))
   IS_SYSTICK_CLK_SOURCE(SOURCE)=(((SOURCE) == SYSTICK_CLKSOURCE_HCLK) || ((SOURCE) == SYSTICK_CLKSOURCE_HCLK_DIV8))
   IS_TICKFREQ(FREQ)=(((FREQ) == HAL_TICK_FREQ_10HZ) || ((FREQ) == HAL_TICK_FREQ_100HZ) || ((FREQ) == HAL_TICK_FREQ_1KHZ))
   IS_TIM_AUTOMATIC_OUTPUT_STATE(STATE)=(((STATE) == TIM_AUTOMATICOUTPUT_ENABLE) || ((STATE) == TIM_AUTOMATICOUTPUT_DISABLE))
   IS_TIM_AUTORELOAD_PRELOAD(PRELOAD)=(((PRELOAD) == TIM_AUTORELOAD_PRELOAD_DISABLE) || ((PRELOAD) == TIM_AUTORELOAD_PRELOAD_ENABLE))
   IS_TIM_BREAK_POLARITY(POLARITY)=(((POLARITY) == TIM_BREAKPOLARITY_LOW) || ((POLARITY) == TIM_BREAKPOLARITY_HIGH))
   IS_TIM_BREAK_STATE(STATE)=(((STATE) == TIM_BREAK_ENABLE) || ((STATE) == TIM_BREAK_DISABLE))
   IS_TIM_CHANNELS(CHANNEL)=(((CHANNEL) == TIM_CHANNEL_1) || ((CHANNEL) == TIM_CHANNEL_2) || ((CHANNEL) == TIM_CHANNEL_3) || ((CHANNEL) == TIM_CHANNEL_4) || ((CHANNEL) == TIM_CHANNEL_ALL))
   IS_TIM_CLEARINPUT_FILTER(ICFILTER)=((ICFILTER) <= 0x0FU)
   IS_TIM_CLEARINPUT_POLARITY(POLARITY)=(((POLARITY) == TIM_CLEARINPUTPOLARITY_INVERTED) || ((POLARITY) == TIM_CLEARINPUTPOLARITY_NONINVERTED))
   IS_TIM_CLEARINPUT_PRESCALER(PRESCALER)=(((PRESCALER) == TIM_CLEARINPUTPRESCALER_DIV1) || ((PRESCALER) == TIM_CLEARINPUTPRESCALER_DIV2) || ((PRESCALER) == TIM_CLEARINPUTPRESCALER_DIV4) || ((PRESCALER) == TIM_CLEARINPUTPRESCALER_DIV8))
   IS_TIM_CLEARINPUT_SOURCE(SOURCE)=(((SOURCE) == TIM_CLEARINPUTSOURCE_ETR) || ((SOURCE) == TIM_CLEARINPUTSOURCE_NONE))
   IS_TIM_CLOCKDIVISION_DIV(DIV)=(((DIV) == TIM_CLOCKDIVISION_DIV1) || ((DIV) == TIM_CLOCKDIVISION_DIV2) || ((DIV) == TIM_CLOCKDIVISION_DIV4))
   IS_TIM_CLOCKFILTER(ICFILTER)=((ICFILTER) <= 0x0FU)
   IS_TIM_CLOCKPOLARITY(POLARITY)=(((POLARITY) == TIM_CLOCKPOLARITY_INVERTED) || ((POLARITY) == TIM_CLOCKPOLARITY_NONINVERTED) || ((POLARITY) == TIM_CLOCKPOLARITY_RISING) || ((POLARITY) == TIM_CLOCKPOLARITY_FALLING) || ((POLARITY) == TIM_CLOCKPOLARITY_BOTHEDGE))
   IS_TIM_CLOCKPRESCALER(PRESCALER)=(((PRESCALER) == TIM_CLOCKPRESCALER_DIV1) || ((PRESCALER) == TIM_CLOCKPRESCALER_DIV2) || ((PRESCALER) == TIM_CLOCKPRESCALER_DIV4) || ((PRESCALER) == TIM_CLOCKPRESCALER_DIV8))
   IS_TIM_CLOCKSOURCE(CLOCK)=(((CLOCK) == TIM_CLOCKSOURCE_INTERNAL) || ((CLOCK) == TIM_CLOCKSOURCE_ETRMODE2) || ((CLOCK) == TIM_CLOCKSOURCE_ITR0) || ((CLOCK) == TIM_CLOCKSOURCE_ITR1) || ((CLOCK) == TIM_CLOCKSOURCE_ITR2) || ((CLOCK) == TIM_CLOCKSOURCE_ITR3) || ((CLOCK) == TIM_CLOCKSOURCE_TI1ED) || ((CLOCK) == TIM_CLOCKSOURCE_TI1) || ((CLOCK) == TIM_CLOCKSOURCE_TI2) || ((CLOCK) == TIM_CLOCKSOURCE_ETRMODE1))
   IS_TIM_COMPLEMENTARY_CHANNELS(CHANNEL)=(((CHANNEL) == TIM_CHANNEL_1) || ((CHANNEL) == TIM_CHANNEL_2) || ((CHANNEL) == TIM_CHANNEL_3))
   IS_TIM_COUNTER_MODE(MODE)=(((MODE) == TIM_COUNTERMODE_UP) || ((MODE) == TIM_COUNTERMODE_DOWN) || ((MODE) == TIM_COUNTERMODE_CENTERALIGNED1) || ((MODE) == TIM_COUNTERMODE_CENTERALIGNED2) || ((MODE) == TIM_COUNTERMODE_CENTERALIGNED3))
   IS_TIM_DMA_BASE(BASE)=(((BASE) == TIM_DMABASE_CR1) || ((BASE) == TIM_DMABASE_CR2) || ((BASE) == TIM_DMABASE_SMCR) || ((BASE) == TIM_DMABASE_DIER) || ((BASE) == TIM_DMABASE_SR) || ((BASE) == TIM_DMABASE_EGR) || ((BASE) == TIM_DMABASE_CCMR1) || ((BASE) == TIM_DMABASE_CCMR2) || ((BASE) == TIM_DMABASE_CCER) || ((BASE) == TIM_DMABASE_CNT) || ((BASE) == TIM_DMABASE_PSC) || ((BASE) == TIM_DMABASE_ARR) || ((BASE) == TIM_DMABASE_RCR) || ((BASE) == TIM_DMABASE_CCR1) || ((BASE) == TIM_DMABASE_CCR2) || ((BASE) == TIM_DMABASE_CCR3) || ((BASE) == TIM_DMABASE_CCR4) || ((BASE) == TIM_DMABASE_BDTR) || ((BASE) == TIM_DMABASE_DCR))
   IS_TIM_DMA_LENGTH(LENGTH)=(((LENGTH) == TIM_DMABURSTLENGTH_1TRANSFER) || ((LENGTH) == TIM_DMABURSTLENGTH_2TRANSFERS) || ((LENGTH) == TIM_DMABURSTLENGTH_3TRANSFERS) || ((LENGTH) == TIM_DMABURSTLENGTH_4TRANSFERS) || ((LENGTH) == TIM_DMABURSTLENGTH_5TRANSFERS) || ((LENGTH) == TIM_DMABURSTLENGTH_6TRANSFERS) || ((LENGTH) == TIM_DMABURSTLENGTH_7TRANSFERS) || ((LENGTH) == TIM_DMABURSTLENGTH_8TRANSFERS) || ((LENGTH) == TIM_DMABURSTLENGTH_9TRANSFERS) || ((LENGTH) == TIM_DMABURSTLENGTH_10TRANSFERS) || ((LENGTH) == TIM_DMABURSTLENGTH_11TRANSFERS) || ((LENGTH) == TIM_DMABURSTLENGTH_12TRANSFERS) || ((LENGTH) == TIM_DMABURSTLENGTH_13TRANSFERS) || ((LENGTH) == TIM_DMABURSTLENGTH_14TRANSFERS) || ((LENGTH) == TIM_DMABURSTLENGTH_15TRANSFERS) || ((LENGTH) == TIM_DMABURSTLENGTH_16TRANSFERS) || ((LENGTH) == TIM_DMABURSTLENGTH_17TRANSFERS) || ((LENGTH) == TIM_DMABURSTLENGTH_18TRANSFERS))
   IS_TIM_DMA_SOURCE(SOURCE)=((((SOURCE) & 0xFFFF80FFU) == 0x00000000U) && ((SOURCE) != 0x00000000U))
   IS_TIM_ENCODER_MODE(MODE)=(((MODE) == TIM_ENCODERMODE_TI1) || ((MODE) == TIM_ENCODERMODE_TI2) || ((MODE) == TIM_ENCODERMODE_TI12))
   IS_TIM_EVENT_SOURCE(SOURCE)=((((SOURCE) & 0xFFFFFF00U) == 0x00000000U) && ((SOURCE) != 0x00000000U))
   IS_TIM_FAST_STATE(STATE)=(((STATE) == TIM_OCFAST_DISABLE) || ((STATE) == TIM_OCFAST_ENABLE))
   IS_TIM_IC_FILTER(ICFILTER)=((ICFILTER) <= 0x0FU)
   IS_TIM_IC_POLARITY(__POLARITY__)=(((__POLARITY__) == TIM_ICPOLARITY_RISING) || ((__POLARITY__) == TIM_ICPOLARITY_FALLING) || ((__POLARITY__) == TIM_ICPOLARITY_BOTHEDGE))
   IS_TIM_IC_PRESCALER(PRESCALER)=(((PRESCALER) == TIM_ICPSC_DIV1) || ((PRESCALER) == TIM_ICPSC_DIV2) || ((PRESCALER) == TIM_ICPSC_DIV4) || ((PRESCALER) == TIM_ICPSC_DIV8))
   IS_TIM_IC_SELECTION(SELECTION)=(((SELECTION) == TIM_ICSELECTION_DIRECTTI) || ((SELECTION) == TIM_ICSELECTION_INDIRECTTI) || ((SELECTION) == TIM_ICSELECTION_TRC))
   IS_TIM_INTERNAL_TRIGGEREVENT_SELECTION(SELECTION)=(((SELECTION) == TIM_TS_ITR0) || ((SELECTION) == TIM_TS_ITR1) || ((SELECTION) == TIM_TS_ITR2) || ((SELECTION) == TIM_TS_ITR3) || ((SELECTION) == TIM_TS_NONE))
   IS_TIM_LOCK_LEVEL(LEVEL)=(((LEVEL) == TIM_LOCKLEVEL_OFF) || ((LEVEL) == TIM_LOCKLEVEL_1) || ((LEVEL) == TIM_LOCKLEVEL_2) || ((LEVEL) == TIM_LOCKLEVEL_3))
   IS_TIM_MSM_STATE(STATE)=(((STATE) == TIM_MASTERSLAVEMODE_ENABLE) || ((STATE) == TIM_MASTERSLAVEMODE_DISABLE))
   IS_TIM_OCIDLE_STATE(STATE)=(((STATE) == TIM_OCIDLESTATE_SET) || ((STATE) == TIM_OCIDLESTATE_RESET))
   IS_TIM_OCNIDLE_STATE(STATE)=(((STATE) == TIM_OCNIDLESTATE_SET) || ((STATE) == TIM_OCNIDLESTATE_RESET))
   IS_TIM_OCN_POLARITY(POLARITY)=(((POLARITY) == TIM_OCNPOLARITY_HIGH) || ((POLARITY) == TIM_OCNPOLARITY_LOW))
   IS_TIM_OC_MODE(MODE)=(((MODE) == TIM_OCMODE_TIMING) || ((MODE) == TIM_OCMODE_ACTIVE) || ((MODE) == TIM_OCMODE_INACTIVE) || ((MODE) == TIM_OCMODE_TOGGLE) || ((MODE) == TIM_OCMODE_FORCED_ACTIVE) || ((MODE) == TIM_OCMODE_FORCED_INACTIVE))
   IS_TIM_OC_POLARITY(POLARITY)=(((POLARITY) == TIM_OCPOLARITY_HIGH) || ((POLARITY) == TIM_OCPOLARITY_LOW))
   IS_TIM_OPM_CHANNELS(CHANNEL)=(((CHANNEL) == TIM_CHANNEL_1) || ((CHANNEL) == TIM_CHANNEL_2))
   IS_TIM_OPM_MODE(MODE)=(((MODE) == TIM_OPMODE_SINGLE) || ((MODE) == TIM_OPMODE_REPETITIVE))
   IS_TIM_OSSI_STATE(STATE)=(((STATE) == TIM_OSSI_ENABLE) || ((STATE) == TIM_OSSI_DISABLE))
   IS_TIM_OSSR_STATE(STATE)=(((STATE) == TIM_OSSR_ENABLE) || ((STATE) == TIM_OSSR_DISABLE))
   IS_TIM_PWM_MODE(MODE)=(((MODE) == TIM_OCMODE_PWM1) || ((MODE) == TIM_OCMODE_PWM2))
   IS_TIM_SLAVE_MODE(MODE)=(((MODE) == TIM_SLAVEMODE_DISABLE) || ((MODE) == TIM_SLAVEMODE_GATED) || ((MODE) == TIM_SLAVEMODE_RESET) || ((MODE) == TIM_SLAVEMODE_TRIGGER) || ((MODE) == TIM_SLAVEMODE_EXTERNAL1))
   IS_TIM_TI1SELECTION(TI1SELECTION)=(((TI1SELECTION) == TIM_TI1SELECTION_CH1) || ((TI1SELECTION) == TIM_TI1SELECTION_XORCOMBINATION))
   IS_TIM_TRGO_SOURCE(SOURCE)=(((SOURCE) == TIM_TRGO_RESET) || ((SOURCE) == TIM_TRGO_ENABLE) || ((SOURCE) == TIM_TRGO_UPDATE) || ((SOURCE) == TIM_TRGO_OC1) || ((SOURCE) == TIM_TRGO_OC1REF) || ((SOURCE) == TIM_TRGO_OC2REF) || ((SOURCE) == TIM_TRGO_OC3REF) || ((SOURCE) == TIM_TRGO_OC4REF))
   IS_TIM_TRIGGERFILTER(ICFILTER)=((ICFILTER) <= 0x0FU)
   IS_TIM_TRIGGERPOLARITY(POLARITY)=(((POLARITY) == TIM_TRIGGERPOLARITY_INVERTED ) || ((POLARITY) == TIM_TRIGGERPOLARITY_NONINVERTED) || ((POLARITY) == TIM_TRIGGERPOLARITY_RISING ) || ((POLARITY) == TIM_TRIGGERPOLARITY_FALLING ) || ((POLARITY) == TIM_TRIGGERPOLARITY_BOTHEDGE ))
   IS_TIM_TRIGGERPRESCALER(PRESCALER)=(((PRESCALER) == TIM_TRIGGERPRESCALER_DIV1) || ((PRESCALER) == TIM_TRIGGERPRESCALER_DIV2) || ((PRESCALER) == TIM_TRIGGERPRESCALER_DIV4) || ((PRESCALER) == TIM_TRIGGERPRESCALER_DIV8))
   IS_TIM_TRIGGER_SELECTION(SELECTION)=(((SELECTION) == TIM_TS_ITR0) || ((SELECTION) == TIM_TS_ITR1) || ((SELECTION) == TIM_TS_ITR2) || ((SELECTION) == TIM_TS_ITR3) || ((SELECTION) == TIM_TS_TI1F_ED) || ((SELECTION) == TIM_TS_TI1FP1) || ((SELECTION) == TIM_TS_TI2FP2) || ((SELECTION) == TIM_TS_ETRF))
   IS_WRPSTATE(VALUE)=(((VALUE) == OB_WRPSTATE_DISABLE) || ((VALUE) == OB_WRPSTATE_ENABLE))
   LL_HANDLER_FAULT_BUS=SCB_SHCSR_BUSFAULTENA_Msk
   LL_HANDLER_FAULT_MEM=SCB_SHCSR_MEMFAULTENA_Msk
   LL_HANDLER_FAULT_USG=SCB_SHCSR_USGFAULTENA_Msk
   LL_MAX_DELAY=0xFFFFFFFFU
   LL_SYSTICK_CLKSOURCE_HCLK=SysTick_CTRL_CLKSOURCE_Msk
   LL_SYSTICK_CLKSOURCE_HCLK_DIV8=0x00000000U
   LL_UTILS_HSEBYPASS_OFF=0x00000000U
   LL_UTILS_HSEBYPASS_ON=0x00000001U
   LSE_STARTUP_TIMEOUT=((uint32_t)5000)
   LSE_VALUE=((uint32_t)32768)
   LSI_TIMEOUT_VALUE=2U
   LSI_VALUE=40000U
   L_tmpnam=FILENAME_MAX
   MAC_ADDR0=2
   MAC_ADDR1=0
   MAC_ADDR2=0
   MAC_ADDR3=0
   MAC_ADDR4=0
   MAC_ADDR5=0
   MODIFY_REG(REG,CLEARMASK,SETMASK)=WRITE_REG((REG), (((READ_REG(REG)) & (~(CLEARMASK))) | (SETMASK)))
   NULL=__null
   NVIC_PRIORITYGROUP_0=0x00000007U
   NVIC_PRIORITYGROUP_1=0x00000006U
   NVIC_PRIORITYGROUP_2=0x00000005U
   NVIC_PRIORITYGROUP_3=0x00000004U
   NVIC_PRIORITYGROUP_4=0x00000003U
   OBR_REG_INDEX=1U
   OB_DATA_ADDRESS_DATA0=0x1FFFF804U
   OB_DATA_ADDRESS_DATA1=0x1FFFF806U
   OB_IWDG_HW=((uint16_t)0x0000)
   OB_IWDG_SW=((uint16_t)0x0001)
   OB_RDP_LEVEL_0=((uint8_t)0xA5)
   OB_RDP_LEVEL_1=((uint8_t)0x00)
   OB_STDBY_NO_RST=((uint16_t)0x0004)
   OB_STDBY_RST=((uint16_t)0x0000)
   OB_STOP_NO_RST=((uint16_t)0x0002)
   OB_STOP_RST=((uint16_t)0x0000)
   OB_WRPSTATE_DISABLE=0x00U
   OB_WRPSTATE_ENABLE=0x01U
   OB_WRP_ALLPAGES=0xFFFFFFFFU
   offsetof(TYPE,MEMBER)=__builtin_offsetof (TYPE, MEMBER)
   OPTIONBYTE_DATA=0x08U
   OPTIONBYTE_RDP=0x02U
   OPTIONBYTE_USER=0x04U
   OPTIONBYTE_WRP=0x01U
   PHY_AUTONEGOTIATION=((uint16_t)0x1000)
   PHY_AUTONEGO_COMPLETE=((uint16_t)0x0020)
   PHY_BCR=((uint16_t)0x00)
   PHY_BSR=((uint16_t)0x01)
   PHY_CONFIG_DELAY=((uint32_t)0x00000FFF)
   PHY_DUPLEX_STATUS=((uint16_t)0x0004U)
   PHY_FULLDUPLEX_100M=((uint16_t)0x2100)
   PHY_FULLDUPLEX_10M=((uint16_t)0x0100)
   PHY_HALFDUPLEX_100M=((uint16_t)0x2000)
   PHY_HALFDUPLEX_10M=((uint16_t)0x0000)
   PHY_ISOLATE=((uint16_t)0x0400)
   PHY_JABBER_DETECTION=((uint16_t)0x0002)
   PHY_LINKED_STATUS=((uint16_t)0x0004)
   PHY_LOOPBACK=((uint16_t)0x4000)
   PHY_POWERDOWN=((uint16_t)0x0800)
   PHY_READ_TO=((uint32_t)0x0000FFFF)
   PHY_RESET=((uint16_t)0x8000)
   PHY_RESET_DELAY=((uint32_t)0x000000FF)
   PHY_RESTART_AUTONEGOTIATION=((uint16_t)0x0200)
   PHY_SPEED_STATUS=((uint16_t)0x0002U)
   PHY_SR=((uint16_t)0x10U)
   PHY_WRITE_TO=((uint32_t)0x0000FFFF)
   PLL_TIMEOUT_VALUE=2U
   POSITION_VAL(VAL)=(__CLZ(__RBIT(VAL)))
   PREFETCH_ENABLE=1
   putc(x,fp)=__sputc_r(_REENT, x, fp)
   putchar(x)=putc(x, stdout)
   PWR_EXTI_LINE_PVD=((uint32_t)0x00010000)
   PWR_FLAG_PVDO=PWR_CSR_PVDO
   PWR_FLAG_SB=PWR_CSR_SBF
   PWR_FLAG_WU=PWR_CSR_WUF
   PWR_LOWPOWERREGULATOR_ON=PWR_CR_LPDS
   PWR_MAINREGULATOR_ON=0x00000000U
   PWR_PVDLEVEL_0=PWR_CR_PLS_2V2
   PWR_PVDLEVEL_1=PWR_CR_PLS_2V3
   PWR_PVDLEVEL_2=PWR_CR_PLS_2V4
   PWR_PVDLEVEL_3=PWR_CR_PLS_2V5
   PWR_PVDLEVEL_4=PWR_CR_PLS_2V6
   PWR_PVDLEVEL_5=PWR_CR_PLS_2V7
   PWR_PVDLEVEL_6=PWR_CR_PLS_2V8
   PWR_PVDLEVEL_7=PWR_CR_PLS_2V9
   PWR_PVD_MODE_EVENT_FALLING=0x00020002U
   PWR_PVD_MODE_EVENT_RISING=0x00020001U
   PWR_PVD_MODE_EVENT_RISING_FALLING=0x00020003U
   PWR_PVD_MODE_IT_FALLING=0x00010002U
   PWR_PVD_MODE_IT_RISING=0x00010001U
   PWR_PVD_MODE_IT_RISING_FALLING=0x00010003U
   PWR_PVD_MODE_NORMAL=0x00000000U
   PWR_SLEEPENTRY_WFE=((uint8_t)0x02)
   PWR_SLEEPENTRY_WFI=((uint8_t)0x01)
   PWR_STOPENTRY_WFE=((uint8_t)0x02)
   PWR_STOPENTRY_WFI=((uint8_t)0x01)
   PWR_WAKEUP_PIN1=PWR_CSR_EWUP
   RCC_ADCPCLK2_DIV2=RCC_CFGR_ADCPRE_DIV2
   RCC_ADCPCLK2_DIV4=RCC_CFGR_ADCPRE_DIV4
   RCC_ADCPCLK2_DIV6=RCC_CFGR_ADCPRE_DIV6
   RCC_ADCPCLK2_DIV8=RCC_CFGR_ADCPRE_DIV8
   RCC_BDCR_BDRST_BB=((uint32_t)(PERIPH_BB_BASE + (RCC_BDCR_OFFSET_BB * 32U) + (RCC_BDRST_BIT_NUMBER * 4U)))
   RCC_BDCR_LSEBYP_BB=((uint32_t)(PERIPH_BB_BASE + (RCC_BDCR_OFFSET_BB * 32U) + (RCC_LSEBYP_BIT_NUMBER * 4U)))
   RCC_BDCR_LSEON_BB=((uint32_t)(PERIPH_BB_BASE + (RCC_BDCR_OFFSET_BB * 32U) + (RCC_LSEON_BIT_NUMBER * 4U)))
   RCC_BDCR_OFFSET=0x20U
   RCC_BDCR_OFFSET_BB=(RCC_OFFSET + RCC_BDCR_OFFSET)
   RCC_BDCR_RTCEN_BB=((uint32_t)(PERIPH_BB_BASE + (RCC_BDCR_OFFSET_BB * 32U) + (RCC_RTCEN_BIT_NUMBER * 4U)))
   RCC_BDRST_BIT_NUMBER=RCC_BDCR_BDRST_Pos
   RCC_CFGR_OFFSET=0x04U
   RCC_CFGR_OFFSET_BB=(RCC_OFFSET + RCC_CFGR_OFFSET)
   RCC_CIR_BYTE1_ADDRESS=((uint32_t)(RCC_BASE + RCC_CIR_OFFSET + 0x01U))
   RCC_CIR_BYTE2_ADDRESS=((uint32_t)(RCC_BASE + RCC_CIR_OFFSET + 0x02U))
   RCC_CIR_OFFSET=0x08U
   RCC_CIR_OFFSET_BB=(RCC_OFFSET + RCC_CIR_OFFSET)
   RCC_CLOCKTYPE_HCLK=0x00000002U
   RCC_CLOCKTYPE_PCLK1=0x00000004U
   RCC_CLOCKTYPE_PCLK2=0x00000008U
   RCC_CLOCKTYPE_SYSCLK=0x00000001U
   RCC_CR_BYTE2_ADDRESS=((uint32_t)(RCC_BASE + RCC_CR_OFFSET + 0x02U))
   RCC_CR_CSSON_BB=((uint32_t)(PERIPH_BB_BASE + (RCC_CR_OFFSET_BB * 32U) + (RCC_CSSON_BIT_NUMBER * 4U)))
   RCC_CR_HSEON_BB=((uint32_t)(PERIPH_BB_BASE + (RCC_CR_OFFSET_BB * 32U) + (RCC_HSEON_BIT_NUMBER * 4U)))
   RCC_CR_HSION_BB=((uint32_t)(PERIPH_BB_BASE + (RCC_CR_OFFSET_BB * 32U) + (RCC_HSION_BIT_NUMBER * 4U)))
   RCC_CR_OFFSET=0x00U
   RCC_CR_OFFSET_BB=(RCC_OFFSET + RCC_CR_OFFSET)
   RCC_CR_PLLON_BB=((uint32_t)(PERIPH_BB_BASE + (RCC_CR_OFFSET_BB * 32U) + (RCC_PLLON_BIT_NUMBER * 4U)))
   RCC_CSR_LSION_BB=((uint32_t)(PERIPH_BB_BASE + (RCC_CSR_OFFSET_BB * 32U) + (RCC_LSION_BIT_NUMBER * 4U)))
   RCC_CSR_OFFSET=0x24U
   RCC_CSR_OFFSET_BB=(RCC_OFFSET + RCC_CSR_OFFSET)
   RCC_CSR_RMVF_BB=((uint32_t)(PERIPH_BB_BASE + (RCC_CSR_OFFSET_BB * 32U) + (RCC_RMVF_BIT_NUMBER * 4U)))
   RCC_CSSON_BIT_NUMBER=RCC_CR_CSSON_Pos
   RCC_DBP_TIMEOUT_VALUE=100U
   RCC_FLAG_HSERDY=((uint8_t)((CR_REG_INDEX << 5U) | RCC_CR_HSERDY_Pos))
   RCC_FLAG_HSIRDY=((uint8_t)((CR_REG_INDEX << 5U) | RCC_CR_HSIRDY_Pos))
   RCC_FLAG_IWDGRST=((uint8_t)((CSR_REG_INDEX << 5U) | RCC_CSR_IWDGRSTF_Pos))
   RCC_FLAG_LPWRRST=((uint8_t)((CSR_REG_INDEX << 5U) | RCC_CSR_LPWRRSTF_Pos))
   RCC_FLAG_LSERDY=((uint8_t)((BDCR_REG_INDEX << 5U) | RCC_BDCR_LSERDY_Pos))
   RCC_FLAG_LSIRDY=((uint8_t)((CSR_REG_INDEX << 5U) | RCC_CSR_LSIRDY_Pos))
   RCC_FLAG_MASK=((uint8_t)0x1F)
   RCC_FLAG_PINRST=((uint8_t)((CSR_REG_INDEX << 5U) | RCC_CSR_PINRSTF_Pos))
   RCC_FLAG_PLLRDY=((uint8_t)((CR_REG_INDEX << 5U) | RCC_CR_PLLRDY_Pos))
   RCC_FLAG_PORRST=((uint8_t)((CSR_REG_INDEX << 5U) | RCC_CSR_PORRSTF_Pos))
   RCC_FLAG_SFTRST=((uint8_t)((CSR_REG_INDEX << 5U) | RCC_CSR_SFTRSTF_Pos))
   RCC_FLAG_WWDGRST=((uint8_t)((CSR_REG_INDEX << 5U) | RCC_CSR_WWDGRSTF_Pos))
   RCC_HCLK_DIV16=RCC_CFGR_PPRE1_DIV16
   RCC_HCLK_DIV1=RCC_CFGR_PPRE1_DIV1
   RCC_HCLK_DIV2=RCC_CFGR_PPRE1_DIV2
   RCC_HCLK_DIV4=RCC_CFGR_PPRE1_DIV4
   RCC_HCLK_DIV8=RCC_CFGR_PPRE1_DIV8
   RCC_HSEON_BIT_NUMBER=RCC_CR_HSEON_Pos
   RCC_HSE_BYPASS=((uint32_t)(RCC_CR_HSEBYP | RCC_CR_HSEON))
   RCC_HSE_OFF=0x00000000U
   RCC_HSE_ON=RCC_CR_HSEON
   RCC_HSE_PREDIV_DIV1=0x00000000U
   RCC_HSE_PREDIV_DIV2=RCC_CFGR_PLLXTPRE
   RCC_HSICALIBRATION_DEFAULT=0x10U
   RCC_HSION_BIT_NUMBER=RCC_CR_HSION_Pos
   RCC_HSI_OFF=0x00000000U
   RCC_HSI_ON=RCC_CR_HSION
   RCC_IT_CSS=((uint8_t)RCC_CIR_CSSF)
   RCC_IT_HSERDY=((uint8_t)RCC_CIR_HSERDYF)
   RCC_IT_HSIRDY=((uint8_t)RCC_CIR_HSIRDYF)
   RCC_IT_LSERDY=((uint8_t)RCC_CIR_LSERDYF)
   RCC_IT_LSIRDY=((uint8_t)RCC_CIR_LSIRDYF)
   RCC_IT_PLLRDY=((uint8_t)RCC_CIR_PLLRDYF)
   RCC_LSEBYP_BIT_NUMBER=RCC_BDCR_LSEBYP_Pos
   RCC_LSEON_BIT_NUMBER=RCC_BDCR_LSEON_Pos
   RCC_LSE_BYPASS=((uint32_t)(RCC_BDCR_LSEBYP | RCC_BDCR_LSEON))
   RCC_LSE_OFF=0x00000000U
   RCC_LSE_ON=RCC_BDCR_LSEON
   RCC_LSE_TIMEOUT_VALUE=LSE_STARTUP_TIMEOUT
   RCC_LSION_BIT_NUMBER=RCC_CSR_LSION_Pos
   RCC_LSI_OFF=0x00000000U
   RCC_LSI_ON=RCC_CSR_LSION
   RCC_MCO1=0x00000000U
   RCC_MCO1SOURCE_HSE=((uint32_t)RCC_CFGR_MCO_HSE)
   RCC_MCO1SOURCE_HSI=((uint32_t)RCC_CFGR_MCO_HSI)
   RCC_MCO1SOURCE_NOCLOCK=((uint32_t)RCC_CFGR_MCO_NOCLOCK)
   RCC_MCO1SOURCE_PLLCLK=((uint32_t)RCC_CFGR_MCO_PLLCLK_DIV2)
   RCC_MCO1SOURCE_SYSCLK=((uint32_t)RCC_CFGR_MCO_SYSCLK)
   RCC_MCO=RCC_MCO1
   RCC_MCODIV_1=0x00000000U
   RCC_OFFSET=(RCC_BASE - PERIPH_BASE)
   RCC_OSCILLATORTYPE_HSE=0x00000001U
   RCC_OSCILLATORTYPE_HSI=0x00000002U
   RCC_OSCILLATORTYPE_LSE=0x00000004U
   RCC_OSCILLATORTYPE_LSI=0x00000008U
   RCC_OSCILLATORTYPE_NONE=0x00000000U
   RCC_PERIPHCLK_ADC=0x00000002U
   RCC_PERIPHCLK_RTC=0x00000001U
   RCC_PLLON_BIT_NUMBER=RCC_CR_PLLON_Pos
   RCC_PLLSOURCE_HSE=RCC_CFGR_PLLSRC
   RCC_PLLSOURCE_HSI_DIV2=0x00000000U
   RCC_PLL_MUL10=RCC_CFGR_PLLMULL10
   RCC_PLL_MUL11=RCC_CFGR_PLLMULL11
   RCC_PLL_MUL12=RCC_CFGR_PLLMULL12
   RCC_PLL_MUL13=RCC_CFGR_PLLMULL13
   RCC_PLL_MUL14=RCC_CFGR_PLLMULL14
   RCC_PLL_MUL15=RCC_CFGR_PLLMULL15
   RCC_PLL_MUL16=RCC_CFGR_PLLMULL16
   RCC_PLL_MUL2=RCC_CFGR_PLLMULL2
   RCC_PLL_MUL3=RCC_CFGR_PLLMULL3
   RCC_PLL_MUL4=RCC_CFGR_PLLMULL4
   RCC_PLL_MUL5=RCC_CFGR_PLLMULL5
   RCC_PLL_MUL6=RCC_CFGR_PLLMULL6
   RCC_PLL_MUL7=RCC_CFGR_PLLMULL7
   RCC_PLL_MUL8=RCC_CFGR_PLLMULL8
   RCC_PLL_MUL9=RCC_CFGR_PLLMULL9
   RCC_PLL_NONE=0x00000000U
   RCC_PLL_OFF=0x00000001U
   RCC_PLL_ON=0x00000002U
   RCC_RMVF_BIT_NUMBER=RCC_CSR_RMVF_Pos
   RCC_RTCCLKSOURCE_HSE_DIV128=RCC_BDCR_RTCSEL_HSE
   RCC_RTCCLKSOURCE_LSE=RCC_BDCR_RTCSEL_LSE
   RCC_RTCCLKSOURCE_LSI=RCC_BDCR_RTCSEL_LSI
   RCC_RTCCLKSOURCE_NO_CLK=0x00000000U
   RCC_RTCEN_BIT_NUMBER=RCC_BDCR_RTCEN_Pos
   RCC_SYSCLKSOURCE_HSE=RCC_CFGR_SW_HSE
   RCC_SYSCLKSOURCE_HSI=RCC_CFGR_SW_HSI
   RCC_SYSCLKSOURCE_PLLCLK=RCC_CFGR_SW_PLL
   RCC_SYSCLKSOURCE_STATUS_HSE=RCC_CFGR_SWS_HSE
   RCC_SYSCLKSOURCE_STATUS_HSI=RCC_CFGR_SWS_HSI
   RCC_SYSCLKSOURCE_STATUS_PLLCLK=RCC_CFGR_SWS_PLL
   RCC_SYSCLK_DIV128=RCC_CFGR_HPRE_DIV128
   RCC_SYSCLK_DIV16=RCC_CFGR_HPRE_DIV16
   RCC_SYSCLK_DIV1=RCC_CFGR_HPRE_DIV1
   RCC_SYSCLK_DIV256=RCC_CFGR_HPRE_DIV256
   RCC_SYSCLK_DIV2=RCC_CFGR_HPRE_DIV2
   RCC_SYSCLK_DIV4=RCC_CFGR_HPRE_DIV4
   RCC_SYSCLK_DIV512=RCC_CFGR_HPRE_DIV512
   RCC_SYSCLK_DIV64=RCC_CFGR_HPRE_DIV64
   RCC_SYSCLK_DIV8=RCC_CFGR_HPRE_DIV8
   READ_BIT(REG,BIT)=((REG) & (BIT))
   READ_REG(REG)=((REG))
   SEEK_CUR=1
   SEEK_END=2
   SEEK_SET=0
   SET_BIT(REG,BIT)=((REG) |= (BIT))
   SR_FLAG_MASK=((uint32_t)(FLASH_SR_BSY | FLASH_SR_PGERR | FLASH_SR_WRPRTERR | FLASH_SR_EOP))
   stderr=(_REENT->_stderr)
   stdin=(_REENT->_stdin)
   stdout=(_REENT->_stdout)
   STM32F1=
   STM32F1xx_HAL_CAN_H=
   SYSTICK_CLKSOURCE_HCLK=0x00000004U
   SYSTICK_CLKSOURCE_HCLK_DIV8=0x00000000U
   TICK_INT_PRIORITY=((uint32_t)0)
   TIM_AUTOMATICOUTPUT_DISABLE=0x00000000U
   TIM_AUTOMATICOUTPUT_ENABLE=(TIM_BDTR_AOE)
   TIM_AUTORELOAD_PRELOAD_DISABLE=0x0000U
   TIM_AUTORELOAD_PRELOAD_ENABLE=(TIM_CR1_ARPE)
   TIM_BREAKPOLARITY_HIGH=(TIM_BDTR_BKP)
   TIM_BREAKPOLARITY_LOW=0x00000000U
   TIM_BREAK_DISABLE=0x00000000U
   TIM_BREAK_ENABLE=(TIM_BDTR_BKE)
   TIM_CCER_CCxE_MASK=((uint32_t)(TIM_CCER_CC1E | TIM_CCER_CC2E | TIM_CCER_CC3E | TIM_CCER_CC4E))
   TIM_CCER_CCxNE_MASK=((uint32_t)(TIM_CCER_CC1NE | TIM_CCER_CC2NE | TIM_CCER_CC3NE))
   TIM_CCxN_DISABLE=0x00000000U
   TIM_CCxN_ENABLE=0x00000004U
   TIM_CCx_DISABLE=0x00000000U
   TIM_CCx_ENABLE=0x00000001U
   TIM_CHANNEL_1=0x00000000U
   TIM_CHANNEL_2=0x00000004U
   TIM_CHANNEL_3=0x00000008U
   TIM_CHANNEL_4=0x0000000CU
   TIM_CHANNEL_ALL=0x00000018U
   TIM_CLEARINPUTPOLARITY_INVERTED=TIM_ETRPOLARITY_INVERTED
   TIM_CLEARINPUTPOLARITY_NONINVERTED=TIM_ETRPOLARITY_NONINVERTED
   TIM_CLEARINPUTPRESCALER_DIV1=TIM_ETRPRESCALER_DIV1
   TIM_CLEARINPUTPRESCALER_DIV2=TIM_ETRPRESCALER_DIV2
   TIM_CLEARINPUTPRESCALER_DIV4=TIM_ETRPRESCALER_DIV4
   TIM_CLEARINPUTPRESCALER_DIV8=TIM_ETRPRESCALER_DIV8
   TIM_CLEARINPUTSOURCE_ETR=0x00000001U
   TIM_CLEARINPUTSOURCE_NONE=0x00000000U
   TIM_CLOCKDIVISION_DIV1=0x00000000U
   TIM_CLOCKDIVISION_DIV2=(TIM_CR1_CKD_0)
   TIM_CLOCKDIVISION_DIV4=(TIM_CR1_CKD_1)
   TIM_CLOCKPOLARITY_BOTHEDGE=TIM_INPUTCHANNELPOLARITY_BOTHEDGE
   TIM_CLOCKPOLARITY_FALLING=TIM_INPUTCHANNELPOLARITY_FALLING
   TIM_CLOCKPOLARITY_INVERTED=TIM_ETRPOLARITY_INVERTED
   TIM_CLOCKPOLARITY_NONINVERTED=TIM_ETRPOLARITY_NONINVERTED
   TIM_CLOCKPOLARITY_RISING=TIM_INPUTCHANNELPOLARITY_RISING
   TIM_CLOCKPRESCALER_DIV1=TIM_ETRPRESCALER_DIV1
   TIM_CLOCKPRESCALER_DIV2=TIM_ETRPRESCALER_DIV2
   TIM_CLOCKPRESCALER_DIV4=TIM_ETRPRESCALER_DIV4
   TIM_CLOCKPRESCALER_DIV8=TIM_ETRPRESCALER_DIV8
   TIM_CLOCKSOURCE_ETRMODE1=(TIM_SMCR_TS)
   TIM_CLOCKSOURCE_ETRMODE2=(TIM_SMCR_ETPS_1)
   TIM_CLOCKSOURCE_INTERNAL=(TIM_SMCR_ETPS_0)
   TIM_CLOCKSOURCE_ITR0=((uint32_t)0x0000)
   TIM_CLOCKSOURCE_ITR1=(TIM_SMCR_TS_0)
   TIM_CLOCKSOURCE_ITR2=(TIM_SMCR_TS_1)
   TIM_CLOCKSOURCE_ITR3=(TIM_SMCR_TS_0 | TIM_SMCR_TS_1)
   TIM_CLOCKSOURCE_TI1=(TIM_SMCR_TS_0 | TIM_SMCR_TS_2)
   TIM_CLOCKSOURCE_TI1ED=(TIM_SMCR_TS_2)
   TIM_CLOCKSOURCE_TI2=(TIM_SMCR_TS_1 | TIM_SMCR_TS_2)
   TIM_COMMUTATION_SOFTWARE=0x00000000U
   TIM_COMMUTATION_TRGI=(TIM_CR2_CCUS)
   TIM_COUNTERMODE_CENTERALIGNED1=TIM_CR1_CMS_0
   TIM_COUNTERMODE_CENTERALIGNED2=TIM_CR1_CMS_1
   TIM_COUNTERMODE_CENTERALIGNED3=TIM_CR1_CMS
   TIM_COUNTERMODE_DOWN=TIM_CR1_DIR
   TIM_COUNTERMODE_UP=0x00000000U
   TIM_DMABASE_ARR=0x0000000BU
   TIM_DMABASE_BDTR=0x00000011U
   TIM_DMABASE_CCER=0x00000008U
   TIM_DMABASE_CCMR1=0x00000006U
   TIM_DMABASE_CCMR2=0x00000007U
   TIM_DMABASE_CCR1=0x0000000DU
   TIM_DMABASE_CCR2=0x0000000EU
   TIM_DMABASE_CCR3=0x0000000FU
   TIM_DMABASE_CCR4=0x00000010U
   TIM_DMABASE_CNT=0x00000009U
   TIM_DMABASE_CR1=0x00000000U
   TIM_DMABASE_CR2=0x00000001U
   TIM_DMABASE_DCR=0x00000012U
   TIM_DMABASE_DIER=0x00000003U
   TIM_DMABASE_EGR=0x00000005U
   TIM_DMABASE_PSC=0x0000000AU
   TIM_DMABASE_RCR=0x0000000CU
   TIM_DMABASE_SMCR=0x00000002U
   TIM_DMABASE_SR=0x00000004U
   TIM_DMABURSTLENGTH_10TRANSFERS=0x00000900U
   TIM_DMABURSTLENGTH_11TRANSFERS=0x00000A00U
   TIM_DMABURSTLENGTH_12TRANSFERS=0x00000B00U
   TIM_DMABURSTLENGTH_13TRANSFERS=0x00000C00U
   TIM_DMABURSTLENGTH_14TRANSFERS=0x00000D00U
   TIM_DMABURSTLENGTH_15TRANSFERS=0x00000E00U
   TIM_DMABURSTLENGTH_16TRANSFERS=0x00000F00U
   TIM_DMABURSTLENGTH_17TRANSFERS=0x00001000U
   TIM_DMABURSTLENGTH_18TRANSFERS=0x00001100U
   TIM_DMABURSTLENGTH_1TRANSFER=0x00000000U
   TIM_DMABURSTLENGTH_2TRANSFERS=0x00000100U
   TIM_DMABURSTLENGTH_3TRANSFERS=0x00000200U
   TIM_DMABURSTLENGTH_4TRANSFERS=0x00000300U
   TIM_DMABURSTLENGTH_5TRANSFERS=0x00000400U
   TIM_DMABURSTLENGTH_6TRANSFERS=0x00000500U
   TIM_DMABURSTLENGTH_7TRANSFERS=0x00000600U
   TIM_DMABURSTLENGTH_8TRANSFERS=0x00000700U
   TIM_DMABURSTLENGTH_9TRANSFERS=0x00000800U
   TIM_DMA_CC1=(TIM_DIER_CC1DE)
   TIM_DMA_CC2=(TIM_DIER_CC2DE)
   TIM_DMA_CC3=(TIM_DIER_CC3DE)
   TIM_DMA_CC4=(TIM_DIER_CC4DE)
   TIM_DMA_COM=(TIM_DIER_COMDE)
   TIM_DMA_ID_CC1=((uint16_t)0x1)
   TIM_DMA_ID_CC2=((uint16_t)0x2)
   TIM_DMA_ID_CC3=((uint16_t)0x3)
   TIM_DMA_ID_CC4=((uint16_t)0x4)
   TIM_DMA_ID_COMMUTATION=((uint16_t)0x5)
   TIM_DMA_ID_TRIGGER=((uint16_t)0x6)
   TIM_DMA_ID_UPDATE=((uint16_t)0x0)
   TIM_DMA_TRIGGER=(TIM_DIER_TDE)
   TIM_DMA_UPDATE=(TIM_DIER_UDE)
   TIM_ENCODERMODE_TI12=(TIM_SMCR_SMS_1 | TIM_SMCR_SMS_0)
   TIM_ENCODERMODE_TI1=(TIM_SMCR_SMS_0)
   TIM_ENCODERMODE_TI2=(TIM_SMCR_SMS_1)
   TIM_ETRPOLARITY_INVERTED=(TIM_SMCR_ETP)
   TIM_ETRPOLARITY_NONINVERTED=0x00000000U
   TIM_ETRPRESCALER_DIV1=0x00000000U
   TIM_ETRPRESCALER_DIV2=(TIM_SMCR_ETPS_0)
   TIM_ETRPRESCALER_DIV4=(TIM_SMCR_ETPS_1)
   TIM_ETRPRESCALER_DIV8=(TIM_SMCR_ETPS)
   TIM_EVENTSOURCE_BREAK=TIM_EGR_BG
   TIM_EVENTSOURCE_CC1=TIM_EGR_CC1G
   TIM_EVENTSOURCE_CC2=TIM_EGR_CC2G
   TIM_EVENTSOURCE_CC3=TIM_EGR_CC3G
   TIM_EVENTSOURCE_CC4=TIM_EGR_CC4G
   TIM_EVENTSOURCE_COM=TIM_EGR_COMG
   TIM_EVENTSOURCE_TRIGGER=TIM_EGR_TG
   TIM_EVENTSOURCE_UPDATE=TIM_EGR_UG
   TIM_FLAG_BREAK=(TIM_SR_BIF)
   TIM_FLAG_CC1=(TIM_SR_CC1IF)
   TIM_FLAG_CC1OF=(TIM_SR_CC1OF)
   TIM_FLAG_CC2=(TIM_SR_CC2IF)
   TIM_FLAG_CC2OF=(TIM_SR_CC2OF)
   TIM_FLAG_CC3=(TIM_SR_CC3IF)
   TIM_FLAG_CC3OF=(TIM_SR_CC3OF)
   TIM_FLAG_CC4=(TIM_SR_CC4IF)
   TIM_FLAG_CC4OF=(TIM_SR_CC4OF)
   TIM_FLAG_COM=(TIM_SR_COMIF)
   TIM_FLAG_TRIGGER=(TIM_SR_TIF)
   TIM_FLAG_UPDATE=(TIM_SR_UIF)
   TIM_ICPOLARITY_BOTHEDGE=TIM_INPUTCHANNELPOLARITY_BOTHEDGE
   TIM_ICPOLARITY_FALLING=TIM_INPUTCHANNELPOLARITY_FALLING
   TIM_ICPOLARITY_RISING=TIM_INPUTCHANNELPOLARITY_RISING
   TIM_ICPSC_DIV1=0x00000000U
   TIM_ICPSC_DIV2=(TIM_CCMR1_IC1PSC_0)
   TIM_ICPSC_DIV4=(TIM_CCMR1_IC1PSC_1)
   TIM_ICPSC_DIV8=(TIM_CCMR1_IC1PSC)
   TIM_ICSELECTION_DIRECTTI=(TIM_CCMR1_CC1S_0)
   TIM_ICSELECTION_INDIRECTTI=(TIM_CCMR1_CC1S_1)
   TIM_ICSELECTION_TRC=(TIM_CCMR1_CC1S)
   TIM_INPUTCHANNELPOLARITY_BOTHEDGE=(TIM_CCER_CC1P | TIM_CCER_CC1NP)
   TIM_INPUTCHANNELPOLARITY_FALLING=(TIM_CCER_CC1P)
   TIM_INPUTCHANNELPOLARITY_RISING=0x00000000U
   TIM_IT_BREAK=(TIM_DIER_BIE)
   TIM_IT_CC1=(TIM_DIER_CC1IE)
   TIM_IT_CC2=(TIM_DIER_CC2IE)
   TIM_IT_CC3=(TIM_DIER_CC3IE)
   TIM_IT_CC4=(TIM_DIER_CC4IE)
   TIM_IT_COM=(TIM_DIER_COMIE)
   TIM_IT_TRIGGER=(TIM_DIER_TIE)
   TIM_IT_UPDATE=(TIM_DIER_UIE)
   TIM_LOCKLEVEL_1=(TIM_BDTR_LOCK_0)
   TIM_LOCKLEVEL_2=(TIM_BDTR_LOCK_1)
   TIM_LOCKLEVEL_3=(TIM_BDTR_LOCK)
   TIM_LOCKLEVEL_OFF=0x00000000U
   TIM_MASTERSLAVEMODE_DISABLE=0x00000000U
   TIM_MASTERSLAVEMODE_ENABLE=0x00000080U
   TIM_OCFAST_DISABLE=0x00000000U
   TIM_OCFAST_ENABLE=(TIM_CCMR1_OC1FE)
   TIM_OCIDLESTATE_RESET=0x00000000U
   TIM_OCIDLESTATE_SET=(TIM_CR2_OIS1)
   TIM_OCMODE_ACTIVE=(TIM_CCMR1_OC1M_0)
   TIM_OCMODE_FORCED_ACTIVE=(TIM_CCMR1_OC1M_0 | TIM_CCMR1_OC1M_2)
   TIM_OCMODE_FORCED_INACTIVE=(TIM_CCMR1_OC1M_2)
   TIM_OCMODE_INACTIVE=(TIM_CCMR1_OC1M_1)
   TIM_OCMODE_PWM1=(TIM_CCMR1_OC1M_1 | TIM_CCMR1_OC1M_2)
   TIM_OCMODE_PWM2=(TIM_CCMR1_OC1M)
   TIM_OCMODE_TIMING=0x00000000U
   TIM_OCMODE_TOGGLE=(TIM_CCMR1_OC1M_0 | TIM_CCMR1_OC1M_1)
   TIM_OCNIDLESTATE_RESET=0x00000000U
   TIM_OCNIDLESTATE_SET=(TIM_CR2_OIS1N)
   TIM_OCNPOLARITY_HIGH=0x00000000U
   TIM_OCNPOLARITY_LOW=(TIM_CCER_CC1NP)
   TIM_OCPOLARITY_HIGH=0x00000000U
   TIM_OCPOLARITY_LOW=(TIM_CCER_CC1P)
   TIM_OPMODE_REPETITIVE=0x00000000U
   TIM_OPMODE_SINGLE=(TIM_CR1_OPM)
   TIM_OSSI_DISABLE=0x00000000U
   TIM_OSSI_ENABLE=(TIM_BDTR_OSSI)
   TIM_OSSR_DISABLE=0x00000000U
   TIM_OSSR_ENABLE=(TIM_BDTR_OSSR)
   TIM_OUTPUTNSTATE_DISABLE=0x00000000U
   TIM_OUTPUTNSTATE_ENABLE=(TIM_CCER_CC1NE)
   TIM_OUTPUTSTATE_DISABLE=0x00000000U
   TIM_OUTPUTSTATE_ENABLE=(TIM_CCER_CC1E)
   TIM_RESET_CAPTUREPOLARITY(__HANDLE__,__CHANNEL__)=(((__CHANNEL__) == TIM_CHANNEL_1) ? ((__HANDLE__)->Instance->CCER &= (uint16_t)~(TIM_CCER_CC1P | TIM_CCER_CC1NP)) : ((__CHANNEL__) == TIM_CHANNEL_2) ? ((__HANDLE__)->Instance->CCER &= (uint16_t)~(TIM_CCER_CC2P | TIM_CCER_CC2NP)) : ((__CHANNEL__) == TIM_CHANNEL_3) ? ((__HANDLE__)->Instance->CCER &= (uint16_t)~(TIM_CCER_CC3P | TIM_CCER_CC3NP)) : ((__HANDLE__)->Instance->CCER &= (uint16_t)~TIM_CCER_CC4P))
   TIM_RESET_ICPRESCALERVALUE(__HANDLE__,__CHANNEL__)=(((__CHANNEL__) == TIM_CHANNEL_1) ? ((__HANDLE__)->Instance->CCMR1 &= ~TIM_CCMR1_IC1PSC) : ((__CHANNEL__) == TIM_CHANNEL_2) ? ((__HANDLE__)->Instance->CCMR1 &= ~TIM_CCMR1_IC2PSC) : ((__CHANNEL__) == TIM_CHANNEL_3) ? ((__HANDLE__)->Instance->CCMR2 &= ~TIM_CCMR2_IC3PSC) : ((__HANDLE__)->Instance->CCMR2 &= ~TIM_CCMR2_IC4PSC))
   TIM_SET_CAPTUREPOLARITY(__HANDLE__,__CHANNEL__,__POLARITY__)=(((__CHANNEL__) == TIM_CHANNEL_1) ? ((__HANDLE__)->Instance->CCER |= (__POLARITY__)) : ((__CHANNEL__) == TIM_CHANNEL_2) ? ((__HANDLE__)->Instance->CCER |= ((__POLARITY__) << 4U)) : ((__CHANNEL__) == TIM_CHANNEL_3) ? ((__HANDLE__)->Instance->CCER |= ((__POLARITY__) << 8U)) : ((__HANDLE__)->Instance->CCER |= (((__POLARITY__) << 12U) & TIM_CCER_CC4P)))
   TIM_SET_ICPRESCALERVALUE(__HANDLE__,__CHANNEL__,__ICPSC__)=(((__CHANNEL__) == TIM_CHANNEL_1) ? ((__HANDLE__)->Instance->CCMR1 |= (__ICPSC__)) : ((__CHANNEL__) == TIM_CHANNEL_2) ? ((__HANDLE__)->Instance->CCMR1 |= ((__ICPSC__) << 8U)) : ((__CHANNEL__) == TIM_CHANNEL_3) ? ((__HANDLE__)->Instance->CCMR2 |= (__ICPSC__)) : ((__HANDLE__)->Instance->CCMR2 |= ((__ICPSC__) << 8U)))
   TIM_SLAVEMODE_DISABLE=0x00000000U
   TIM_SLAVEMODE_EXTERNAL1=0x00000007U
   TIM_SLAVEMODE_GATED=0x00000005U
   TIM_SLAVEMODE_RESET=0x00000004U
   TIM_SLAVEMODE_TRIGGER=0x00000006U
   TIM_TI1SELECTION_CH1=0x00000000U
   TIM_TI1SELECTION_XORCOMBINATION=(TIM_CR2_TI1S)
   TIM_TRGO_ENABLE=(TIM_CR2_MMS_0)
   TIM_TRGO_OC1=((TIM_CR2_MMS_1 | TIM_CR2_MMS_0))
   TIM_TRGO_OC1REF=(TIM_CR2_MMS_2)
   TIM_TRGO_OC2REF=((TIM_CR2_MMS_2 | TIM_CR2_MMS_0))
   TIM_TRGO_OC3REF=((TIM_CR2_MMS_2 | TIM_CR2_MMS_1))
   TIM_TRGO_OC4REF=((TIM_CR2_MMS_2 | TIM_CR2_MMS_1 | TIM_CR2_MMS_0))
   TIM_TRGO_RESET=0x00000000U
   TIM_TRGO_UPDATE=(TIM_CR2_MMS_1)
   TIM_TRIGGERPOLARITY_BOTHEDGE=TIM_INPUTCHANNELPOLARITY_BOTHEDGE
   TIM_TRIGGERPOLARITY_FALLING=TIM_INPUTCHANNELPOLARITY_FALLING
   TIM_TRIGGERPOLARITY_INVERTED=TIM_ETRPOLARITY_INVERTED
   TIM_TRIGGERPOLARITY_NONINVERTED=TIM_ETRPOLARITY_NONINVERTED
   TIM_TRIGGERPOLARITY_RISING=TIM_INPUTCHANNELPOLARITY_RISING
   TIM_TRIGGERPRESCALER_DIV1=TIM_ETRPRESCALER_DIV1
   TIM_TRIGGERPRESCALER_DIV2=TIM_ETRPRESCALER_DIV2
   TIM_TRIGGERPRESCALER_DIV4=TIM_ETRPRESCALER_DIV4
   TIM_TRIGGERPRESCALER_DIV8=TIM_ETRPRESCALER_DIV8
   TIM_TS_ETRF=0x00000070U
   TIM_TS_ITR0=0x00000000U
   TIM_TS_ITR1=0x00000010U
   TIM_TS_ITR2=0x00000020U
   TIM_TS_ITR3=0x00000030U
   TIM_TS_NONE=0x0000FFFFU
   TIM_TS_TI1FP1=0x00000050U
   TIM_TS_TI1F_ED=0x00000040U
   TIM_TS_TI2FP2=0x00000060U
   TMP_MAX=26
   UID_BASE_ADDRESS=UID_BASE
   unsigned=signed
   UNUSED(X)=(void)X
   USE_RTOS=0
   VDD_VALUE=((uint32_t)3300)
   WRITE_REG(REG,VAL)=((REG) = (VAL))
   _Alignof(x)=alignof(x)
   _AND=,
   _ANSIDECL_H_=
   _ANSI_STDDEF_H=
   _ATEXIT_DYNAMIC_ALLOC=1
   _ATEXIT_INIT={_NULL, 0, {_NULL}, _NULL}
   _ATEXIT_SIZE=32
   _ATTRIBUTE(attrs)=__attribute__ (attrs)
   _BEGIN_STD_C=extern "C" {
   _BLKCNT_T_DECLARED=
   _BLKSIZE_T_DECLARED=
   _BSD_PTRDIFF_T_=
   _BSD_SIZE_T_=
   _BSD_SIZE_T_DEFINED_=
   _BSD_WCHAR_T_=
   _CAST_VOID=(void)
   _CLOCKID_T_=unsigned long
   _CLOCKID_T_DECLARED=
   _CLOCK_T_=unsigned long
   _CLOCK_T_DECLARED=
   _CONST=const
   _DEFUN(name,arglist,args)=name(args)
   _DEFUN_VOID(name)=name(_NOARGS)
   _DEV_T_DECLARED=
   _DOTS=, ...
   _ELIDABLE_INLINE=static __inline__
   _END_STD_C=}
   _EXFNPTR(name,proto)=(* name) proto
   _EXFUN(name,proto)=name proto
   _EXFUN_NOTHROW(name,proto)=name proto _NOTHROW
   _EXPARM(name,proto)=(* name) proto
   _flockfile(fp)=(((fp)->_flags & __SSTR) ? 0 : __lock_acquire_recursive((fp)->_lock))
   _FSBLKCNT_T_DECLARED=
   _FSEEK_OPTIMIZATION=1
   _FSTDIO=
   _funlockfile(fp)=(((fp)->_flags & __SSTR) ? 0 : __lock_release_recursive((fp)->_lock))
   _FVWRITE_IN_STREAMIO=1
   _GCC_MAX_ALIGN_T=
   _GCC_PTRDIFF_T=
   _GCC_SIZE_T=
   _GCC_WCHAR_T=
   _GID_T_DECLARED=
   _GLOBAL_ATEXIT=(_GLOBAL_REENT->_atexit)
   _GLOBAL_REENT=_global_impure_ptr
   _GXX_NULLPTR_T=
   _HAVE_CC_INHIBIT_LOOP_TO_LIBCALL=1
   _HAVE_LONG_DOUBLE=1
   _HAVE_STDC=
   _ID_T_DECLARED=
   _INO_T_DECLARED=
   _INT16_T_DECLARED=
   _INT32_T_DECLARED=
   _INT64_T_DECLARED=
   _INT8_T_DECLARED=
   _INTMAX_T_DECLARED=
   _INTPTR_T_DECLARED=
   _IOFBF=0
   _IOLBF=1
   _IONBF=2
   _KEY_T_DECLARED=
   _Kmax=(sizeof (size_t) << 3)
   _LDBL_EQ_DBL=1
   _LOCK_RECURSIVE_T=_LOCK_T
   _LONG_DOUBLE=long double
   _MACHINE__DEFAULT_TYPES_H=
   _MACHINE__TYPES_H=
   _MB_LEN_MAX=1
   _MODE_T_DECLARED=
   _NEWLIB_STDIO_H=
   _NEWLIB_VERSION="2.5.0"
   _NEWLIB_VERSION_H__=1
   _NLINK_T_DECLARED=
   _NOARGS=void
   _NOINLINE=__attribute__ ((__noinline__))
   _NOINLINE_STATIC=_NOINLINE static
   _Noreturn=[[noreturn]]
   _NOTHROW=__attribute__ ((__nothrow__))
   _NULL=0
   _OFF_T_DECLARED=
   _PARAMS(paramlist)=paramlist
   _PID_T_DECLARED=
   _POINTER_INT=long
   _PTR=void *
   _PTRDIFF_T=
   _PTRDIFF_T_=
   _PTRDIFF_T_DECLARED=
   _RAND48_ADD=(0x000b)
   _RAND48_MULT_0=(0xe66d)
   _RAND48_MULT_1=(0xdeec)
   _RAND48_MULT_2=(0x0005)
   _RAND48_SEED_0=(0x330e)
   _RAND48_SEED_1=(0xabcd)
   _RAND48_SEED_2=(0x1234)
   _READ_WRITE_BUFSIZE_TYPE=int
   _READ_WRITE_RETURN_TYPE=int
   _REENT=_impure_ptr
   _REENT_ASCTIME_BUF(ptr)=((ptr)->_asctime_buf)
   _REENT_ASCTIME_SIZE=26
   _REENT_CHECK(var,what,type,size,init)=do { struct _reent *_r = (var); if (_r->what == NULL) { _r->what = (type)malloc(size); __reent_assert(_r->what); init; } } while (0)
   _REENT_CHECK_ASCTIME_BUF(var)=_REENT_CHECK(var, _asctime_buf, char *, _REENT_ASCTIME_SIZE, memset((var)->_asctime_buf, 0, _REENT_ASCTIME_SIZE))
   _REENT_CHECK_EMERGENCY(var)=_REENT_CHECK(var, _emergency, char *, _REENT_EMERGENCY_SIZE, )
   _REENT_CHECK_MISC(var)=_REENT_CHECK(var, _misc, struct _misc_reent *, sizeof *((var)->_misc), _REENT_INIT_MISC(var))
   _REENT_CHECK_MP(var)=_REENT_CHECK(var, _mp, struct _mprec *, sizeof *((var)->_mp), _REENT_INIT_MP(var))
   _REENT_CHECK_RAND48(var)=_REENT_CHECK(var, _r48, struct _rand48 *, sizeof *((var)->_r48), _REENT_INIT_RAND48((var)))
   _REENT_CHECK_SIGNAL_BUF(var)=_REENT_CHECK(var, _signal_buf, char *, _REENT_SIGNAL_SIZE, )
   _REENT_CHECK_TM(var)=_REENT_CHECK(var, _localtime_buf, struct __tm *, sizeof *((var)->_localtime_buf), )
   _REENT_EMERGENCY(ptr)=((ptr)->_emergency)
   _REENT_EMERGENCY_SIZE=25
   _REENT_GETDATE_ERR_P(ptr)=(&((ptr)->_misc->_getdate_err))
   _REENT_INIT(var)={ 0, (__FILE *)&__sf_fake_stdin, (__FILE *)&__sf_fake_stdout, (__FILE *)&__sf_fake_stderr, 0, _NULL, 0, 0, _NULL, _NULL, _NULL, 0, 0, _NULL, _NULL, _NULL, _NULL, _NULL, _REENT_INIT_ATEXIT {_NULL, 0, _NULL}, _NULL, _NULL, _NULL }
   _REENT_INIT_ATEXIT=_NULL, _ATEXIT_INIT,
   _REENT_INIT_MISC(var)=do { struct _reent *_r = (var); _r->_misc->_strtok_last = _NULL; _r->_misc->_mblen_state.__count = 0; _r->_misc->_mblen_state.__value.__wch = 0; _r->_misc->_wctomb_state.__count = 0; _r->_misc->_wctomb_state.__value.__wch = 0; _r->_misc->_mbtowc_state.__count = 0; _r->_misc->_mbtowc_state.__value.__wch = 0; _r->_misc->_mbrlen_state.__count = 0; _r->_misc->_mbrlen_state.__value.__wch = 0; _r->_misc->_mbrtowc_state.__count = 0; _r->_misc->_mbrtowc_state.__value.__wch = 0; _r->_misc->_mbsrtowcs_state.__count = 0; _r->_misc->_mbsrtowcs_state.__value.__wch = 0; _r->_misc->_wcrtomb_state.__count = 0; _r->_misc->_wcrtomb_state.__value.__wch = 0; _r->_misc->_wcsrtombs_state.__count = 0; _r->_misc->_wcsrtombs_state.__value.__wch = 0; _r->_misc->_l64a_buf[0] = '\0'; _r->_misc->_getdate_err = 0; } while (0)
   _REENT_INIT_MP(var)=do { struct _reent *_r = (var); _r->_mp->_result_k = 0; _r->_mp->_result = _r->_mp->_p5s = _NULL; _r->_mp->_freelist = _NULL; } while (0)
   _REENT_INIT_PTR(var)={ memset((var), 0, sizeof(*(var))); _REENT_INIT_PTR_ZEROED(var); }
   _REENT_INIT_PTR_ZEROED(var)={ (var)->_stdin = (__FILE *)&__sf_fake_stdin; (var)->_stdout = (__FILE *)&__sf_fake_stdout; (var)->_stderr = (__FILE *)&__sf_fake_stderr; }
   _REENT_INIT_RAND48(var)=do { struct _reent *_r = (var); _r->_r48->_seed[0] = _RAND48_SEED_0; _r->_r48->_seed[1] = _RAND48_SEED_1; _r->_r48->_seed[2] = _RAND48_SEED_2; _r->_r48->_mult[0] = _RAND48_MULT_0; _r->_r48->_mult[1] = _RAND48_MULT_1; _r->_r48->_mult[2] = _RAND48_MULT_2; _r->_r48->_add = _RAND48_ADD; _r->_r48->_rand_next = 1; } while (0)
   _REENT_L64A_BUF(ptr)=((ptr)->_misc->_l64a_buf)
   _REENT_MBLEN_STATE(ptr)=((ptr)->_misc->_mblen_state)
   _REENT_MBRLEN_STATE(ptr)=((ptr)->_misc->_mbrlen_state)
   _REENT_MBRTOWC_STATE(ptr)=((ptr)->_misc->_mbrtowc_state)
   _REENT_MBSRTOWCS_STATE(ptr)=((ptr)->_misc->_mbsrtowcs_state)
   _REENT_MBTOWC_STATE(ptr)=((ptr)->_misc->_mbtowc_state)
   _REENT_MP_FREELIST(ptr)=((ptr)->_mp->_freelist)
   _REENT_MP_P5S(ptr)=((ptr)->_mp->_p5s)
   _REENT_MP_RESULT(ptr)=((ptr)->_mp->_result)
   _REENT_MP_RESULT_K(ptr)=((ptr)->_mp->_result_k)
   _REENT_RAND48_ADD(ptr)=((ptr)->_r48->_add)
   _REENT_RAND48_MULT(ptr)=((ptr)->_r48->_mult)
   _REENT_RAND48_SEED(ptr)=((ptr)->_r48->_seed)
   _REENT_RAND_NEXT(ptr)=((ptr)->_r48->_rand_next)
   _REENT_SIGNAL_BUF(ptr)=((ptr)->_signal_buf)
   _REENT_SIGNAL_SIZE=24
   _REENT_SIGNGAM(ptr)=((ptr)->_gamma_signgam)
   _REENT_SMALL=
   _REENT_SMALL_CHECK_INIT(ptr)=do { if ((ptr) && !(ptr)->__sdidinit) __sinit (ptr); } while (0)
   _REENT_STRTOK_LAST(ptr)=((ptr)->_misc->_strtok_last)
   _REENT_TM(ptr)=((ptr)->_localtime_buf)
   _REENT_WCRTOMB_STATE(ptr)=((ptr)->_misc->_wcrtomb_state)
   _REENT_WCSRTOMBS_STATE(ptr)=((ptr)->_misc->_wcsrtombs_state)
   _REENT_WCTOMB_STATE(ptr)=((ptr)->_misc->_wctomb_state)
   _RETARGETABLE_LOCKING=1
   _SIGNED=signed
   _SIZET_=
   _SIZE_T=
   _SIZE_T_=
   _SIZE_T_DECLARED=
   _SIZE_T_DEFINED=
   _SIZE_T_DEFINED_=
   _SSIZE_T_DECLARED=
   _Static_assert(x,y)=static_assert(x, y)
   _STDDEF_H=
   _STDDEF_H_=
   _stderr_r(x)=((x)->_stderr)
   _stdin_r(x)=((x)->_stdin)
   _STDIO_H_=
   _stdout_r(x)=((x)->_stdout)
   _SUSECONDS_T_DECLARED=
   _SYS_CDEFS_H_=
   _SYS_FEATURES_H=
   _SYS_REENT_H_=
   _SYS_SIZE_T_H=
   _SYS_TYPES_H=
   _SYS__PTHREADTYPES_H_=
   _SYS__STDINT_H=
   _SYS__TYPES_H=
   _Thread_local=thread_local
   _TIMER_T_=unsigned long
   _TIMER_T_DECLARED=
   _TIME_T_=long
   _TIME_T_DECLARED=
   _T_PTRDIFF=
   _T_PTRDIFF_=
   _T_SIZE=
   _T_SIZE_=
   _T_WCHAR=
   _T_WCHAR_=
   _UID_T_DECLARED=
   _UINT16_T_DECLARED=
   _UINT32_T_DECLARED=
   _UINT64_T_DECLARED=
   _UINT8_T_DECLARED=
   _UINTMAX_T_DECLARED=
   _UINTPTR_T_DECLARED=
   _UNBUF_STREAM_OPT=1
   _USECONDS_T_DECLARED=
   _VOID=void
   _VOLATILE=volatile
   _WANT_IO_LONG_LONG=1
   _WANT_REENT_SMALL=1
   _WCHAR_T=
   _WCHAR_T_=
   _WCHAR_T_DECLARED=
   _WCHAR_T_DEFINED=
   _WCHAR_T_DEFINED_=
   _WCHAR_T_H=
   _WIDE_ORIENT=1
   _WINT_T=
   __aligned(x)=__attribute__((__aligned__(x)))
   __ALIGN_BEGIN=
   __ALIGN_END=__attribute__ ((aligned (4)))
   __alloc_align(x)=__attribute__((__alloc_align__(x)))
   __alloc_size(x)=__attribute__((__alloc_size__(x)))
   __always_inline=__attribute__((__always_inline__))
   __arg_type_tag(arg_kind,arg_idx,type_tag_idx)=
   __ASMNAME(cname)=__XSTRING (__USER_LABEL_PREFIX__) cname
   __asserts_exclusive(...)=__lock_annotate(assert_exclusive_lock(__VA_ARGS__))
   __asserts_shared(...)=__lock_annotate(assert_shared_lock(__VA_ARGS__))
   __ATFILE_VISIBLE=0
   __attribute_format_strfmon__(a,b)=
   __ATTRIBUTE_IMPURE_PTR__=
   __attribute_malloc__=
   __attribute_pure__=
   __BEGIN_DECLS=extern "C" {
   __BIT_TYPES_DEFINED__=1
   __bounded=
   __BSD_VISIBLE=0
   __builtin_constant_p(exp)=0
   __builtin_offsetof(T,m)=(reinterpret_cast <size_t>(&reinterpret_cast <const volatile char &>(static_cast<T*> (0)->m)))
   __builtin_types_compatible_p(x,y)=__builtin_types_compatible_p(sizeof(x),sizeof(y))
   __builtin_va_arg(ap,type)=*(typeof(type) *)ap
   __caddr_t_defined=
   __CC_SUPPORTS_DYNAMIC_ARRAY_INIT=1
   __CC_SUPPORTS_INLINE=1
   __CC_SUPPORTS_VARADIC_XXX=1
   __CC_SUPPORTS_WARNING=1
   __CC_SUPPORTS___FUNC__=1
   __CC_SUPPORTS___INLINE=1
   __CC_SUPPORTS___INLINE__=1
   __CDT_PARSER__=1
   __clockid_t_defined=
   __clock_t_defined=
   __compiler_membar()=__asm __volatile(" " : : : "memory")
   __complex__=_Complex
   __CONCAT(x,y)=__CONCAT1(x,y)
   __CONCAT1(x,y)=x ## y
   __const=const
   __containerof(x,s,m)=({ const volatile __typeof(((s *)0)->m) *__x = (x); __DEQUALIFY(s *, (const volatile char *)__x - __offsetof(s, m));})
   __COPYRIGHT(s)=struct __hack
   __COUNTER__=0
   __daddr_t_defined=
   __datatype_type_tag(kind,type)=
   __DATE__="Dec 25 2018"
   __dead2=__attribute__((__noreturn__))
   __DECONST(type,var)=((type)(__uintptr_t)(const void *)(var))
   __DEQUALIFY(type,var)=((type)(__uintptr_t)(const volatile void *)(var))
   __DEVOLATILE(type,var)=((type)(__uintptr_t)(volatile void *)(var))
   __DOTS=, ...
   __END_DECLS=}
   __EXP(x)=__##x##__
   __EXPORT=
   __exported=__attribute__((__visibility__("default")))
   __extension__=
   __fastcall=__attribute__((__fastcall__))
   __FBSDID(s)=struct __hack
   __FILE_defined=
   __FILE__="file"
   __flexarr=[0]
   __format_arg(fmtarg)=__attribute__((__format_arg__ (fmtarg)))
   __GNUCLIKE_ASM=3
   __GNUCLIKE_BUILTIN_CONSTANT_P=1
   __GNUCLIKE_BUILTIN_MEMCPY=1
   __GNUCLIKE_BUILTIN_NEXT_ARG=1
   __GNUCLIKE_BUILTIN_STDARG=1
   __GNUCLIKE_BUILTIN_VAALIST=1
   __GNUCLIKE_BUILTIN_VARARGS=1
   __GNUCLIKE_CTOR_SECTION_HANDLING=1
   __GNUCLIKE_MATH_BUILTIN_CONSTANTS=
   __GNUCLIKE_MATH_BUILTIN_RELOPS=
   __GNUCLIKE___OFFSETOF=1
   __GNUCLIKE___SECTION=1
   __GNUCLIKE___TYPEOF=1
   __GNUC_PREREQ(maj,min)=((__GNUC__ << 16) + __GNUC_MINOR__ >= ((maj) << 16) + (min))
   __GNUC_PREREQ__(ma,mi)=__GNUC_PREREQ(ma, mi)
   __GNUC_VA_LIST=
   __GNUC_VA_LIST_COMPATIBILITY=1
   __gnu_inline=__attribute__((__gnu_inline__, __artificial__))
   __GNU_VISIBLE=0
   __guarded_by(x)=__lock_annotate(guarded_by(x))
   __HAL_AFIO_REMAP_ADC1_ETRGINJ_DISABLE()=AFIO_REMAP_DISABLE(AFIO_MAPR_ADC1_ETRGINJ_REMAP)
   __HAL_AFIO_REMAP_ADC1_ETRGINJ_ENABLE()=AFIO_REMAP_ENABLE(AFIO_MAPR_ADC1_ETRGINJ_REMAP)
   __HAL_AFIO_REMAP_ADC1_ETRGREG_DISABLE()=AFIO_REMAP_DISABLE(AFIO_MAPR_ADC1_ETRGREG_REMAP)
   __HAL_AFIO_REMAP_ADC1_ETRGREG_ENABLE()=AFIO_REMAP_ENABLE(AFIO_MAPR_ADC1_ETRGREG_REMAP)
   __HAL_AFIO_REMAP_I2C1_DISABLE()=AFIO_REMAP_DISABLE(AFIO_MAPR_I2C1_REMAP)
   __HAL_AFIO_REMAP_I2C1_ENABLE()=AFIO_REMAP_ENABLE(AFIO_MAPR_I2C1_REMAP)
   __HAL_AFIO_REMAP_PD01_DISABLE()=AFIO_REMAP_DISABLE(AFIO_MAPR_PD01_REMAP)
   __HAL_AFIO_REMAP_PD01_ENABLE()=AFIO_REMAP_ENABLE(AFIO_MAPR_PD01_REMAP)
   __HAL_AFIO_REMAP_SPI1_DISABLE()=AFIO_REMAP_DISABLE(AFIO_MAPR_SPI1_REMAP)
   __HAL_AFIO_REMAP_SPI1_ENABLE()=AFIO_REMAP_ENABLE(AFIO_MAPR_SPI1_REMAP)
   __HAL_AFIO_REMAP_SWJ_DISABLE()=AFIO_DBGAFR_CONFIG(AFIO_MAPR_SWJ_CFG_DISABLE)
   __HAL_AFIO_REMAP_SWJ_ENABLE()=AFIO_DBGAFR_CONFIG(AFIO_MAPR_SWJ_CFG_RESET)
   __HAL_AFIO_REMAP_SWJ_NOJTAG()=AFIO_DBGAFR_CONFIG(AFIO_MAPR_SWJ_CFG_JTAGDISABLE)
   __HAL_AFIO_REMAP_SWJ_NONJTRST()=AFIO_DBGAFR_CONFIG(AFIO_MAPR_SWJ_CFG_NOJNTRST)
   __HAL_AFIO_REMAP_TIM1_DISABLE()=AFIO_REMAP_PARTIAL(AFIO_MAPR_TIM1_REMAP_NOREMAP, AFIO_MAPR_TIM1_REMAP_FULLREMAP)
   __HAL_AFIO_REMAP_TIM1_ENABLE()=AFIO_REMAP_PARTIAL(AFIO_MAPR_TIM1_REMAP_FULLREMAP, AFIO_MAPR_TIM1_REMAP_FULLREMAP)
   __HAL_AFIO_REMAP_TIM1_PARTIAL()=AFIO_REMAP_PARTIAL(AFIO_MAPR_TIM1_REMAP_PARTIALREMAP, AFIO_MAPR_TIM1_REMAP_FULLREMAP)
   __HAL_AFIO_REMAP_TIM2_DISABLE()=AFIO_REMAP_PARTIAL(AFIO_MAPR_TIM2_REMAP_NOREMAP, AFIO_MAPR_TIM2_REMAP_FULLREMAP)
   __HAL_AFIO_REMAP_TIM2_ENABLE()=AFIO_REMAP_PARTIAL(AFIO_MAPR_TIM2_REMAP_FULLREMAP, AFIO_MAPR_TIM2_REMAP_FULLREMAP)
   __HAL_AFIO_REMAP_TIM2_PARTIAL_1()=AFIO_REMAP_PARTIAL(AFIO_MAPR_TIM2_REMAP_PARTIALREMAP1, AFIO_MAPR_TIM2_REMAP_FULLREMAP)
   __HAL_AFIO_REMAP_TIM2_PARTIAL_2()=AFIO_REMAP_PARTIAL(AFIO_MAPR_TIM2_REMAP_PARTIALREMAP2, AFIO_MAPR_TIM2_REMAP_FULLREMAP)
   __HAL_AFIO_REMAP_TIM3_DISABLE()=AFIO_REMAP_PARTIAL(AFIO_MAPR_TIM3_REMAP_NOREMAP, AFIO_MAPR_TIM3_REMAP_FULLREMAP)
   __HAL_AFIO_REMAP_TIM3_ENABLE()=AFIO_REMAP_PARTIAL(AFIO_MAPR_TIM3_REMAP_FULLREMAP, AFIO_MAPR_TIM3_REMAP_FULLREMAP)
   __HAL_AFIO_REMAP_TIM3_PARTIAL()=AFIO_REMAP_PARTIAL(AFIO_MAPR_TIM3_REMAP_PARTIALREMAP, AFIO_MAPR_TIM3_REMAP_FULLREMAP)
   __HAL_AFIO_REMAP_TIM4_DISABLE()=AFIO_REMAP_DISABLE(AFIO_MAPR_TIM4_REMAP)
   __HAL_AFIO_REMAP_TIM4_ENABLE()=AFIO_REMAP_ENABLE(AFIO_MAPR_TIM4_REMAP)
   __HAL_AFIO_REMAP_USART1_DISABLE()=AFIO_REMAP_DISABLE(AFIO_MAPR_USART1_REMAP)
   __HAL_AFIO_REMAP_USART1_ENABLE()=AFIO_REMAP_ENABLE(AFIO_MAPR_USART1_REMAP)
   __HAL_AFIO_REMAP_USART2_DISABLE()=AFIO_REMAP_DISABLE(AFIO_MAPR_USART2_REMAP)
   __HAL_AFIO_REMAP_USART2_ENABLE()=AFIO_REMAP_ENABLE(AFIO_MAPR_USART2_REMAP)
   __HAL_AFIO_REMAP_USART3_DISABLE()=AFIO_REMAP_PARTIAL(AFIO_MAPR_USART3_REMAP_NOREMAP, AFIO_MAPR_USART3_REMAP_FULLREMAP)
   __HAL_AFIO_REMAP_USART3_ENABLE()=AFIO_REMAP_PARTIAL(AFIO_MAPR_USART3_REMAP_FULLREMAP, AFIO_MAPR_USART3_REMAP_FULLREMAP)
   __HAL_AFIO_REMAP_USART3_PARTIAL()=AFIO_REMAP_PARTIAL(AFIO_MAPR_USART3_REMAP_PARTIALREMAP, AFIO_MAPR_USART3_REMAP_FULLREMAP)
   __HAL_DBGMCU_FREEZE_I2C1_TIMEOUT()=SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_I2C1_SMBUS_TIMEOUT)
   __HAL_DBGMCU_FREEZE_IWDG()=SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_IWDG_STOP)
   __HAL_DBGMCU_FREEZE_TIM2()=SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_TIM2_STOP)
   __HAL_DBGMCU_FREEZE_TIM3()=SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_TIM3_STOP)
   __HAL_DBGMCU_FREEZE_WWDG()=SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_WWDG_STOP)
   __HAL_DBGMCU_UNFREEZE_I2C1_TIMEOUT()=CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_I2C1_SMBUS_TIMEOUT)
   __HAL_DBGMCU_UNFREEZE_IWDG()=CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_IWDG_STOP)
   __HAL_DBGMCU_UNFREEZE_TIM2()=CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_TIM2_STOP)
   __HAL_DBGMCU_UNFREEZE_TIM3()=CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_TIM3_STOP)
   __HAL_DBGMCU_UNFREEZE_WWDG()=CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_WWDG_STOP)
   __HAL_DMA_CLEAR_FLAG(__HANDLE__,__FLAG__)=(DMA1->IFCR = (__FLAG__))
   __HAL_DMA_DISABLE(__HANDLE__)=(CLEAR_BIT((__HANDLE__)->Instance->CCR, DMA_CCR_EN))
   __HAL_DMA_DISABLE_IT(__HANDLE__,__INTERRUPT__)=(CLEAR_BIT((__HANDLE__)->Instance->CCR , (__INTERRUPT__)))
   __HAL_DMA_ENABLE(__HANDLE__)=(SET_BIT((__HANDLE__)->Instance->CCR, DMA_CCR_EN))
   __HAL_DMA_ENABLE_IT(__HANDLE__,__INTERRUPT__)=(SET_BIT((__HANDLE__)->Instance->CCR, (__INTERRUPT__)))
   __HAL_DMA_GET_COUNTER(__HANDLE__)=((__HANDLE__)->Instance->CNDTR)
   __HAL_DMA_GET_FLAG(__HANDLE__,__FLAG__)=(DMA1->ISR & (__FLAG__))
   __HAL_DMA_GET_GI_FLAG_INDEX(__HANDLE__)=(((uint32_t)((__HANDLE__)->Instance) == ((uint32_t)DMA1_Channel1))? DMA_FLAG_GL1 : ((uint32_t)((__HANDLE__)->Instance) == ((uint32_t)DMA1_Channel2))? DMA_FLAG_GL2 : ((uint32_t)((__HANDLE__)->Instance) == ((uint32_t)DMA1_Channel3))? DMA_FLAG_GL3 : ((uint32_t)((__HANDLE__)->Instance) == ((uint32_t)DMA1_Channel4))? DMA_FLAG_GL4 : ((uint32_t)((__HANDLE__)->Instance) == ((uint32_t)DMA1_Channel5))? DMA_FLAG_GL5 : ((uint32_t)((__HANDLE__)->Instance) == ((uint32_t)DMA1_Channel6))? DMA_FLAG_GL6 : DMA_FLAG_GL7)
   __HAL_DMA_GET_HT_FLAG_INDEX(__HANDLE__)=(((uint32_t)((__HANDLE__)->Instance) == ((uint32_t)DMA1_Channel1))? DMA_FLAG_HT1 : ((uint32_t)((__HANDLE__)->Instance) == ((uint32_t)DMA1_Channel2))? DMA_FLAG_HT2 : ((uint32_t)((__HANDLE__)->Instance) == ((uint32_t)DMA1_Channel3))? DMA_FLAG_HT3 : ((uint32_t)((__HANDLE__)->Instance) == ((uint32_t)DMA1_Channel4))? DMA_FLAG_HT4 : ((uint32_t)((__HANDLE__)->Instance) == ((uint32_t)DMA1_Channel5))? DMA_FLAG_HT5 : ((uint32_t)((__HANDLE__)->Instance) == ((uint32_t)DMA1_Channel6))? DMA_FLAG_HT6 : DMA_FLAG_HT7)
   __HAL_DMA_GET_IT_SOURCE(__HANDLE__,__INTERRUPT__)=((((__HANDLE__)->Instance->CCR & (__INTERRUPT__)) == (__INTERRUPT__)) ? SET : RESET)
   __HAL_DMA_GET_TC_FLAG_INDEX(__HANDLE__)=(((uint32_t)((__HANDLE__)->Instance) == ((uint32_t)DMA1_Channel1))? DMA_FLAG_TC1 : ((uint32_t)((__HANDLE__)->Instance) == ((uint32_t)DMA1_Channel2))? DMA_FLAG_TC2 : ((uint32_t)((__HANDLE__)->Instance) == ((uint32_t)DMA1_Channel3))? DMA_FLAG_TC3 : ((uint32_t)((__HANDLE__)->Instance) == ((uint32_t)DMA1_Channel4))? DMA_FLAG_TC4 : ((uint32_t)((__HANDLE__)->Instance) == ((uint32_t)DMA1_Channel5))? DMA_FLAG_TC5 : ((uint32_t)((__HANDLE__)->Instance) == ((uint32_t)DMA1_Channel6))? DMA_FLAG_TC6 : DMA_FLAG_TC7)
   __HAL_DMA_GET_TE_FLAG_INDEX(__HANDLE__)=(((uint32_t)((__HANDLE__)->Instance) == ((uint32_t)DMA1_Channel1))? DMA_FLAG_TE1 : ((uint32_t)((__HANDLE__)->Instance) == ((uint32_t)DMA1_Channel2))? DMA_FLAG_TE2 : ((uint32_t)((__HANDLE__)->Instance) == ((uint32_t)DMA1_Channel3))? DMA_FLAG_TE3 : ((uint32_t)((__HANDLE__)->Instance) == ((uint32_t)DMA1_Channel4))? DMA_FLAG_TE4 : ((uint32_t)((__HANDLE__)->Instance) == ((uint32_t)DMA1_Channel5))? DMA_FLAG_TE5 : ((uint32_t)((__HANDLE__)->Instance) == ((uint32_t)DMA1_Channel6))? DMA_FLAG_TE6 : DMA_FLAG_TE7)
   __HAL_DMA_RESET_HANDLE_STATE(__HANDLE__)=((__HANDLE__)->State = HAL_DMA_STATE_RESET)
   __HAL_FLASH_CLEAR_FLAG(__FLAG__)=do { if ((__FLAG__) == FLASH_FLAG_OPTVERR) { CLEAR_BIT(FLASH->OBR, FLASH_OBR_OPTERR); } else { FLASH->SR = (__FLAG__); } } while(0U)
   __HAL_FLASH_DISABLE_IT(__INTERRUPT__)=(FLASH->CR &= ~(__INTERRUPT__))
   __HAL_FLASH_ENABLE_IT(__INTERRUPT__)=(FLASH->CR |= (__INTERRUPT__))
   __HAL_FLASH_GET_FLAG(__FLAG__)=(((__FLAG__) == FLASH_FLAG_OPTVERR) ? (FLASH->OBR & FLASH_OBR_OPTERR) : (FLASH->SR & (__FLAG__)))
   __HAL_FLASH_HALF_CYCLE_ACCESS_DISABLE()=(FLASH->ACR &= (~FLASH_ACR_HLFCYA))
   __HAL_FLASH_HALF_CYCLE_ACCESS_ENABLE()=(FLASH->ACR |= FLASH_ACR_HLFCYA)
   __HAL_FLASH_PREFETCH_BUFFER_DISABLE()=(FLASH->ACR &= (~FLASH_ACR_PRFTBE))
   __HAL_FLASH_PREFETCH_BUFFER_ENABLE()=(FLASH->ACR |= FLASH_ACR_PRFTBE)
   __HAL_GPIO_EXTI_CLEAR_FLAG(__EXTI_LINE__)=(EXTI->PR = (__EXTI_LINE__))
   __HAL_GPIO_EXTI_CLEAR_IT(__EXTI_LINE__)=(EXTI->PR = (__EXTI_LINE__))
   __HAL_GPIO_EXTI_GENERATE_SWIT(__EXTI_LINE__)=(EXTI->SWIER |= (__EXTI_LINE__))
   __HAL_GPIO_EXTI_GET_FLAG(__EXTI_LINE__)=(EXTI->PR & (__EXTI_LINE__))
   __HAL_GPIO_EXTI_GET_IT(__EXTI_LINE__)=(EXTI->PR & (__EXTI_LINE__))
   __HAL_LINKDMA(__HANDLE__,__PPP_DMA_FIELD__,__DMA_HANDLE__)=do{ (__HANDLE__)->__PPP_DMA_FIELD__ = &(__DMA_HANDLE__); (__DMA_HANDLE__).Parent = (__HANDLE__); } while(0U)
   __HAL_LOCK(__HANDLE__)=do{ if((__HANDLE__)->Lock == HAL_LOCKED) { return HAL_BUSY; } else { (__HANDLE__)->Lock = HAL_LOCKED; } }while (0U)
   __HAL_PWR_CLEAR_FLAG(__FLAG__)=SET_BIT(PWR->CR, ((__FLAG__) << 2))
   __HAL_PWR_GET_FLAG(__FLAG__)=((PWR->CSR & (__FLAG__)) == (__FLAG__))
   __HAL_PWR_PVD_EXTI_CLEAR_FLAG()=(EXTI->PR = (PWR_EXTI_LINE_PVD))
   __HAL_PWR_PVD_EXTI_DISABLE_EVENT()=CLEAR_BIT(EXTI->EMR, PWR_EXTI_LINE_PVD)
   __HAL_PWR_PVD_EXTI_DISABLE_FALLING_EDGE()=CLEAR_BIT(EXTI->FTSR, PWR_EXTI_LINE_PVD)
   __HAL_PWR_PVD_EXTI_DISABLE_IT()=CLEAR_BIT(EXTI->IMR, PWR_EXTI_LINE_PVD)
   __HAL_PWR_PVD_EXTI_DISABLE_RISING_EDGE()=CLEAR_BIT(EXTI->RTSR, PWR_EXTI_LINE_PVD)
   __HAL_PWR_PVD_EXTI_DISABLE_RISING_FALLING_EDGE()=__HAL_PWR_PVD_EXTI_DISABLE_RISING_EDGE();__HAL_PWR_PVD_EXTI_DISABLE_FALLING_EDGE();
   __HAL_PWR_PVD_EXTI_ENABLE_EVENT()=SET_BIT(EXTI->EMR, PWR_EXTI_LINE_PVD)
   __HAL_PWR_PVD_EXTI_ENABLE_FALLING_EDGE()=SET_BIT(EXTI->FTSR, PWR_EXTI_LINE_PVD)
   __HAL_PWR_PVD_EXTI_ENABLE_IT()=SET_BIT(EXTI->IMR, PWR_EXTI_LINE_PVD)
   __HAL_PWR_PVD_EXTI_ENABLE_RISING_EDGE()=SET_BIT(EXTI->RTSR, PWR_EXTI_LINE_PVD)
   __HAL_PWR_PVD_EXTI_ENABLE_RISING_FALLING_EDGE()=__HAL_PWR_PVD_EXTI_ENABLE_RISING_EDGE();__HAL_PWR_PVD_EXTI_ENABLE_FALLING_EDGE();
   __HAL_PWR_PVD_EXTI_GENERATE_SWIT()=SET_BIT(EXTI->SWIER, PWR_EXTI_LINE_PVD)
   __HAL_PWR_PVD_EXTI_GET_FLAG()=(EXTI->PR & (PWR_EXTI_LINE_PVD))
   __HAL_RCC_ADC1_CLK_DISABLE()=(RCC->APB2ENR &= ~(RCC_APB2ENR_ADC1EN))
   __HAL_RCC_ADC1_CLK_ENABLE()=do { __IO uint32_t tmpreg; SET_BIT(RCC->APB2ENR, RCC_APB2ENR_ADC1EN); tmpreg = READ_BIT(RCC->APB2ENR, RCC_APB2ENR_ADC1EN); UNUSED(tmpreg); } while(0U)
   __HAL_RCC_ADC1_FORCE_RESET()=(RCC->APB2RSTR |= (RCC_APB2RSTR_ADC1RST))
   __HAL_RCC_ADC1_IS_CLK_DISABLED()=((RCC->APB2ENR & (RCC_APB2ENR_ADC1EN)) == RESET)
   __HAL_RCC_ADC1_IS_CLK_ENABLED()=((RCC->APB2ENR & (RCC_APB2ENR_ADC1EN)) != RESET)
   __HAL_RCC_ADC1_RELEASE_RESET()=(RCC->APB2RSTR &= ~(RCC_APB2RSTR_ADC1RST))
   __HAL_RCC_ADC_CONFIG(__ADCCLKSOURCE__)=MODIFY_REG(RCC->CFGR, RCC_CFGR_ADCPRE, (uint32_t)(__ADCCLKSOURCE__))
   __HAL_RCC_AFIO_CLK_DISABLE()=(RCC->APB2ENR &= ~(RCC_APB2ENR_AFIOEN))
   __HAL_RCC_AFIO_CLK_ENABLE()=do { __IO uint32_t tmpreg; SET_BIT(RCC->APB2ENR, RCC_APB2ENR_AFIOEN); tmpreg = READ_BIT(RCC->APB2ENR, RCC_APB2ENR_AFIOEN); UNUSED(tmpreg); } while(0U)
   __HAL_RCC_AFIO_FORCE_RESET()=(RCC->APB2RSTR |= (RCC_APB2RSTR_AFIORST))
   __HAL_RCC_AFIO_IS_CLK_DISABLED()=((RCC->APB2ENR & (RCC_APB2ENR_AFIOEN)) == RESET)
   __HAL_RCC_AFIO_IS_CLK_ENABLED()=((RCC->APB2ENR & (RCC_APB2ENR_AFIOEN)) != RESET)
   __HAL_RCC_AFIO_RELEASE_RESET()=(RCC->APB2RSTR &= ~(RCC_APB2RSTR_AFIORST))
   __HAL_RCC_APB1_FORCE_RESET()=(RCC->APB2RSTR = 0xFFFFFFFFU)
   __HAL_RCC_APB1_RELEASE_RESET()=(RCC->APB1RSTR = 0x00)
   __HAL_RCC_APB2_FORCE_RESET()=(RCC->APB2RSTR = 0xFFFFFFFFU)
   __HAL_RCC_APB2_RELEASE_RESET()=(RCC->APB2RSTR = 0x00)
   __HAL_RCC_BACKUPRESET_FORCE()=(*(__IO uint32_t *) RCC_BDCR_BDRST_BB = ENABLE)
   __HAL_RCC_BACKUPRESET_RELEASE()=(*(__IO uint32_t *) RCC_BDCR_BDRST_BB = DISABLE)
   __HAL_RCC_BKP_CLK_DISABLE()=(RCC->APB1ENR &= ~(RCC_APB1ENR_BKPEN))
   __HAL_RCC_BKP_CLK_ENABLE()=do { __IO uint32_t tmpreg; SET_BIT(RCC->APB1ENR, RCC_APB1ENR_BKPEN); tmpreg = READ_BIT(RCC->APB1ENR, RCC_APB1ENR_BKPEN); UNUSED(tmpreg); } while(0U)
   __HAL_RCC_BKP_FORCE_RESET()=(RCC->APB1RSTR |= (RCC_APB1RSTR_BKPRST))
   __HAL_RCC_BKP_IS_CLK_DISABLED()=((RCC->APB1ENR & (RCC_APB1ENR_BKPEN)) == RESET)
   __HAL_RCC_BKP_IS_CLK_ENABLED()=((RCC->APB1ENR & (RCC_APB1ENR_BKPEN)) != RESET)
   __HAL_RCC_BKP_RELEASE_RESET()=(RCC->APB1RSTR &= ~(RCC_APB1RSTR_BKPRST))
   __HAL_RCC_CLEAR_IT(__INTERRUPT__)=(*(__IO uint8_t *) RCC_CIR_BYTE2_ADDRESS = (__INTERRUPT__))
   __HAL_RCC_CLEAR_RESET_FLAGS()=(*(__IO uint32_t *)RCC_CSR_RMVF_BB = ENABLE)
   __HAL_RCC_CRC_CLK_DISABLE()=(RCC->AHBENR &= ~(RCC_AHBENR_CRCEN))
   __HAL_RCC_CRC_CLK_ENABLE()=do { __IO uint32_t tmpreg; SET_BIT(RCC->AHBENR, RCC_AHBENR_CRCEN); tmpreg = READ_BIT(RCC->AHBENR, RCC_AHBENR_CRCEN); UNUSED(tmpreg); } while(0U)
   __HAL_RCC_CRC_IS_CLK_DISABLED()=((RCC->AHBENR & (RCC_AHBENR_CRCEN)) == RESET)
   __HAL_RCC_CRC_IS_CLK_ENABLED()=((RCC->AHBENR & (RCC_AHBENR_CRCEN)) != RESET)
   __HAL_RCC_DISABLE_IT(__INTERRUPT__)=(*(__IO uint8_t *) RCC_CIR_BYTE1_ADDRESS &= (uint8_t)(~(__INTERRUPT__)))
   __HAL_RCC_DMA1_CLK_DISABLE()=(RCC->AHBENR &= ~(RCC_AHBENR_DMA1EN))
   __HAL_RCC_DMA1_CLK_ENABLE()=do { __IO uint32_t tmpreg; SET_BIT(RCC->AHBENR, RCC_AHBENR_DMA1EN); tmpreg = READ_BIT(RCC->AHBENR, RCC_AHBENR_DMA1EN); UNUSED(tmpreg); } while(0U)
   __HAL_RCC_DMA1_IS_CLK_DISABLED()=((RCC->AHBENR & (RCC_AHBENR_DMA1EN)) == RESET)
   __HAL_RCC_DMA1_IS_CLK_ENABLED()=((RCC->AHBENR & (RCC_AHBENR_DMA1EN)) != RESET)
   __HAL_RCC_ENABLE_IT(__INTERRUPT__)=(*(__IO uint8_t *) RCC_CIR_BYTE1_ADDRESS |= (__INTERRUPT__))
   __HAL_RCC_FLITF_CLK_DISABLE()=(RCC->AHBENR &= ~(RCC_AHBENR_FLITFEN))
   __HAL_RCC_FLITF_CLK_ENABLE()=do { __IO uint32_t tmpreg; SET_BIT(RCC->AHBENR, RCC_AHBENR_FLITFEN); tmpreg = READ_BIT(RCC->AHBENR, RCC_AHBENR_FLITFEN); UNUSED(tmpreg); } while(0U)
   __HAL_RCC_FLITF_IS_CLK_DISABLED()=((RCC->AHBENR & (RCC_AHBENR_FLITFEN)) == RESET)
   __HAL_RCC_FLITF_IS_CLK_ENABLED()=((RCC->AHBENR & (RCC_AHBENR_FLITFEN)) != RESET)
   __HAL_RCC_GET_ADC_SOURCE()=((uint32_t)(READ_BIT(RCC->CFGR, RCC_CFGR_ADCPRE)))
   __HAL_RCC_GET_FLAG(__FLAG__)=(((((__FLAG__) >> 5U) == CR_REG_INDEX)? RCC->CR : ((((__FLAG__) >> 5U) == BDCR_REG_INDEX)? RCC->BDCR : RCC->CSR)) & (1U << ((__FLAG__) & RCC_FLAG_MASK)))
   __HAL_RCC_GET_IT(__INTERRUPT__)=((RCC->CIR & (__INTERRUPT__)) == (__INTERRUPT__))
   __HAL_RCC_GET_PLL_OSCSOURCE()=((uint32_t)(READ_BIT(RCC->CFGR, RCC_CFGR_PLLSRC)))
   __HAL_RCC_GET_RTC_SOURCE()=(READ_BIT(RCC->BDCR, RCC_BDCR_RTCSEL))
   __HAL_RCC_GET_SYSCLK_SOURCE()=((uint32_t)(READ_BIT(RCC->CFGR,RCC_CFGR_SWS)))
   __HAL_RCC_GPIOA_CLK_DISABLE()=(RCC->APB2ENR &= ~(RCC_APB2ENR_IOPAEN))
   __HAL_RCC_GPIOA_CLK_ENABLE()=do { __IO uint32_t tmpreg; SET_BIT(RCC->APB2ENR, RCC_APB2ENR_IOPAEN); tmpreg = READ_BIT(RCC->APB2ENR, RCC_APB2ENR_IOPAEN); UNUSED(tmpreg); } while(0U)
   __HAL_RCC_GPIOA_FORCE_RESET()=(RCC->APB2RSTR |= (RCC_APB2RSTR_IOPARST))
   __HAL_RCC_GPIOA_IS_CLK_DISABLED()=((RCC->APB2ENR & (RCC_APB2ENR_IOPAEN)) == RESET)
   __HAL_RCC_GPIOA_IS_CLK_ENABLED()=((RCC->APB2ENR & (RCC_APB2ENR_IOPAEN)) != RESET)
   __HAL_RCC_GPIOA_RELEASE_RESET()=(RCC->APB2RSTR &= ~(RCC_APB2RSTR_IOPARST))
   __HAL_RCC_GPIOB_CLK_DISABLE()=(RCC->APB2ENR &= ~(RCC_APB2ENR_IOPBEN))
   __HAL_RCC_GPIOB_CLK_ENABLE()=do { __IO uint32_t tmpreg; SET_BIT(RCC->APB2ENR, RCC_APB2ENR_IOPBEN); tmpreg = READ_BIT(RCC->APB2ENR, RCC_APB2ENR_IOPBEN); UNUSED(tmpreg); } while(0U)
   __HAL_RCC_GPIOB_FORCE_RESET()=(RCC->APB2RSTR |= (RCC_APB2RSTR_IOPBRST))
   __HAL_RCC_GPIOB_IS_CLK_DISABLED()=((RCC->APB2ENR & (RCC_APB2ENR_IOPBEN)) == RESET)
   __HAL_RCC_GPIOB_IS_CLK_ENABLED()=((RCC->APB2ENR & (RCC_APB2ENR_IOPBEN)) != RESET)
   __HAL_RCC_GPIOB_RELEASE_RESET()=(RCC->APB2RSTR &= ~(RCC_APB2RSTR_IOPBRST))
   __HAL_RCC_GPIOC_CLK_DISABLE()=(RCC->APB2ENR &= ~(RCC_APB2ENR_IOPCEN))
   __HAL_RCC_GPIOC_CLK_ENABLE()=do { __IO uint32_t tmpreg; SET_BIT(RCC->APB2ENR, RCC_APB2ENR_IOPCEN); tmpreg = READ_BIT(RCC->APB2ENR, RCC_APB2ENR_IOPCEN); UNUSED(tmpreg); } while(0U)
   __HAL_RCC_GPIOC_FORCE_RESET()=(RCC->APB2RSTR |= (RCC_APB2RSTR_IOPCRST))
   __HAL_RCC_GPIOC_IS_CLK_DISABLED()=((RCC->APB2ENR & (RCC_APB2ENR_IOPCEN)) == RESET)
   __HAL_RCC_GPIOC_IS_CLK_ENABLED()=((RCC->APB2ENR & (RCC_APB2ENR_IOPCEN)) != RESET)
   __HAL_RCC_GPIOC_RELEASE_RESET()=(RCC->APB2RSTR &= ~(RCC_APB2RSTR_IOPCRST))
   __HAL_RCC_GPIOD_CLK_DISABLE()=(RCC->APB2ENR &= ~(RCC_APB2ENR_IOPDEN))
   __HAL_RCC_GPIOD_CLK_ENABLE()=do { __IO uint32_t tmpreg; SET_BIT(RCC->APB2ENR, RCC_APB2ENR_IOPDEN); tmpreg = READ_BIT(RCC->APB2ENR, RCC_APB2ENR_IOPDEN); UNUSED(tmpreg); } while(0U)
   __HAL_RCC_GPIOD_FORCE_RESET()=(RCC->APB2RSTR |= (RCC_APB2RSTR_IOPDRST))
   __HAL_RCC_GPIOD_IS_CLK_DISABLED()=((RCC->APB2ENR & (RCC_APB2ENR_IOPDEN)) == RESET)
   __HAL_RCC_GPIOD_IS_CLK_ENABLED()=((RCC->APB2ENR & (RCC_APB2ENR_IOPDEN)) != RESET)
   __HAL_RCC_GPIOD_RELEASE_RESET()=(RCC->APB2RSTR &= ~(RCC_APB2RSTR_IOPDRST))
   __HAL_RCC_HSE_CONFIG(__STATE__)=do{ if ((__STATE__) == RCC_HSE_ON) { SET_BIT(RCC->CR, RCC_CR_HSEON); } else if ((__STATE__) == RCC_HSE_OFF) { CLEAR_BIT(RCC->CR, RCC_CR_HSEON); CLEAR_BIT(RCC->CR, RCC_CR_HSEBYP); } else if ((__STATE__) == RCC_HSE_BYPASS) { SET_BIT(RCC->CR, RCC_CR_HSEBYP); SET_BIT(RCC->CR, RCC_CR_HSEON); } else { CLEAR_BIT(RCC->CR, RCC_CR_HSEON); CLEAR_BIT(RCC->CR, RCC_CR_HSEBYP); } }while(0U)
   __HAL_RCC_HSE_GET_PREDIV()=READ_BIT(RCC->CFGR, RCC_CFGR_PLLXTPRE)
   __HAL_RCC_HSE_PREDIV_CONFIG(__HSE_PREDIV_VALUE__)=MODIFY_REG(RCC->CFGR,RCC_CFGR_PLLXTPRE, (uint32_t)(__HSE_PREDIV_VALUE__))
   __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(_HSICALIBRATIONVALUE_)=(MODIFY_REG(RCC->CR, RCC_CR_HSITRIM, (uint32_t)(_HSICALIBRATIONVALUE_) << RCC_CR_HSITRIM_Pos))
   __HAL_RCC_HSI_DISABLE()=(*(__IO uint32_t *) RCC_CR_HSION_BB = DISABLE)
   __HAL_RCC_HSI_ENABLE()=(*(__IO uint32_t *) RCC_CR_HSION_BB = ENABLE)
   __HAL_RCC_I2C1_CLK_DISABLE()=(RCC->APB1ENR &= ~(RCC_APB1ENR_I2C1EN))
   __HAL_RCC_I2C1_CLK_ENABLE()=do { __IO uint32_t tmpreg; SET_BIT(RCC->APB1ENR, RCC_APB1ENR_I2C1EN); tmpreg = READ_BIT(RCC->APB1ENR, RCC_APB1ENR_I2C1EN); UNUSED(tmpreg); } while(0U)
   __HAL_RCC_I2C1_FORCE_RESET()=(RCC->APB1RSTR |= (RCC_APB1RSTR_I2C1RST))
   __HAL_RCC_I2C1_IS_CLK_DISABLED()=((RCC->APB1ENR & (RCC_APB1ENR_I2C1EN)) == RESET)
   __HAL_RCC_I2C1_IS_CLK_ENABLED()=((RCC->APB1ENR & (RCC_APB1ENR_I2C1EN)) != RESET)
   __HAL_RCC_I2C1_RELEASE_RESET()=(RCC->APB1RSTR &= ~(RCC_APB1RSTR_I2C1RST))
   __HAL_RCC_LSE_CONFIG(__STATE__)=do{ if ((__STATE__) == RCC_LSE_ON) { SET_BIT(RCC->BDCR, RCC_BDCR_LSEON); } else if ((__STATE__) == RCC_LSE_OFF) { CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSEON); CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSEBYP); } else if ((__STATE__) == RCC_LSE_BYPASS) { SET_BIT(RCC->BDCR, RCC_BDCR_LSEBYP); SET_BIT(RCC->BDCR, RCC_BDCR_LSEON); } else { CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSEON); CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSEBYP); } }while(0U)
   __HAL_RCC_LSI_DISABLE()=(*(__IO uint32_t *) RCC_CSR_LSION_BB = DISABLE)
   __HAL_RCC_LSI_ENABLE()=(*(__IO uint32_t *) RCC_CSR_LSION_BB = ENABLE)
   __HAL_RCC_MCO1_CONFIG(__MCOCLKSOURCE__,__MCODIV__)=MODIFY_REG(RCC->CFGR, RCC_CFGR_MCO, (__MCOCLKSOURCE__))
   __HAL_RCC_PLL_CONFIG(__RCC_PLLSOURCE__,__PLLMUL__)=MODIFY_REG(RCC->CFGR, (RCC_CFGR_PLLSRC | RCC_CFGR_PLLMULL),((__RCC_PLLSOURCE__) | (__PLLMUL__) ))
   __HAL_RCC_PLL_DISABLE()=(*(__IO uint32_t *) RCC_CR_PLLON_BB = DISABLE)
   __HAL_RCC_PLL_ENABLE()=(*(__IO uint32_t *) RCC_CR_PLLON_BB = ENABLE)
   __HAL_RCC_PWR_CLK_DISABLE()=(RCC->APB1ENR &= ~(RCC_APB1ENR_PWREN))
   __HAL_RCC_PWR_CLK_ENABLE()=do { __IO uint32_t tmpreg; SET_BIT(RCC->APB1ENR, RCC_APB1ENR_PWREN); tmpreg = READ_BIT(RCC->APB1ENR, RCC_APB1ENR_PWREN); UNUSED(tmpreg); } while(0U)
   __HAL_RCC_PWR_FORCE_RESET()=(RCC->APB1RSTR |= (RCC_APB1RSTR_PWRRST))
   __HAL_RCC_PWR_IS_CLK_DISABLED()=((RCC->APB1ENR & (RCC_APB1ENR_PWREN)) == RESET)
   __HAL_RCC_PWR_IS_CLK_ENABLED()=((RCC->APB1ENR & (RCC_APB1ENR_PWREN)) != RESET)
   __HAL_RCC_PWR_RELEASE_RESET()=(RCC->APB1RSTR &= ~(RCC_APB1RSTR_PWRRST))
   __HAL_RCC_RTC_CONFIG(__RTC_CLKSOURCE__)=MODIFY_REG(RCC->BDCR, RCC_BDCR_RTCSEL, (__RTC_CLKSOURCE__))
   __HAL_RCC_RTC_DISABLE()=(*(__IO uint32_t *) RCC_BDCR_RTCEN_BB = DISABLE)
   __HAL_RCC_RTC_ENABLE()=(*(__IO uint32_t *) RCC_BDCR_RTCEN_BB = ENABLE)
   __HAL_RCC_SPI1_CLK_DISABLE()=(RCC->APB2ENR &= ~(RCC_APB2ENR_SPI1EN))
   __HAL_RCC_SPI1_CLK_ENABLE()=do { __IO uint32_t tmpreg; SET_BIT(RCC->APB2ENR, RCC_APB2ENR_SPI1EN); tmpreg = READ_BIT(RCC->APB2ENR, RCC_APB2ENR_SPI1EN); UNUSED(tmpreg); } while(0U)
   __HAL_RCC_SPI1_FORCE_RESET()=(RCC->APB2RSTR |= (RCC_APB2RSTR_SPI1RST))
   __HAL_RCC_SPI1_IS_CLK_DISABLED()=((RCC->APB2ENR & (RCC_APB2ENR_SPI1EN)) == RESET)
   __HAL_RCC_SPI1_IS_CLK_ENABLED()=((RCC->APB2ENR & (RCC_APB2ENR_SPI1EN)) != RESET)
   __HAL_RCC_SPI1_RELEASE_RESET()=(RCC->APB2RSTR &= ~(RCC_APB2RSTR_SPI1RST))
   __HAL_RCC_SRAM_CLK_DISABLE()=(RCC->AHBENR &= ~(RCC_AHBENR_SRAMEN))
   __HAL_RCC_SRAM_CLK_ENABLE()=do { __IO uint32_t tmpreg; SET_BIT(RCC->AHBENR, RCC_AHBENR_SRAMEN); tmpreg = READ_BIT(RCC->AHBENR, RCC_AHBENR_SRAMEN); UNUSED(tmpreg); } while(0U)
   __HAL_RCC_SRAM_IS_CLK_DISABLED()=((RCC->AHBENR & (RCC_AHBENR_SRAMEN)) == RESET)
   __HAL_RCC_SRAM_IS_CLK_ENABLED()=((RCC->AHBENR & (RCC_AHBENR_SRAMEN)) != RESET)
   __HAL_RCC_SYSCFG_CLK_DISABLE=__HAL_RCC_AFIO_CLK_DISABLE
   __HAL_RCC_SYSCFG_CLK_ENABLE=__HAL_RCC_AFIO_CLK_ENABLE
   __HAL_RCC_SYSCFG_FORCE_RESET=__HAL_RCC_AFIO_FORCE_RESET
   __HAL_RCC_SYSCFG_RELEASE_RESET=__HAL_RCC_AFIO_RELEASE_RESET
   __HAL_RCC_SYSCLK_CONFIG(__SYSCLKSOURCE__)=MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, (__SYSCLKSOURCE__))
   __HAL_RCC_TIM1_CLK_DISABLE()=(RCC->APB2ENR &= ~(RCC_APB2ENR_TIM1EN))
   __HAL_RCC_TIM1_CLK_ENABLE()=do { __IO uint32_t tmpreg; SET_BIT(RCC->APB2ENR, RCC_APB2ENR_TIM1EN); tmpreg = READ_BIT(RCC->APB2ENR, RCC_APB2ENR_TIM1EN); UNUSED(tmpreg); } while(0U)
   __HAL_RCC_TIM1_FORCE_RESET()=(RCC->APB2RSTR |= (RCC_APB2RSTR_TIM1RST))
   __HAL_RCC_TIM1_IS_CLK_DISABLED()=((RCC->APB2ENR & (RCC_APB2ENR_TIM1EN)) == RESET)
   __HAL_RCC_TIM1_IS_CLK_ENABLED()=((RCC->APB2ENR & (RCC_APB2ENR_TIM1EN)) != RESET)
   __HAL_RCC_TIM1_RELEASE_RESET()=(RCC->APB2RSTR &= ~(RCC_APB2RSTR_TIM1RST))
   __HAL_RCC_TIM2_CLK_DISABLE()=(RCC->APB1ENR &= ~(RCC_APB1ENR_TIM2EN))
   __HAL_RCC_TIM2_CLK_ENABLE()=do { __IO uint32_t tmpreg; SET_BIT(RCC->APB1ENR, RCC_APB1ENR_TIM2EN); tmpreg = READ_BIT(RCC->APB1ENR, RCC_APB1ENR_TIM2EN); UNUSED(tmpreg); } while(0U)
   __HAL_RCC_TIM2_FORCE_RESET()=(RCC->APB1RSTR |= (RCC_APB1RSTR_TIM2RST))
   __HAL_RCC_TIM2_IS_CLK_DISABLED()=((RCC->APB1ENR & (RCC_APB1ENR_TIM2EN)) == RESET)
   __HAL_RCC_TIM2_IS_CLK_ENABLED()=((RCC->APB1ENR & (RCC_APB1ENR_TIM2EN)) != RESET)
   __HAL_RCC_TIM2_RELEASE_RESET()=(RCC->APB1RSTR &= ~(RCC_APB1RSTR_TIM2RST))
   __HAL_RCC_TIM3_CLK_DISABLE()=(RCC->APB1ENR &= ~(RCC_APB1ENR_TIM3EN))
   __HAL_RCC_TIM3_CLK_ENABLE()=do { __IO uint32_t tmpreg; SET_BIT(RCC->APB1ENR, RCC_APB1ENR_TIM3EN); tmpreg = READ_BIT(RCC->APB1ENR, RCC_APB1ENR_TIM3EN); UNUSED(tmpreg); } while(0U)
   __HAL_RCC_TIM3_FORCE_RESET()=(RCC->APB1RSTR |= (RCC_APB1RSTR_TIM3RST))
   __HAL_RCC_TIM3_IS_CLK_DISABLED()=((RCC->APB1ENR & (RCC_APB1ENR_TIM3EN)) == RESET)
   __HAL_RCC_TIM3_IS_CLK_ENABLED()=((RCC->APB1ENR & (RCC_APB1ENR_TIM3EN)) != RESET)
   __HAL_RCC_TIM3_RELEASE_RESET()=(RCC->APB1RSTR &= ~(RCC_APB1RSTR_TIM3RST))
   __HAL_RCC_USART1_CLK_DISABLE()=(RCC->APB2ENR &= ~(RCC_APB2ENR_USART1EN))
   __HAL_RCC_USART1_CLK_ENABLE()=do { __IO uint32_t tmpreg; SET_BIT(RCC->APB2ENR, RCC_APB2ENR_USART1EN); tmpreg = READ_BIT(RCC->APB2ENR, RCC_APB2ENR_USART1EN); UNUSED(tmpreg); } while(0U)
   __HAL_RCC_USART1_FORCE_RESET()=(RCC->APB2RSTR |= (RCC_APB2RSTR_USART1RST))
   __HAL_RCC_USART1_IS_CLK_DISABLED()=((RCC->APB2ENR & (RCC_APB2ENR_USART1EN)) == RESET)
   __HAL_RCC_USART1_IS_CLK_ENABLED()=((RCC->APB2ENR & (RCC_APB2ENR_USART1EN)) != RESET)
   __HAL_RCC_USART1_RELEASE_RESET()=(RCC->APB2RSTR &= ~(RCC_APB2RSTR_USART1RST))
   __HAL_RCC_USART2_CLK_DISABLE()=(RCC->APB1ENR &= ~(RCC_APB1ENR_USART2EN))
   __HAL_RCC_USART2_CLK_ENABLE()=do { __IO uint32_t tmpreg; SET_BIT(RCC->APB1ENR, RCC_APB1ENR_USART2EN); tmpreg = READ_BIT(RCC->APB1ENR, RCC_APB1ENR_USART2EN); UNUSED(tmpreg); } while(0U)
   __HAL_RCC_USART2_FORCE_RESET()=(RCC->APB1RSTR |= (RCC_APB1RSTR_USART2RST))
   __HAL_RCC_USART2_IS_CLK_DISABLED()=((RCC->APB1ENR & (RCC_APB1ENR_USART2EN)) == RESET)
   __HAL_RCC_USART2_IS_CLK_ENABLED()=((RCC->APB1ENR & (RCC_APB1ENR_USART2EN)) != RESET)
   __HAL_RCC_USART2_RELEASE_RESET()=(RCC->APB1RSTR &= ~(RCC_APB1RSTR_USART2RST))
   __HAL_RCC_WWDG_CLK_DISABLE()=(RCC->APB1ENR &= ~(RCC_APB1ENR_WWDGEN))
   __HAL_RCC_WWDG_CLK_ENABLE()=do { __IO uint32_t tmpreg; SET_BIT(RCC->APB1ENR, RCC_APB1ENR_WWDGEN); tmpreg = READ_BIT(RCC->APB1ENR, RCC_APB1ENR_WWDGEN); UNUSED(tmpreg); } while(0U)
   __HAL_RCC_WWDG_FORCE_RESET()=(RCC->APB1RSTR |= (RCC_APB1RSTR_WWDGRST))
   __HAL_RCC_WWDG_IS_CLK_DISABLED()=((RCC->APB1ENR & (RCC_APB1ENR_WWDGEN)) == RESET)
   __HAL_RCC_WWDG_IS_CLK_ENABLED()=((RCC->APB1ENR & (RCC_APB1ENR_WWDGEN)) != RESET)
   __HAL_RCC_WWDG_RELEASE_RESET()=(RCC->APB1RSTR &= ~(RCC_APB1RSTR_WWDGRST))
   __HAL_RESET_HANDLE_STATE(__HANDLE__)=((__HANDLE__)->State = 0U)
   __HAL_TIM_CLEAR_FLAG(__HANDLE__,__FLAG__)=((__HANDLE__)->Instance->SR = ~(__FLAG__))
   __HAL_TIM_CLEAR_IT(__HANDLE__,__INTERRUPT__)=((__HANDLE__)->Instance->SR = ~(__INTERRUPT__))
   __HAL_TIM_DISABLE(__HANDLE__)=do { if (((__HANDLE__)->Instance->CCER & TIM_CCER_CCxE_MASK) == 0U) { if(((__HANDLE__)->Instance->CCER & TIM_CCER_CCxNE_MASK) == 0U) { (__HANDLE__)->Instance->CR1 &= ~(TIM_CR1_CEN); } } } while(0U)
   __HAL_TIM_DISABLE_DMA(__HANDLE__,__DMA__)=((__HANDLE__)->Instance->DIER &= ~(__DMA__))
   __HAL_TIM_DISABLE_IT(__HANDLE__,__INTERRUPT__)=((__HANDLE__)->Instance->DIER &= ~(__INTERRUPT__))
   __HAL_TIM_DISABLE_OCxPRELOAD(__HANDLE__,__CHANNEL__)=(((__CHANNEL__) == TIM_CHANNEL_1) ? ((__HANDLE__)->Instance->CCMR1 &= (uint16_t)~TIM_CCMR1_OC1PE) : ((__CHANNEL__) == TIM_CHANNEL_2) ? ((__HANDLE__)->Instance->CCMR1 &= (uint16_t)~TIM_CCMR1_OC2PE) : ((__CHANNEL__) == TIM_CHANNEL_3) ? ((__HANDLE__)->Instance->CCMR2 &= (uint16_t)~TIM_CCMR2_OC3PE) : ((__HANDLE__)->Instance->CCMR2 &= (uint16_t)~TIM_CCMR2_OC4PE))
   __HAL_TIM_ENABLE(__HANDLE__)=((__HANDLE__)->Instance->CR1|=(TIM_CR1_CEN))
   __HAL_TIM_ENABLE_DMA(__HANDLE__,__DMA__)=((__HANDLE__)->Instance->DIER |= (__DMA__))
   __HAL_TIM_ENABLE_IT(__HANDLE__,__INTERRUPT__)=((__HANDLE__)->Instance->DIER |= (__INTERRUPT__))
   __HAL_TIM_ENABLE_OCxPRELOAD(__HANDLE__,__CHANNEL__)=(((__CHANNEL__) == TIM_CHANNEL_1) ? ((__HANDLE__)->Instance->CCMR1 |= TIM_CCMR1_OC1PE) : ((__CHANNEL__) == TIM_CHANNEL_2) ? ((__HANDLE__)->Instance->CCMR1 |= TIM_CCMR1_OC2PE) : ((__CHANNEL__) == TIM_CHANNEL_3) ? ((__HANDLE__)->Instance->CCMR2 |= TIM_CCMR2_OC3PE) : ((__HANDLE__)->Instance->CCMR2 |= TIM_CCMR2_OC4PE))
   __HAL_TIM_GET_AUTORELOAD(__HANDLE__)=((__HANDLE__)->Instance->ARR)
   __HAL_TIM_GET_CLOCKDIVISION(__HANDLE__)=((__HANDLE__)->Instance->CR1 & TIM_CR1_CKD)
   __HAL_TIM_GET_COMPARE(__HANDLE__,__CHANNEL__)=(*(__IO uint32_t *)(&((__HANDLE__)->Instance->CCR1) + ((__CHANNEL__) >> 2U)))
   __HAL_TIM_GET_COUNTER(__HANDLE__)=((__HANDLE__)->Instance->CNT)
   __HAL_TIM_GET_FLAG(__HANDLE__,__FLAG__)=(((__HANDLE__)->Instance->SR &(__FLAG__)) == (__FLAG__))
   __HAL_TIM_GET_ICPRESCALER(__HANDLE__,__CHANNEL__)=(((__CHANNEL__) == TIM_CHANNEL_1) ? ((__HANDLE__)->Instance->CCMR1 & TIM_CCMR1_IC1PSC) : ((__CHANNEL__) == TIM_CHANNEL_2) ? (((__HANDLE__)->Instance->CCMR1 & TIM_CCMR1_IC2PSC) >> 8U) : ((__CHANNEL__) == TIM_CHANNEL_3) ? ((__HANDLE__)->Instance->CCMR2 & TIM_CCMR2_IC3PSC) : (((__HANDLE__)->Instance->CCMR2 & TIM_CCMR2_IC4PSC)) >> 8U)
   __HAL_TIM_GET_IT_SOURCE(__HANDLE__,__INTERRUPT__)=((((__HANDLE__)->Instance->DIER & (__INTERRUPT__)) == (__INTERRUPT__)) ? SET : RESET)
   __HAL_TIM_IS_TIM_COUNTING_DOWN(__HANDLE__)=(((__HANDLE__)->Instance->CR1 & (TIM_CR1_DIR)) == (TIM_CR1_DIR))
   __HAL_TIM_MOE_DISABLE(__HANDLE__)=do { if (((__HANDLE__)->Instance->CCER & TIM_CCER_CCxE_MASK) == 0U) { if(((__HANDLE__)->Instance->CCER & TIM_CCER_CCxNE_MASK) == 0U) { (__HANDLE__)->Instance->BDTR &= ~(TIM_BDTR_MOE); } } } while(0U)
   __HAL_TIM_MOE_DISABLE_UNCONDITIONALLY(__HANDLE__)=(__HANDLE__)->Instance->BDTR &= ~(TIM_BDTR_MOE)
   __HAL_TIM_MOE_ENABLE(__HANDLE__)=((__HANDLE__)->Instance->BDTR|=(TIM_BDTR_MOE))
   __HAL_TIM_RESET_HANDLE_STATE(__HANDLE__)=((__HANDLE__)->State = HAL_TIM_STATE_RESET)
   __HAL_TIM_SET_AUTORELOAD(__HANDLE__,__AUTORELOAD__)=do{ (__HANDLE__)->Instance->ARR = (__AUTORELOAD__); (__HANDLE__)->Init.Period = (__AUTORELOAD__); } while(0U)
   __HAL_TIM_SET_CAPTUREPOLARITY(__HANDLE__,__CHANNEL__,__POLARITY__)=do{ TIM_RESET_CAPTUREPOLARITY((__HANDLE__), (__CHANNEL__)); TIM_SET_CAPTUREPOLARITY((__HANDLE__), (__CHANNEL__), (__POLARITY__)); }while(0U)
   __HAL_TIM_SET_CLOCKDIVISION(__HANDLE__,__CKD__)=do{ (__HANDLE__)->Instance->CR1 &= (uint16_t)(~TIM_CR1_CKD); (__HANDLE__)->Instance->CR1 |= (__CKD__); (__HANDLE__)->Init.ClockDivision = (__CKD__); } while(0U)
   __HAL_TIM_SET_COMPARE(__HANDLE__,__CHANNEL__,__COMPARE__)=(*(__IO uint32_t *)(&((__HANDLE__)->Instance->CCR1) + ((__CHANNEL__) >> 2U)) = (__COMPARE__))
   __HAL_TIM_SET_COUNTER(__HANDLE__,__COUNTER__)=((__HANDLE__)->Instance->CNT = (__COUNTER__))
   __HAL_TIM_SET_ICPRESCALER(__HANDLE__,__CHANNEL__,__ICPSC__)=do{ TIM_RESET_ICPRESCALERVALUE((__HANDLE__), (__CHANNEL__)); TIM_SET_ICPRESCALERVALUE((__HANDLE__), (__CHANNEL__), (__ICPSC__)); } while(0U)
   __HAL_TIM_SET_PRESCALER(__HANDLE__,__PRESC__)=((__HANDLE__)->Instance->PSC = (__PRESC__))
   __HAL_TIM_URS_DISABLE(__HANDLE__)=((__HANDLE__)->Instance->CR1&=~(TIM_CR1_URS))
   __HAL_TIM_URS_ENABLE(__HANDLE__)=((__HANDLE__)->Instance->CR1|= (TIM_CR1_URS))
   __HAL_UNLOCK(__HANDLE__)=do{ (__HANDLE__)->Lock = HAL_UNLOCKED; }while (0U)
   __has_attribute(x)=0
   __has_builtin(x)=0
   __has_extension=__has_feature
   __has_feature(x)=0
   __have_long32=1
   __have_longlong64=1
   __hidden=__attribute__((__visibility__("hidden")))
   __IEEE_LITTLE_ENDIAN=
   __imag__=(int)
   __IMPORT=
   __inline=inline
   __int16_t_defined=1
   __int32_t_defined=1
   __int64_t_defined=1
   __int8_t_defined=1
   __INT_WCHAR_T_H=
   __ISO_C_VISIBLE=2011
   __LARGEFILE_VISIBLE=0
   __LINE__=1
   __lockable=__lock_annotate(lockable)
   __locks_exclusive(...)=__lock_annotate(exclusive_lock_function(__VA_ARGS__))
   __locks_shared(...)=__lock_annotate(shared_lock_function(__VA_ARGS__))
   __lock_acquire(lock)=__retarget_lock_acquire(lock)
   __lock_acquire_recursive(lock)=__retarget_lock_acquire_recursive(lock)
   __lock_annotate(x)=
   __lock_close(lock)=__retarget_lock_close(lock)
   __lock_close_recursive(lock)=__retarget_lock_close_recursive(lock)
   __LOCK_INIT(class,lock)=extern struct __lock __lock_ ## lock; class _LOCK_T lock = &__lock_ ## lock
   __lock_init(lock)=__retarget_lock_init(&lock)
   __LOCK_INIT_RECURSIVE(class,lock)=__LOCK_INIT(class,lock)
   __lock_init_recursive(lock)=__retarget_lock_init_recursive(&lock)
   __lock_release(lock)=__retarget_lock_release(lock)
   __lock_release_recursive(lock)=__retarget_lock_release_recursive(lock)
   __lock_try_acquire(lock)=__retarget_lock_try_acquire(lock)
   __lock_try_acquire_recursive(lock)=__retarget_lock_try_acquire_recursive(lock)
   __Long=long
   __long_double_t=long double
   __MAIN_H=
   __malloc_like=__attribute__((__malloc__))
   __MISC_VISIBLE=0
   __need_NULL=
   __need_size_t=
   __need_wint_t=
   __need___va_list=
   __NEWLIB_H__=1
   __NEWLIB_MINOR__=5
   __NEWLIB_PATCHLEVEL__=0
   __NEWLIB__=2
   __NOINLINE=__attribute__ ( (noinline) )
   __noinline=__attribute__ ((__noinline__))
   __nonnull(x)=__attribute__((__nonnull__(x)))
   __nonnull_all=__attribute__((__nonnull__))
   __no_lock_analysis=__lock_annotate(no_thread_safety_analysis)
   __null=0
   __offsetof(type,field)=offsetof(type, field)
   __offsetof__(x)=(x)
   __P(protos)=protos
   __packed=__attribute__((__packed__))
   __PMT(args)=args
   __POSIX_VISIBLE=0
   __predict_false(exp)=__builtin_expect((exp), 0)
   __predict_true(exp)=__builtin_expect((exp), 1)
   __printf0like(fmtarg,firstvararg)=
   __printflike(fmtarg,firstvararg)=__attribute__((__format__ (__printf__, fmtarg, firstvararg)))
   __PTRDIFF_T=
   __ptrvalue=
   __ptr_t=void *
   __pt_guarded_by(x)=__lock_annotate(pt_guarded_by(x))
   __pure2=__attribute__((__const__))
   __pure=__attribute__((__pure__))
   __RAM_FUNC=__attribute__((section(".RamFunc")))
   __RAND_MAX=0x7fffffff
   __rangeof(type,start,end)=(__offsetof(type, end) - __offsetof(type, start))
   __RCSID(s)=struct __hack
   __RCSID_SOURCE(s)=struct __hack
   __real__=(int)
   __reent_assert(x)=((void)0)
   __requires_exclusive(...)=__lock_annotate(exclusive_locks_required(__VA_ARGS__))
   __requires_shared(...)=__lock_annotate(shared_locks_required(__VA_ARGS__))
   __requires_unlocked(...)=__lock_annotate(locks_excluded(__VA_ARGS__))
   __restrict=
   __result_use_check=__attribute__((__warn_unused_result__))
   __returns_twice=__attribute__((__returns_twice__))
   __SAPP=0x0100
   __scanflike(fmtarg,firstvararg)=__attribute__((__format__ (__scanf__, fmtarg, firstvararg)))
   __SCCSID(s)=struct __hack
   __sclearerr(p)=((void)((p)->_flags &= ~(__SERR|__SEOF)))
   __section(x)=__attribute__((__section__(x)))
   __sentinel=__attribute__((__sentinel__))
   __SEOF=0x0020
   __SERR=0x0040
   __sfeof(p)=((int)(((p)->_flags & __SEOF) != 0))
   __sferror(p)=((int)(((p)->_flags & __SERR) != 0))
   __sfileno(p)=((p)->_file)
   __sgetc_r(__ptr,__p)=__sgetc_raw_r(__ptr, __p)
   __sgetc_raw_r(__ptr,__f)=(--(__f)->_r < 0 ? __srget_r(__ptr, __f) : (int)(*(__f)->_p++))
   __signed=signed
   __SIZE_T=
   __size_t__=
   __SL64=0x8000
   __SLBF=0x0001
   __SMBF=0x0080
   __SNBF=0x0002
   __SNLK=0x0001
   __SNPT=0x0800
   __SOFF=0x1000
   __SOPT=0x0400
   __SORD=0x2000
   __SRD=0x0004
   __SRW=0x0010
   __SSTR=0x0200
   __stdcall=
   __STM32F1XX_H=
   __STM32F1xx_HAL_CONF_H=
   __STM32F1xx_HAL_CORTEX_H=
   __STM32F1xx_HAL_DEF=
   __STM32F1xx_HAL_DMA_EX_H=
   __STM32F1xx_HAL_DMA_H=
   __STM32F1xx_HAL_FLASH_EX_H=
   __STM32F1xx_HAL_FLASH_H=
   __STM32F1xx_HAL_GPIO_EX_H=
   __STM32F1xx_HAL_GPIO_H=
   __STM32F1xx_HAL_H=
   __STM32F1xx_HAL_PWR_H=
   __STM32F1xx_HAL_RCC_EX_H=
   __STM32F1xx_HAL_RCC_H=
   __STM32F1xx_HAL_TIM_EX_H=
   __STM32F1xx_HAL_TIM_H=
   __STM32F1xx_LL_BUS_H=
   __STM32F1xx_LL_CORTEX_H=
   __STM32F1xx_LL_CRC_H=
   __STM32F1xx_LL_DMA_H=
   __STM32F1xx_LL_EXTI_H=
   __STM32F1xx_LL_GPIO_H=
   __STM32F1xx_LL_PWR_H=
   __STM32F1xx_LL_RCC_H=
   __STM32F1xx_LL_SYSTEM_H=
   __STM32F1xx_LL_TIM_H=
   __STM32F1xx_LL_USART_H=
   __STM32F1xx_LL_UTILS_H=
   __STM32F1_CMSIS_VERSION=((__STM32F1_CMSIS_VERSION_MAIN << 24) |(__STM32F1_CMSIS_VERSION_SUB1 << 16) |(__STM32F1_CMSIS_VERSION_SUB2 << 8 ) |(__STM32F1_CMSIS_VERSION_RC))
   __STM32F1_CMSIS_VERSION_MAIN=(0x04)
   __STM32F1_CMSIS_VERSION_RC=(0x00)
   __STM32F1_CMSIS_VERSION_SUB1=(0x02)
   __STM32F1_CMSIS_VERSION_SUB2=(0x00)
   __strfmonlike(fmtarg,firstvararg)=__attribute__((__format__ (__strfmon__, fmtarg, firstvararg)))
   __strftimelike(fmtarg,firstvararg)=__attribute__((__format__ (__strftime__, fmtarg, firstvararg)))
   __STRING(x)=#x
   __strong_reference(sym,aliassym)=extern __typeof (sym) aliassym __attribute__ ((__alias__ (#sym)))
   __SVID_VISIBLE=0
   __SWID=0x2000
   __SWR=0x0008
   __sym_compat(sym,impl,verid)=__asm__(".symver " #impl ", " #sym "@" #verid)
   __sym_default(sym,impl,verid)=__asm__(".symver " #impl ", " #sym "@@" #verid)
   __SYS_CONFIG_H__=
   __SYS_LOCK_H__=
   __thread=
   __THROW=
   __timer_t_defined=
   __time_t_defined=
   __TIME__="11:47:45"
   __trylocks_exclusive(...)=__lock_annotate(exclusive_trylock_function(__VA_ARGS__))
   __trylocks_shared(...)=__lock_annotate(shared_trylock_function(__VA_ARGS__))
   __unbounded=
   __unlocks(...)=__lock_annotate(unlock_function(__VA_ARGS__))
   __unreachable()=__builtin_unreachable()
   __unused=__attribute__((__unused__))
   __used=__attribute__((__used__))
   __VALIST=__gnuc_va_list
   __volatile=volatile
   __warn_references(sym,msg)=__asm__(".section .gnu.warning." #sym); __asm__(".asciz \"" msg "\""); __asm__(".previous")
   __WCHAR_T=
   __wchar_t__=
   __weak=__attribute__((weak))
   __weak_reference(sym,alias)=__asm__(".weak " #alias); __asm__(".equ " #alias ", " #sym)
   __weak_symbol=__attribute__((__weak__))
   __XSI_VISIBLE=0
   __XSTRING(x)=__STRING(x)
   ___int16_t_defined=1
   ___int32_t_defined=1
   ___int64_t_defined=1
   ___int8_t_defined=1
   ___int_least16_t_defined=1
   ___int_least32_t_defined=1
   ___int_least64_t_defined=1
   ___int_least8_t_defined=1
   ___int_ptrdiff_t_h=
   ___int_size_t_h=
   ___int_wchar_t_h=

Unresolved names:
   Attempt to use symbol failed: CAN_HandleTypeDef in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:14
   Attempt to use symbol failed: GPIOB in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:77
   Attempt to use symbol failed: BSRR in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:77
   Attempt to use symbol failed: GPIO_BSRR_BS0 in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:77
   Attempt to use symbol failed: GPIO_BSRR_BS1 in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:77
   Attempt to use symbol failed: GPIO_BSRR_BS2 in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:77
   Attempt to use symbol failed: GPIOB in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:81
   Attempt to use symbol failed: BSRR in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:81
   Attempt to use symbol failed: GPIO_BSRR_BR0 in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:81
   Attempt to use symbol failed: GPIO_BSRR_BR1 in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:81
   Attempt to use symbol failed: GPIO_BSRR_BR2 in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:81
   Attempt to use symbol failed: LL_TIM_CC_EnableChannel in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:83
   Attempt to use symbol failed: TIM1 in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:83
   Attempt to use symbol failed: LL_TIM_CHANNEL_CH1 in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:83
   Attempt to use symbol failed: LL_TIM_CHANNEL_CH2 in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:83
   Attempt to use symbol failed: LL_TIM_EnableCounter in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:87
   Attempt to use symbol failed: LL_TIM_EnableAllOutputs in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:88
   Attempt to use symbol failed: LL_TIM_EnableCounter in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:90
   Attempt to use symbol failed: GPIOB in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:92
   Attempt to use symbol failed: BSRR in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:92
   Attempt to use symbol failed: GPIO_BSRR_BS15 in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:92
   Attempt to use symbol failed: LL_FLASH_SetLatency in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:138
   Attempt to use symbol failed: LL_FLASH_GetLatency in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:140
   Attempt to use symbol failed: LL_RCC_HSE_Enable in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:144
   Attempt to use symbol failed: LL_RCC_HSE_IsReady in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:147
   Attempt to use symbol failed: LL_RCC_PLL_ConfigDomain_SYS in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:151
   Attempt to use symbol failed: LL_RCC_PLLSOURCE_HSE_DIV_1 in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:151
   Attempt to use symbol failed: LL_RCC_PLL_MUL_9 in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:151
   Attempt to use symbol failed: LL_RCC_PLL_Enable in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:152
   Attempt to use symbol failed: LL_RCC_PLL_IsReady in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:155
   Attempt to use symbol failed: LL_RCC_SetAHBPrescaler in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:159
   Attempt to use symbol failed: LL_RCC_SetAPB1Prescaler in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:160
   Attempt to use symbol failed: LL_RCC_SetAPB2Prescaler in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:161
   Attempt to use symbol failed: LL_RCC_SetSysClkSource in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:162
   Attempt to use symbol failed: LL_RCC_GetSysClkSource in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:165
   Attempt to use symbol failed: LL_RCC_SYS_CLKSOURCE_STATUS_PLL in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:165
   Invalid type encountered in: LL_SYSTICK_SetClkSource  in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:170
   Attempt to use symbol failed: Instance in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:189
   Attempt to use symbol failed: CAN1 in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:189
   Attempt to use symbol failed: Init in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:190
   Attempt to use symbol failed: Prescaler in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:190
   Attempt to use symbol failed: Init in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:191
   Attempt to use symbol failed: Mode in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:191
   Attempt to use symbol failed: CAN_MODE_NORMAL in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:191
   Attempt to use symbol failed: Init in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:192
   Attempt to use symbol failed: SyncJumpWidth in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:192
   Attempt to use symbol failed: CAN_SJW_1TQ in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:192
   Attempt to use symbol failed: Init in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:193
   Attempt to use symbol failed: TimeSeg1 in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:193
   Attempt to use symbol failed: CAN_BS1_1TQ in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:193
   Attempt to use symbol failed: Init in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:194
   Attempt to use symbol failed: TimeSeg2 in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:194
   Attempt to use symbol failed: CAN_BS2_1TQ in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:194
   Attempt to use symbol failed: Init in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:195
   Attempt to use symbol failed: TimeTriggeredMode in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:195
   Attempt to use symbol failed: Init in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:196
   Attempt to use symbol failed: AutoBusOff in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:196
   Attempt to use symbol failed: Init in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:197
   Attempt to use symbol failed: AutoWakeUp in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:197
   Attempt to use symbol failed: Init in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:198
   Attempt to use symbol failed: AutoRetransmission in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:198
   Attempt to use symbol failed: Init in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:199
   Attempt to use symbol failed: ReceiveFifoLocked in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:199
   Attempt to use symbol failed: Init in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:200
   Attempt to use symbol failed: TransmitFifoPriority in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:200
   Attempt to use symbol failed: HAL_CAN_Init in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:201
   Attempt to use symbol failed: LL_AHB1_GRP1_EnableClock in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:224
   Attempt to use symbol failed: LL_TIM_InitTypeDef in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:247
   Attempt to use symbol failed: LL_TIM_OC_InitTypeDef in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:248
   Attempt to use symbol failed: LL_TIM_BDTR_InitTypeDef in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:249
   Attempt to use symbol failed: LL_GPIO_InitTypeDef in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:251
   Attempt to use symbol failed: LL_APB2_GRP1_EnableClock in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:254
   Attempt to use symbol failed: Prescaler in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:258
   Attempt to use symbol failed: CounterMode in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:259
   Attempt to use symbol failed: LL_TIM_COUNTERMODE_UP in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:259
   Attempt to use symbol failed: Autoreload in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:260
   Attempt to use symbol failed: ClockDivision in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:261
   Attempt to use symbol failed: LL_TIM_CLOCKDIVISION_DIV1 in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:261
   Attempt to use symbol failed: RepetitionCounter in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:262
   Attempt to use symbol failed: LL_TIM_Init in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:263
   Attempt to use symbol failed: TIM1 in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:263
   Attempt to use symbol failed: LL_TIM_DisableARRPreload in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:264
   Attempt to use symbol failed: LL_TIM_SetClockSource in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:265
   Attempt to use symbol failed: LL_TIM_CLOCKSOURCE_INTERNAL in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:265
   Attempt to use symbol failed: OCMode in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:266
   Attempt to use symbol failed: LL_TIM_OCMODE_PWM1 in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:266
   Attempt to use symbol failed: OCState in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:267
   Attempt to use symbol failed: LL_TIM_OCSTATE_DISABLE in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:267
   Attempt to use symbol failed: OCNState in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:268
   Attempt to use symbol failed: LL_TIM_OCSTATE_DISABLE in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:268
   Attempt to use symbol failed: CompareValue in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:269
   Attempt to use symbol failed: OCPolarity in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:270
   Attempt to use symbol failed: LL_TIM_OCPOLARITY_HIGH in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:270
   Attempt to use symbol failed: OCNPolarity in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:271
   Attempt to use symbol failed: LL_TIM_OCPOLARITY_HIGH in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:271
   Attempt to use symbol failed: OCIdleState in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:272
   Attempt to use symbol failed: LL_TIM_OCIDLESTATE_LOW in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:272
   Attempt to use symbol failed: OCNIdleState in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:273
   Attempt to use symbol failed: LL_TIM_OCIDLESTATE_LOW in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:273
   Attempt to use symbol failed: LL_TIM_OC_Init in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:274
   Attempt to use symbol failed: LL_TIM_CHANNEL_CH1 in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:274
   Attempt to use symbol failed: LL_TIM_OC_DisableFast in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:275
   Attempt to use symbol failed: LL_TIM_CHANNEL_CH1 in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:275
   Attempt to use symbol failed: OCState in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:276
   Attempt to use symbol failed: LL_TIM_OCSTATE_DISABLE in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:276
   Attempt to use symbol failed: OCNState in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:277
   Attempt to use symbol failed: LL_TIM_OCSTATE_DISABLE in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:277
   Attempt to use symbol failed: LL_TIM_OC_Init in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:278
   Attempt to use symbol failed: LL_TIM_CHANNEL_CH2 in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:278
   Attempt to use symbol failed: LL_TIM_OC_DisableFast in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:279
   Attempt to use symbol failed: LL_TIM_CHANNEL_CH2 in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:279
   Attempt to use symbol failed: LL_TIM_SetTriggerOutput in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:280
   Attempt to use symbol failed: LL_TIM_TRGO_RESET in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:280
   Attempt to use symbol failed: LL_TIM_DisableMasterSlaveMode in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:281
   Attempt to use symbol failed: OSSRState in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:282
   Attempt to use symbol failed: LL_TIM_OSSR_DISABLE in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:282
   Attempt to use symbol failed: OSSIState in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:283
   Attempt to use symbol failed: LL_TIM_OSSI_DISABLE in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:283
   Attempt to use symbol failed: LockLevel in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:284
   Attempt to use symbol failed: LL_TIM_LOCKLEVEL_OFF in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:284
   Attempt to use symbol failed: DeadTime in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:285
   Attempt to use symbol failed: BreakState in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:286
   Attempt to use symbol failed: LL_TIM_BREAK_DISABLE in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:286
   Attempt to use symbol failed: BreakPolarity in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:287
   Attempt to use symbol failed: LL_TIM_BREAK_POLARITY_HIGH in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:287
   Attempt to use symbol failed: AutomaticOutput in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:288
   Attempt to use symbol failed: LL_TIM_AUTOMATICOUTPUT_DISABLE in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:288
   Attempt to use symbol failed: LL_TIM_BDTR_Init in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:289
   Attempt to use symbol failed: LL_APB2_GRP1_EnableClock in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:293
   Attempt to use symbol failed: Pin in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:298
   Attempt to use symbol failed: LL_GPIO_PIN_8 in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:298
   Attempt to use symbol failed: LL_GPIO_PIN_9 in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:298
   Attempt to use symbol failed: Mode in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:299
   Attempt to use symbol failed: LL_GPIO_MODE_ALTERNATE in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:299
   Attempt to use symbol failed: Speed in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:300
   Attempt to use symbol failed: LL_GPIO_SPEED_FREQ_LOW in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:300
   Attempt to use symbol failed: OutputType in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:301
   Attempt to use symbol failed: LL_GPIO_OUTPUT_PUSHPULL in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:301
   Attempt to use symbol failed: LL_GPIO_Init in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:302
   Attempt to use symbol failed: GPIOA in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:302
   Attempt to use symbol failed: LL_TIM_InitTypeDef in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:318
   Attempt to use symbol failed: LL_GPIO_InitTypeDef in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:320
   Attempt to use symbol failed: LL_APB1_GRP1_EnableClock in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:323
   Attempt to use symbol failed: LL_APB2_GRP1_EnableClock in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:325
   Attempt to use symbol failed: Pin in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:330
   Attempt to use symbol failed: LL_GPIO_PIN_0 in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:330
   Attempt to use symbol failed: LL_GPIO_PIN_1 in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:330
   Attempt to use symbol failed: Mode in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:331
   Attempt to use symbol failed: LL_GPIO_MODE_FLOATING in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:331
   Attempt to use symbol failed: LL_GPIO_Init in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:332
   Attempt to use symbol failed: GPIOA in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:332
   Attempt to use symbol failed: LL_TIM_SetEncoderMode in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:337
   Attempt to use symbol failed: TIM2 in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:337
   Attempt to use symbol failed: LL_TIM_ENCODERMODE_X4_TI12 in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:337
   Attempt to use symbol failed: LL_TIM_IC_SetActiveInput in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:338
   Attempt to use symbol failed: TIM2 in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:338
   Attempt to use symbol failed: LL_TIM_CHANNEL_CH1 in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:338
   Attempt to use symbol failed: LL_TIM_ACTIVEINPUT_DIRECTTI in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:338
   Attempt to use symbol failed: LL_TIM_IC_SetPrescaler in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:339
   Attempt to use symbol failed: TIM2 in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:339
   Attempt to use symbol failed: LL_TIM_CHANNEL_CH1 in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:339
   Attempt to use symbol failed: LL_TIM_ICPSC_DIV1 in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:339
   Attempt to use symbol failed: LL_TIM_IC_SetFilter in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:340
   Attempt to use symbol failed: TIM2 in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:340
   Attempt to use symbol failed: LL_TIM_CHANNEL_CH1 in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:340
   Attempt to use symbol failed: LL_TIM_IC_FILTER_FDIV1 in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:340
   Attempt to use symbol failed: LL_TIM_IC_SetPolarity in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:341
   Attempt to use symbol failed: TIM2 in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:341
   Attempt to use symbol failed: LL_TIM_CHANNEL_CH1 in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:341
   Attempt to use symbol failed: LL_TIM_IC_POLARITY_RISING in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:341
   Attempt to use symbol failed: LL_TIM_IC_SetActiveInput in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:342
   Attempt to use symbol failed: TIM2 in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:342
   Attempt to use symbol failed: LL_TIM_CHANNEL_CH2 in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:342
   Attempt to use symbol failed: LL_TIM_ACTIVEINPUT_DIRECTTI in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:342
   Attempt to use symbol failed: LL_TIM_IC_SetPrescaler in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:343
   Attempt to use symbol failed: TIM2 in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:343
   Attempt to use symbol failed: LL_TIM_CHANNEL_CH2 in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:343
   Attempt to use symbol failed: LL_TIM_ICPSC_DIV1 in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:343
   Attempt to use symbol failed: LL_TIM_IC_SetFilter in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:344
   Attempt to use symbol failed: TIM2 in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:344
   Attempt to use symbol failed: LL_TIM_CHANNEL_CH2 in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:344
   Attempt to use symbol failed: LL_TIM_IC_FILTER_FDIV1 in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:344
   Attempt to use symbol failed: LL_TIM_IC_SetPolarity in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:345
   Attempt to use symbol failed: TIM2 in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:345
   Attempt to use symbol failed: LL_TIM_CHANNEL_CH2 in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:345
   Attempt to use symbol failed: LL_TIM_IC_POLARITY_RISING in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:345
   Attempt to use symbol failed: Prescaler in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:346
   Attempt to use symbol failed: CounterMode in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:347
   Attempt to use symbol failed: LL_TIM_COUNTERMODE_UP in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:347
   Attempt to use symbol failed: Autoreload in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:348
   Attempt to use symbol failed: ClockDivision in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:349
   Attempt to use symbol failed: LL_TIM_CLOCKDIVISION_DIV1 in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:349
   Attempt to use symbol failed: LL_TIM_Init in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:350
   Attempt to use symbol failed: TIM2 in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:350
   Attempt to use symbol failed: LL_TIM_DisableARRPreload in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:351
   Attempt to use symbol failed: LL_TIM_SetTriggerOutput in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:352
   Attempt to use symbol failed: LL_TIM_TRGO_RESET in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:352
   Attempt to use symbol failed: LL_TIM_DisableMasterSlaveMode in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:353
   Attempt to use symbol failed: LL_TIM_InitTypeDef in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:372
   Attempt to use symbol failed: LL_APB1_GRP1_EnableClock in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:375
   Attempt to use symbol failed: Prescaler in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:384
   Attempt to use symbol failed: CounterMode in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:385
   Attempt to use symbol failed: LL_TIM_COUNTERMODE_UP in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:385
   Attempt to use symbol failed: Autoreload in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:386
   Attempt to use symbol failed: ClockDivision in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:387
   Attempt to use symbol failed: LL_TIM_CLOCKDIVISION_DIV1 in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:387
   Attempt to use symbol failed: LL_TIM_Init in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:388
   Attempt to use symbol failed: TIM3 in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:388
   Attempt to use symbol failed: LL_TIM_DisableARRPreload in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:389
   Attempt to use symbol failed: LL_TIM_SetClockSource in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:390
   Attempt to use symbol failed: LL_TIM_CLOCKSOURCE_INTERNAL in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:390
   Attempt to use symbol failed: LL_TIM_SetTriggerOutput in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:391
   Attempt to use symbol failed: LL_TIM_TRGO_RESET in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:391
   Attempt to use symbol failed: LL_TIM_DisableMasterSlaveMode in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:392
   Attempt to use symbol failed: LL_USART_InitTypeDef in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:411
   Attempt to use symbol failed: LL_GPIO_InitTypeDef in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:413
   Attempt to use symbol failed: LL_APB2_GRP1_EnableClock in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:416
   Attempt to use symbol failed: LL_APB2_GRP1_EnableClock in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:418
   Attempt to use symbol failed: Pin in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:423
   Attempt to use symbol failed: LL_GPIO_PIN_6 in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:423
   Attempt to use symbol failed: Mode in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:424
   Attempt to use symbol failed: LL_GPIO_MODE_ALTERNATE in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:424
   Attempt to use symbol failed: Speed in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:425
   Attempt to use symbol failed: LL_GPIO_SPEED_FREQ_HIGH in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:425
   Attempt to use symbol failed: OutputType in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:426
   Attempt to use symbol failed: LL_GPIO_OUTPUT_PUSHPULL in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:426
   Attempt to use symbol failed: LL_GPIO_Init in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:427
   Attempt to use symbol failed: GPIOB in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:427
   Attempt to use symbol failed: Pin in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:429
   Attempt to use symbol failed: LL_GPIO_PIN_7 in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:429
   Attempt to use symbol failed: Mode in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:430
   Attempt to use symbol failed: LL_GPIO_MODE_FLOATING in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:430
   Attempt to use symbol failed: LL_GPIO_Init in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:431
   Attempt to use symbol failed: GPIOB in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:431
   Attempt to use symbol failed: LL_GPIO_AF_EnableRemap_USART1 in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:433
   Attempt to use symbol failed: BaudRate in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:438
   Attempt to use symbol failed: DataWidth in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:439
   Attempt to use symbol failed: LL_USART_DATAWIDTH_8B in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:439
   Attempt to use symbol failed: StopBits in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:440
   Attempt to use symbol failed: LL_USART_STOPBITS_1 in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:440
   Attempt to use symbol failed: Parity in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:441
   Attempt to use symbol failed: LL_USART_PARITY_NONE in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:441
   Attempt to use symbol failed: TransferDirection in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:442
   Attempt to use symbol failed: LL_USART_DIRECTION_TX_RX in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:442
   Attempt to use symbol failed: HardwareFlowControl in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:443
   Attempt to use symbol failed: LL_USART_HWCONTROL_NONE in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:443
   Attempt to use symbol failed: LL_USART_Init in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:444
   Attempt to use symbol failed: USART1 in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:444
   Attempt to use symbol failed: LL_USART_ConfigAsyncMode in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:445
   Attempt to use symbol failed: LL_USART_Enable in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:446
   Attempt to use symbol failed: LL_GPIO_InitTypeDef in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:460
   Attempt to use symbol failed: LL_APB2_GRP1_EnableClock in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:463
   Attempt to use symbol failed: LL_APB2_GRP1_EnableClock in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:464
   Attempt to use symbol failed: LL_APB2_GRP1_EnableClock in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:465
   Attempt to use symbol failed: LL_APB2_GRP1_EnableClock in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:466
   Attempt to use symbol failed: LL_GPIO_ResetOutputPin in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:469
   Attempt to use symbol failed: GPIOC in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:469
   Attempt to use symbol failed: LL_GPIO_PIN_13 in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:469
   Attempt to use symbol failed: LL_GPIO_ResetOutputPin in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:472
   Attempt to use symbol failed: GPIOB in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:472
   Attempt to use symbol failed: LL_GPIO_PIN_0 in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:472
   Attempt to use symbol failed: LL_GPIO_PIN_1 in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:472
   Attempt to use symbol failed: LL_GPIO_PIN_2 in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:472
   Attempt to use symbol failed: LL_GPIO_PIN_15 in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:472
   Attempt to use symbol failed: Pin in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:475
   Attempt to use symbol failed: LL_GPIO_PIN_13 in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:475
   Attempt to use symbol failed: Mode in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:476
   Attempt to use symbol failed: LL_GPIO_MODE_OUTPUT in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:476
   Attempt to use symbol failed: Speed in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:477
   Attempt to use symbol failed: LL_GPIO_SPEED_FREQ_LOW in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:477
   Attempt to use symbol failed: OutputType in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:478
   Attempt to use symbol failed: LL_GPIO_OUTPUT_PUSHPULL in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:478
   Attempt to use symbol failed: LL_GPIO_Init in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:479
   Attempt to use symbol failed: GPIOC in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:479
   Attempt to use symbol failed: Pin in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:482
   Attempt to use symbol failed: LL_GPIO_PIN_14 in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:482
   Attempt to use symbol failed: Mode in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:483
   Attempt to use symbol failed: LL_GPIO_MODE_FLOATING in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:483
   Attempt to use symbol failed: LL_GPIO_Init in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:484
   Attempt to use symbol failed: GPIOC in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:484
   Attempt to use symbol failed: Pin in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:487
   Attempt to use symbol failed: LL_GPIO_PIN_0 in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:487
   Attempt to use symbol failed: LL_GPIO_PIN_1 in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:487
   Attempt to use symbol failed: LL_GPIO_PIN_2 in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:487
   Attempt to use symbol failed: LL_GPIO_PIN_15 in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:487
   Attempt to use symbol failed: Mode in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:488
   Attempt to use symbol failed: LL_GPIO_MODE_OUTPUT in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:488
   Attempt to use symbol failed: Speed in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:489
   Attempt to use symbol failed: LL_GPIO_SPEED_FREQ_LOW in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:489
   Attempt to use symbol failed: OutputType in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:490
   Attempt to use symbol failed: LL_GPIO_OUTPUT_PUSHPULL in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:490
   Attempt to use symbol failed: LL_GPIO_Init in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:491
   Attempt to use symbol failed: GPIOB in file /home/yusaku/truestudio-workspace/md201x/Src/main.cpp:491

Written on Tue Dec 25 11:47:45 JST 2018
